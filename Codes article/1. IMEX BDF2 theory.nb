(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1624394,      31921]
NotebookOptionsPosition[   1607478,      31658]
NotebookOutlinePosition[   1607914,      31675]
CellTagsIndexPosition[   1607871,      31672]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["IMEX BDF2 respecto a \[Mu]", "Subsubsection",
 CellChangeTimes->{{3.9228530148370433`*^9, 3.922853017348635*^9}, {
  3.922853239383157*^9, 3.92285324067957*^9}, {3.923475558127775*^9, 
  3.9234755616237803`*^9}, {3.942917781975607*^9, 
  3.9429177832416496`*^9}},ExpressionUUID->"1d365647-1d01-4930-9597-\
b2257568a4e5"],

Cell[TextData[{
 "El ",
 StyleBox["m\[EAcute]todo IMEX BDF2",
  FontWeight->"Bold"],
 " tiene la forma: ",
 Cell[BoxData[
  FormBox[
   FractionBox["3", "2"], TraditionalForm]],ExpressionUUID->
  "a92b08d2-3f6e-4b67-8dd0-4c9cc215a39f"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", 
    RowBox[{"n", "+", "2"}]], TraditionalForm]],ExpressionUUID->
  "c8762746-333e-4570-9488-92ca063a9b18"],
 "-2",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "15e093ee-c7b0-442a-8aaf-b2edee07aaad"],
 "+",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "785d9174-3f7d-4333-a369-dc5a452efa4d"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "n"], TraditionalForm]],ExpressionUUID->
  "5f8286d8-d4a6-4161-ae7d-6acef67803b8"],
 "= -h*\[Lambda]*",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", 
    RowBox[{"n", "+", "2"}]], TraditionalForm]],ExpressionUUID->
  "0aca5ab5-8660-4d13-9e30-eb78eceffd4a"],
 "+h*\[Gamma]*(",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SubscriptBox["y", 
     RowBox[{"n", "+", "1", "-", "m"}]]}], TraditionalForm]],ExpressionUUID->
  "7402c89c-8e85-4cc7-bed3-a38dc7c79be0"],
 "-",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", 
    RowBox[{"n", "-", "m"}]], TraditionalForm]],ExpressionUUID->
  "0db007a3-4188-4cf6-93d8-29e04f1506a4"],
 ")"
}], "Text",
 CellChangeTimes->{{3.924408859904484*^9, 3.924409013475985*^9}, 
   3.925468620294166*^9, 3.927013958279607*^9, {3.9429177852393017`*^9, 
   3.9429177858501816`*^9}},ExpressionUUID->"1958af64-ea1c-4923-bb82-\
df5c0c5ad20d"],

Cell[TextData[{
 "Los ",
 StyleBox["coeficientes",
  FontWeight->"Bold"],
 " son ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], "=", 
    FractionBox["3", "2"]}], TraditionalForm]],ExpressionUUID->
  "a1377951-03f2-45eb-819e-9c7e632a89fc"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], "=", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "b392749c-cc39-4bc2-96be-bdb0e1252597"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], "=", 
    FractionBox["1", "2"]}], TraditionalForm]],ExpressionUUID->
  "611421b8-a4fe-4c16-9504-53bab51f37e5"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "2"], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"f4679bca-0943-47a1-beb9-7c2912a609d7"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "=", 
    RowBox[{
     SubscriptBox["\[Beta]", "0"], "=", "0"}]}], TraditionalForm]],
  ExpressionUUID->"f5d71a62-ea27-4398-9d27-4125e0e46e92"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Beta]", "1"], "*"], "=", "2"}], TraditionalForm]],
  ExpressionUUID->"4daa57b6-0c9a-45c6-97ad-bf077e957e95"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Beta]", "0"], "*"], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "5be42bba-2f35-4792-a25e-940a99ad639e"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "1"], "=", "2"}], TraditionalForm]],
  ExpressionUUID->"a9194181-385e-407e-9a3e-929cf84d2ac1"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "0"], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "f9b6d8dc-8eff-47e5-8cc7-8537c0543852"],
 ". As\[IAcute] tendremos los ",
 StyleBox["polinomios",
  FontWeight->"Bold"],
 " y la ",
 StyleBox["ecuaci\[OAcute]n caracter\[IAcute]stica",
  FontWeight->"Bold"],
 ", tomando m=0 como:"
}], "Text",
 CellChangeTimes->{{3.922853167317267*^9, 3.922853398796051*^9}, {
   3.9228534425216427`*^9, 3.9228534425216427`*^9}, 3.92399589990137*^9, {
   3.9243461415881634`*^9, 
   3.9243461421454906`*^9}},ExpressionUUID->"2ed11cab-2de8-4e70-a4fa-\
56f12a1c8dcb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Este", " ", "es", " ", "el", " ", "n\[UAcute]mero", " ", "de", " ", 
    "pasos", " ", "del", " ", "m\[EAcute]todo"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], "*", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"2", "*", "\[Xi]"}], "+", 
    FractionBox["1", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "\[Xi]_", "]"}], ":=", 
   SuperscriptBox["\[Xi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "*", 
     SuperscriptBox["\[Xi]", 
      RowBox[{"1", "-", "m"}]]}], "-", 
    SuperscriptBox["\[Xi]", 
     RowBox[{"-", "m"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", 
    RowBox[{"\[Xi]_", ",", "z_", ",", "\[Mu]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Xi]", "m"], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "[", "\[Xi]", "]"}], "-", 
       RowBox[{"z", "*", 
        RowBox[{"\[Sigma]", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"z", "*", "\[Mu]", "*", 
     RowBox[{
      SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "z", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{
      SuperscriptBox["E", 
       RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}], "]"}], 
    "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.922853405145758*^9, 3.9228534503915153`*^9}, {
   3.922853519586294*^9, 3.922853653476846*^9}, {3.92285368539306*^9, 
   3.922853833100625*^9}, {3.922853867877204*^9, 3.9228538742953157`*^9}, {
   3.922853942431941*^9, 3.922853943058266*^9}, {3.922854215806406*^9, 
   3.922854227087487*^9}, 3.922854294885339*^9, 3.922854870092189*^9, {
   3.92296557386895*^9, 3.922965577545743*^9}, {3.9229660455731063`*^9, 
   3.9229660512350683`*^9}, 3.923472587313429*^9, {3.923473688835912*^9, 
   3.923473704398117*^9}, {3.9244203340393424`*^9, 3.924420342032791*^9}, {
   3.924420383448053*^9, 3.9244204020382447`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e5531ef9-7d34-4e4a-b989-b156ac774d74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Mu]", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
      "z"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.922853918039882*^9, 3.92285394334543*^9}, 
   3.922854274559502*^9, 3.9228543072299843`*^9, 3.922854883126762*^9, {
   3.922965578071768*^9, 3.922965593590186*^9}, 3.922966073637336*^9, 
   3.922966618259389*^9, 3.9229675497784576`*^9, 3.92296795732087*^9, 
   3.923472522095982*^9, {3.923472588068758*^9, 3.923472600079548*^9}, {
   3.923473694656085*^9, 3.923473704670915*^9}, 3.923474154875841*^9, 
   3.923725505919647*^9, 3.9244204123859386`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e1b4dc22-ac37-4aac-bd62-9896fbc01468"]
}, Open  ]],

Cell[TextData[{
 "Con esto tenemos el conjunto de puntos (z,z\[Mu]) tales que la ra\[IAcute]z \
\[Xi] tiene exactamente m\[OAcute]dulo 1, es decir, es el conjunto de puntos \
de la ",
 StyleBox["curva que delimita la regi\[OAcute]n de estabilidad",
  FontWeight->"Bold"],
 ". As\[IAcute], dibujamos la parte real (eje X) e imaginaria (eje Y) de \
\[Mu], respecto a varios z negativos."
}], "Text",
 CellChangeTimes->{{3.9228538910224724`*^9, 3.92285389934388*^9}, {
   3.922966073125237*^9, 3.922966124424939*^9}, {3.9229662215935354`*^9, 
   3.922966242134579*^9}, {3.9229663269349437`*^9, 3.9229663379857397`*^9}, 
   3.922966871541324*^9, {3.923476857933035*^9, 
   3.923476903104444*^9}},ExpressionUUID->"787f2ab9-fa7c-4481-bb5e-\
34ea928e89d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReIm", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
        "z"}]], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "50"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92285390158989*^9, 3.922853915234153*^9}, {
   3.922853950310131*^9, 3.9228539626604953`*^9}, {3.922854030601252*^9, 
   3.922854030786293*^9}, {3.92285406305855*^9, 3.922854067756027*^9}, {
   3.922854133612687*^9, 3.9228541398241215`*^9}, 3.922854281081905*^9, 
   3.9228543134115763`*^9, {3.922854523865822*^9, 3.922854595805735*^9}, 
   3.922854889596527*^9, {3.922855790602079*^9, 3.92285579477967*^9}, {
   3.922855840914486*^9, 3.922855909035927*^9}, {3.922855978843453*^9, 
   3.922856040868835*^9}, {3.922856080130061*^9, 3.922856087411381*^9}, {
   3.922856168888698*^9, 3.9228561773713226`*^9}, {3.9228562616463776`*^9, 
   3.922856269871468*^9}, {3.922965484909524*^9, 3.922965506174037*^9}, {
   3.922966377685951*^9, 3.922966398297376*^9}, {3.922966599368935*^9, 
   3.92296660284799*^9}, {3.92296677291648*^9, 3.922966791602167*^9}, {
   3.922966847743911*^9, 3.922966892902262*^9}, {3.922967525086478*^9, 
   3.922967536304648*^9}, 3.9229676023130207`*^9, {3.922967634156358*^9, 
   3.922967726555973*^9}, {3.922967776894064*^9, 3.9229677784973583`*^9}, {
   3.922967818655312*^9, 3.922967840326613*^9}, {3.922967923971948*^9, 
   3.9229679531489754`*^9}, {3.922968067059659*^9, 3.9229681557770314`*^9}, {
   3.922968203244431*^9, 3.922968206072068*^9}, {3.92296824094343*^9, 
   3.922968242666003*^9}, 3.922968287785282*^9, {3.922968678375757*^9, 
   3.922968717374868*^9}, 3.923472722275029*^9, {3.923473640369067*^9, 
   3.9234736460589495`*^9}, {3.9234738052763276`*^9, 3.923473871030181*^9}, 
   3.923474351538797*^9, {3.9234747144053416`*^9, 3.923474765222602*^9}, {
   3.92347513349667*^9, 3.923475137255371*^9}, 3.92401251604082*^9, {
   3.9240192430472946`*^9, 3.9240192464522295`*^9}, {3.925463590538495*^9, 
   3.9254636181692877`*^9}, 3.9254636645845423`*^9, 3.928987860244753*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"8a730a65-c753-4b1a-9d91-2165fb6e5d2a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
8mCX7PcT7CRbpBiwUTfmgcuO5nnn+f/uM+Fo/SQXtET4dVVI/3EKNVxA7VwI
OMk6+pz0t4Xj4XXb2HLBixJ+8Dvpj6/Zea253D6BQPvsFxvSX42eeZ8J2vsJ
dE44Cr0j/dm//EjG+tEc8No6wttE+vt2NsXlU1dzwPbQCdY1ZDyUrS5cubAp
B0z3/2LZQcaLQqpYcSYtG2rHN2bunSSAIqyrcfRkNoyo3xbbN04Ah9PGo50H
s+D2bgHzFjIeC67VW68dywSxb+U6D8l4VZzTCzKOywT1yeNOBwfJ+3rtnl65
OhMaqjrC3ftJ++mxbhWqSYfpQ4NqAd1kvvAINTbZmw5ir25dnyLziUrDZc/8
12kwvuVXt0EnaT+Jlvkq51TwO6ZXOEcnQGnrHa2dEsnwlMKt30rmq/79VxS1
niVBlZkq3ziZz1QeCvH4Ln6AB+2XtrM1EfCVw5fQpiSCwtTCldX15H03Nz3d
HZgAPFWLGpllBPjOH4go7X8HWlZzSzszSP1vOHT9edlbCNgQPpeWSgBjNX06
4fUbaNAQsJRKJv0r5KSkl2E0TJ7jebkcT+aLt62/WRsiYLru1OMjUWS+2iW0
rOn9CIbiGuSm7hHQumnrxziVIHj7qPDfVx8C1iQ/yL67FADfL5w3QU8CxFii
0gu9/cBBPrfA+jYBqo9ORLnyOsPJxF0G2jYEXFm/cbNSjAPKfwwM1jhJ+pvw
4tpzSy44f61vT4oOOV9/lcXN8x7Y17WhjesYAXrLZ6Q0V9zDkdUuoklHSN7y
94l8dhCWZH/n9pYl89Eaa217j3DUcX5b5cFHnm/J4KX24wiUCTfW1uch35Pa
4WXi7UscinUe2spJwFAwn8y+yihs/VH5JI58PyOfxFlHc79F9UbhN0dGyfrA
3j9KUCMeeZQXIxtrmXDuHu2hbkM8botr/C1UyQSV90ekLuonoJvNbKjxZ7Je
sNdaWHv5PV478SOk/BMT+huyChrcP+CLsNwfu2KZsGT+JPrw+1Tk3raOftGd
CY+d+K+lTGbh0ZjJnFNkXab4fLXt3T3ZuONLps2QCBMa+K0FNW5ko3MdW5nn
eiYI+b1aCv+ejQtP1C495mFCJr8123VqDp6ebAkxnGGAz3ovl8LcXBxOWgoJ
qmGA5HjmxSybQtxaJGEbYMmABHG+L+rxhXj/3g3rQ5cZINvbbFreVYgnqlO0
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
Giq600RnCjOR4FYOLIum4Rbnm93SH7JRKOFs5tdIGuqt3L2c25+NFPlJ04lw
Gpps4ZpR3paDHa8/HZx7RsNdHI9WHniTgxYm49sj75P50/BCJjPsE6p+2OUn
cJ2GzZ1vz3d65WGLdP98myUN5cd85Ady8/DbpwtKwdfI/S90hI2M56Ey3YH3
2wUamitVZvdcycczibyScqdpKHDWI9JDswBH3Oq+wF4a/mPdX2PGU4RKNg08
3ntoyGCfj5xXL8LDzrxbsqVpaOMSOvXEswgnYjM/s28j1xsK/vVutAhv5Xrx
HROk4WNOZVfr5mLkW7U9UZV8n4skT5q4hpQi304Rv8VRKm63dpwLqyvF7OF3
kDFERZeXdzd9YPmMbcMy5os9VLx3QjQ91+Ezer12slZopuLAU50jN/QQOTZm
aWxLpmLMVFCgAPndUOQsHDNjTEXOR90je9UqUN4gX0DlLBV7DJzWzF6qQLbk
7+J3TlGxT1KC75NXBa4+MyBBqFExWTvj+paCCvRl8jOld1FxlVDQwwTZSjxm
nmW+cp6CbCIj8Z4iVWj2nc2Q8oyCeuda47nGqrG2qyVt+iEFe7vY3X+trEFJ
1mQ6lx8FVR6dHKBL1qCgTHq6kAsFZRQ6rwdfqcEV3KVPas5T8OHGkIUXHTX4
5VZYscMWCsb+kco7WFCL3Ttt9i/FdmBQcEG8vWc90iq5N4m+6sCPGkFOzIh6
bHM8aHUwrAO3+5/6fTi7HpdSt8jp+XXgQG7odP9QPbJsj6wQudaBytkpLR2G
DVi+5VLOerEOVBm3VVov+wUdCo+rZoW3I2UpzWyI3og7j54OqXzcjuOFmkYH
pxtx9Y+igKb77fg0X3rAi7cJt7Zm2dc5tuMM0Z/0U7UJH0p+cjA91Y7bB39W
GyU3IbffrV1TbO3oeaGt6oJ7M/IY55XOW7fhy7nzOk5cZJ3fdZct61IbHvuU
sUNibSvWqTzVvGrYhnr9f5xbRFvxBodrXZp6G1YVFxiKKLbijHwS1+TmNow5
FtLsbtGK/Rb90tKtrfhzdOiNYVkrJo30u7uQ3xcxD6b2uLm0oYTL8KUzUq34
a7jp3bO7bVgnW+wvsaUV6f2XNsQHt6GAjFNkPncrtr/y5SmOacPdgsaHRbEF
Vz6Xf5/R2IZtdsJrFje0IPHSsSNWoh0tNAjBFmxCnhWrgmOb2pEtVMCSLakJ
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
X4Ph
       "]], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1:eJw1mnk01t/zwAkl7aVok4ooS6JkSZM2JUnapAgpayqEisiWJGVJ9mzZQvad
eez79vDsKakkW0hI4Xc/53e+/sDrzNy58753Zu7cc+5Wk9u6NxZwcXF9I7/+
+/v/P6Pwv/+mJa8oTs//BLdA90cXlvGB8KmXrB7ClEJftvTKtSCkLzBQRJir
/52/wZst0PTiobnHf/LfC4afbhSHSuPuC2r/jT+VLrvm1i7It72T832O6OPZ
6Lya3VDgWuruTtiN/W/+VpA8nDj5smbZf3Lp9QbTJ/bBeSfuR09nibzh2BdZ
XiXgcrXO+P2PMP/Ks7U1KnDqnv1lXcJc1DVb7PzVoGhsgfubv4S1xUvtdx+C
9m4Nqe4Z4s9NubCRCHXwPF6kt4TwIfHFX7iWHYHFypfOKE8T/fe278/PHQOT
lGZR5SnCP9ViTrhqgFj/vPfOScKTNVTlhSfBadsu8Q+/yPy79oo7SGjBdMOp
Q09HiNzuJfOB0VnQ9vI5vXyY8CrqiWI1XTA84LbZc5Bwvmb4xS3nYPWG8K2H
+4k/2acaz46eh1220X78n4m9bQlpMy16YHpqoZvgJ8LfD+U0Ui9D3b58+1Xd
ZHzSjnWa3fpwLW7U6yOTyCUmRv/yGABjgcnZ2jbC55zddFqNoOxjRBStmNg3
+3GXs/wmSCrcE9Hw/gkxvpsEL7Luwv2vc6X73X9Cj/TJMwk3bAGE+p4LP/oJ
Rkm8eVMTtuC5Qmndu3tkvlfOW2mb7CHgce/0WlNinyszwT7QAUSrd9msPUjk
skIaopudwYeLevrS9xGgxCv8ivnlCU4ccRmnzyPgdnf6y35bL1i+k2u5H2cE
RFH+VOO4F3xL0VR83kb098d7D/7xhuDTvdSp/BE49N3jnbHoUzC1sf/l4UHk
1zqDhtqew6sNexp2CI5AT/pfDX6TYMiIua15ftkItPPeXaBbGgyr/U2k7y8k
9iN2bPYTegVxld4mKdPDcOjUzeqO9lfQNi9W+/bDMLz0mUmL134Nfi/isrbE
D4OO00mR847h4DsbPBy9axiEAwf84spiYK5/ilUsMQQ+Rx8JlwqlwHSm92qX
LUNwp3CRnYBRCsQsElJRFRqC/vTSDSXJKVCRm//s3cIhkKMc0lFXTYVFSoop
Bt8GYbQsZFGn6TugXh/4tTpuEPgTulNeNaRDhSXPibXrB2Fv33Z+jmUWCLjX
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
Hyb/018UYarxYhH+7/24W1vNiLzPpdL/A5EgXeQ=
       "]], LineBox[CompressedData["
1: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
kD9yVUy9hYLXr9YMHqzOQj4ZjLcvoBDxz9npkp2DXUUKjwNzKWhASefePZGD
l+iDHe+yKVi/Nk6kQ/YzxnUPLL5Pp6C6eKMBT+pnVPVh1laJpSCFq3D70Zhc
LGaWiU33pqCQ5kufM8/yMdin4t0dT2I/UXZgfViVj6LNV29sc6fgjtEezujl
fOQXDpZ3ekjBrezcN9tsCpDcULux7DbRPk/Lm596hbiGPyqy4gwFxSOuk+pF
ilF8kU9yRYuCPf5Nok/1inFUTsxt7ykKtmUmDig+L8bqdQfeux2noPkLaoHf
cjEKGL9uK5Cj4HAGe1Fzbwn+ORZrm8hNwTPqjGFyXBk2TAgZX1tDQcXPs1Ub
aWWY9eP+Lh42Cl7i3brp1MZyHNuRcfnSMhk/Mp9f98qzHGurL53z/01GbTH5
3dWmiL6P1l23qCHjWbr87iMhFRjY02HJ70BGUbV3ano6VbgQIqp2+R4ZBTIV
1+66XYV8PHn5oVZkbOrdnjTjW4VsvL8dxo3J+Db386EnVVUo945qe/AUGe1W
DaO0DldjvPyJ0hV+MlrlaX1+v7MGo9hYN0SmEeetvTRjhcVavDdUpv35PQnp
R3js9gvVocwriwu1b4nzVdA/0V0H69DkXgajJZiE7YfLuBat63Bf4tSo3X0S
3jpPO6PeX4d7zrcXMimTcNecZ7VlbT2KrG43u1DahXKQcDvmWSOOfEgouZ9L
nA+Zp4qEkxpR6gzFwT+jC1XmHhT7VzQi75FjPG/edmH3ha8pevONGHYpTcDQ
tQsPqXoruZs3YU2twKGDR7qQz65F+8jxL5iYRdcK+dSJK1cby1d/NqO2WdDL
mOROvMc3WniNpQVlpadcE991Im+/mEaOeAumdRaqvw7oxGSXiDkVvRbcHrVI
EbHsxFVj85IfRS24wTOPJVi8ExNd/ZRMn7Xi3/ysCl3PDuzb3dV8e0M7Hrs9
S2F17sBPDU23tom340y1xc9P9zqwNjvJliTVjioyTf+mrnbgtpuGFbLQjjuG
ZmGnYgfqpwj8S7Jpx/1fhLqO/m7HnAbWqYLGdtSy10cgvi/kdPv3qLl34F/F
OkEh1XZ0eRskaPqsA5VVNn74odCOFJ8slsdhHZgb3xtst60d7QwP0mPTOtCE
wZC+O9mGNyrtt3+kdODK8I3fK1pt+COz9HiXXCfeV1iwVZxswf3nxbmVuon3
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
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
hPaymuLdhJlWBXcWND6BbNxCSQOx/qdqH+CqR5/g8Cq+tiOEi7boZh4RRxCQ
Wa+hQeyntthhtfvXEFIMOx6+Ivb7ZIN20od8hMffWeypDUT8260Sk1Egge2i
Z+MTIl5cV8mKNBuTQElt6mw1EV8BK6+Ou98lgWbghelpMTb6nqwTHqkkwWYy
z/k9RDyKdT0+tX6QBObaQ9yXiXildGSVHOKrhNUf+zg9iXjmaDveVWRWCSOb
X/2KFmbjQY7/0mr7KoFny+aMW8R5aL1tZSW8ogrCIqT6TIjzMnnyAs9V1SrI
SocbWwTY2O9zQlzEpQoUP2fYlxDnjWWzMjmepxoeSpVKui5nY4kYzwkBlWqQ
VLrStoY4vxY/9+DD49VQ39PXEr+MKN/F7rweWQ3uq5zz3i+xsMI8S9lRuQYq
euLFT8yx0JJby0f2eC14/yxRXyTyj/YR6cIG51rQmryTsmqEhUk9YHInshbi
ui7aCQ4R+Ytr+9v2b7UwTfFvXdbHwhvR4xvy7tbBglv8hodE/mO/cAsUjK4H
r8HHNe1EPm2t3+Q7hvVg+PzKmBmRbztPuQQ19NfDf53BF1qrWOhq0ZUWpNYA
X2eVNr//yELrv5uf7qhqgCsuw3um81g4xH1+hfBoI6RNJzRMRLPQz3unxaXV
TRDTqLJsOpKFA09VDuZpNsFmtZNff71ioShzNeP8gyYomX4axHjBwtqFk2da
+ZvhllV68h4fov5l3vNbtrVAiKmUppsdC8tXhv+KOtUCh/fKsWeJ91f9K2ua
0P0WmO88rHbnEgurxrbarqxqAV7jUspRCxbaRLpvFTzVChzlCurRR1nY4uSy
3v9eG0CzZ1C6KvG+Kjy2Rjq2DazNbgmmKhLvi4XM5aWVbbD46bNR9GYWfjh6
nPGTrx2GJEsp9htZmH63OexhbDtIu3vYpKxi4YmrlHSXSx1wVGgvb8gwE+92
JR7z9SfDwd9ZFM0YJk5/S+xwjybDnq8rTUtfM/H+I0nVOzlk+B0op6AdysSA
nySrK3Qy7AyoGxB6wsTiYSG74wqdUKZ6rNP8FhOPdFZ9OlrfCWeMW9+J6jNx
eCa8oJqXAh4GEZw3WQy0//FasWMDBVbpi7wmdTGwvva1XI86BW6Jby9e1crA
YEPj5NmzFHgQxJ3qhwx0LHaN2PGeaE/vdV6RxMATD+7q1x6mgtnB6KCjNxgY
mfs9QfUpDTzuHZWi/6SjQl1C6GQMDea91t31H6NjrQd3RW4ODfZ7creq99Nx
OLm4bAeVBiJHe0LsqHQ88vz8DgMZOogMn4x1L6ZjcC2VcqWIDm88S1HWnY6v
vdXnsJcBdW0un1/O0ZAv3lYxQo8NipKSu0K+UbGv4dXTqeNs4J6eOvaCTsWR
elXGIRs23L5a2+HXSsXrti4as8/Y8PvGyZ3nSqnYxHAnnf3MBq1t3/++CaEi
l+NBT8HH3eDokffcfw8V48YKKq/X9YC61+8DO0IpmBfR43lQ8SvcfdPoJbip
C9e6ifFaJvdCXmmi7cXFdlR/la/2YKYfKj6tdXoR1Yg+Tr3RbW5DsHzeoWeb
exVKLyMPaNWPQMkf/WDjQyUoKDy2T65jBAIat9s5ipVgc6+R6lrmCJyyMJvP
GCnGQI6M0IHRESCtWP3E81kxnvn4t/fh6lFoWbg/E9hVhBvkFF2tTo/Crjm5
TV62hbjRx8Yg7dso7A4zuiqalodbFTY4Xf45BtbRSdeGD2Vg0/Ip42sLY8BI
3Dy3/Hc6av+YT7nKPQ4lD9R/vUxJx3FRt6Az6wk/zCjl4k1H7vy2A0s64/Cd
JnrPsPU9nvgkYHDBiygXkDWg3EpBS/HFpsYVE2CtWF20VjARvVySzCQEJ8Bu
ItTofHsCCkWwFq+ITwAj9945heAEJBlU2PcqTYDMuYbbBwQSkK/yj1HgkQmI
z021eCcYj3Nd7uI3n07A11brwdPXYtB/rbHZMNck5JpPC1QXvkILrXOThXyT
sG3SVl7H4hVK3L244YHgJMjka2RFLYXj3r32rDGpSQgRXRkjbRyOTQPDDTY6
RPnqk2Wqv8KQj+vA9nc3J2HtQ83KjTdC8K+/10R98yR85X/69P7qAExiOvtf
IhNWHaD0hfhj0gm/3d9pk+B1PFt8+Tp/rBs0TR//Ngkchlv+s5F9gpGS4W4X
f0+CvsdFl0umvvj8cIfcRpkp0He/RrP464V0d9rJ23aEP324Es7lhlvEDTcv
c5gCUmz9iSPnXVHZfynAx+nf/V3eD9eLXLBjFbvglDvh0y3fy13vYjz/oJJa
0BRwJAtG+EvdQR3607/paUT5hahVvMtu4pPfrEWVLKK/poIf10VuYPFqjwPR
uYTDRTx2qNrjh9yPNobFRH1/R2bCDTu89uPZzKfqKfDSygjiULiK65XtNhxi
Ev3LFd0W+2GFK3evqk5iE+U/7ZebpV/ADEOroqkeojxAbfGvvSXONfkZG/cS
/U0kHG3htEDpiRc/towS47kZXejwPI2nNOtSx8eI9seNOvY7nMJTYzkm8ROE
TXkGTl46ibNK2YfbvhPtXxa6mJ8zxbXf2wMP/yTal6c96rI8gZemSRE5/+4D
X9GN/t5ogoW2hfP7Z4j2S3ZcL7mPYgWs3+f07z7xi3XT/201wou7l+0M+nff
eMGxrsLqEJ703EELnSP6E7vN4fj6ABrXMMT8/t1XvhPUGkTZjxX0x3M2C0R5
lgHHGzEDrP6x3VnjD2HOenGxy/p4Vcz68ei/+9B7DRPWX9qDz50HpEMWCce0
qo3w6KJVlOBR2X/3qfeSD2YUaOMxRvxSPGGvH78GL17fjkfsP+ny/7ufHXYx
a+XmbcjK556/Qtir533L6XolHLnxUO89Yf19T7YHmchhcmXCIuNffZWiK47F
4qh13wJm/tnlpvXd/JX4//fHW+j3WBnnKv4HCspCIQ==
       "]], LineBox[CompressedData["
1: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
n1wIayXt5RBtLYd1ETbKfITjYhqdDmytgIehgV3xxPP/5RkqfMayArZcK3YV
J8x5pa00nRXhs4ff2rXE+7NJ1Y8YMUTwEZsetSbed9N7ActdMQjKAiRKExEP
/J6L3Xe2VUJUWWnfdSJelM+/ebpduxJCVoX9jiPiSbI/nL3bqhIyB6KFu0SY
SEv64W1YUAm0WfaArUQ8hhslcrgzKmHT2du5QMSrxOWRlOLlSii7aSJ3mYjn
vb/51Q4erYL6E1JczluZKMYuxnWFVgUtfRPep4l8SN9w7U/2vyrwbqvYtXcL
E5eO6A5wiVXDVTMxsdVE/gxIq9nU3q6GcyaGc2+IfOtajPh5+281PHbqUrvI
zUS6CamnR6QGli8kGsytJepfPON3VqcGdG1yPngR+Z1o4b71pH8N3KuPOfF6
FRNPUm3u3hapBZ7ddpsPsTBxQ8G9vFM6dRCT7/92ZIaBsT1Ckv+s6sA6i8Vs
npifXLSH/3zwr4MJex6rv8T8JVT4pX4LtQ58c/KNJ8cYaHVWX3nTnXroE86L
s/rCQKNrvL6JgQ2QG8L6s4yYT8+tUapwz28Ao0cyx7SI+VZAsZ3lFqMB2F6t
jJQQ8zEJt4QdlGwE/RUFtvBaBhpzOl9dKGyEwwWLn74WM7DmqkHi6oEmiDS3
2t6bSMzPpZe4L3M0QxvrpTtD8Qw8xq64MVe2GZISLC59jWGgreCPDiu7Ztir
3CDTGM5A+9nfabNsn2FCYshOwY+B8Qrzp5ylW2D66vRmSxsGxiyu+/tLvwUS
L44Uj94l7i9scdrBpgVGmh1Xm1sxcHC4PulRUQuIe8rEqV1n4N0SRnqEfiu0
BVXV+xkxcK/O8rKGTRvY2Eo5Rh0g5vPbK2w9IW1wxjGqP2wP0V4vB4dLURuU
MTj/vJBn4LDH5e9VrO2wpllP54IEA883VNTdCG2Hy0YvtUJ5GcjbZnWe9UoH
NL/b9cBlmo7VkjsHwaMTUrz01bcl0fHlRetElYhOCFPrvfE2lo6u6hUqih86
IYd6Y1g4ko47t5YOynd3wqq4Fz8XXxH7kb2XuyUluiDlzcfbmo50lL0sNqha
0wUaYTMLi3rEfqJOcmSYnQRn/uo81ftCQ1PuG97zAiSY4t7u9YZBw2bHDR85
d5HgrGWHwHA3DWufXfGUMSbBRNWz4Sv1NGxiSd1ql0yCrWNjpn3pxP4pLnZK
SJcMaqU7bm+3p6HgOkG5XG8KyMHr6JhFKh5UK/77KIoCPz4mqpycpaL1l3tc
GhkUuJp5jv7zOxWFSgeaGjop8PG3nLR8DxWzvCyr+7dTQaPt0n7VCiq+P39N
UzCXCn+yHdb1uFFxzwnRyLf9NPBNyXkILFT8riP7o0OZCT7WbqPbRsk4LMir
tcuACRMnRduE+si44daNJz7XmbAhfJUYD4mMNyjC6Rp+TGAWuosOIBl1Wlvo
aUwm9HAocm6PIGN5KPu7x649ECyt5LxyhIxGG21UVmp6gRHJVhQRQcJpvb1N
6jIDYMKu8+WITDc+PP2CNyF5EPrc8w/bcnTg6ZiYiX/zQ3D4Y2rIhpQmNF/q
S/B69A2SODffv+VRjbpH2mt5GsbA9Gpuz/S5IoyuuBi83D4GeRGnVnPKFiH9
4qXJcdoYOD1jH1JaLMQ+1uB91d/HIJstdXYmuhBHHvUpXd7wHZIlokXaBguw
p/fGOi2T73CDNT7mhmM+nqraWB345TtUQkbvocIcvGW10fns7Dj4RmQY/TT7
gNy+obHn/46DrBS/6BzPB3xS76J2nmMCinhIujcxHevPqrw7xj8BXKXrlKJF
0tFUQf/WrMoEyF7eGmQ5nIZz7jm6Rm5E/RbponU+qeh6cgN7NdckRH798vCm
dCLGdJELeTdNgu3U+KWgobdI+vU44LLQJJzOGcrSTHqL10WlzzLlJmGgdUxM
RPwtCvvTqO76k3BMZ3Adq3QCpoW3dd3ym4RAxfjUbf4xaPHAZGqIfQqy05+e
96GF4czJ7Yk5a6cg4RJvWaVLGAosW4482jQFZs6bHYfFwrAiLbFrdMcUBO4Y
dfthHYpsdUr85ipTYNtpncW1OQStfyXzv71HtBfHqr/WLxCVbTXy6z8T7en8
oj7S8UWtqISLZp1TUFnZSzWv90HF4e6t05QpGMjPTOXQ90EdzpXY8S9T4Cad
w3fznDdqLb8Mvvqb6P/N41IzD09MP5jktk10GkRdCjJP73qOp4qy1thaTUNl
6etB0VOP0FzzdR/rfcIPvDErxREPffI56mE3DQMCWPZu5SEaWpx0Nn5CXL/n
7+H0cgdM5Fu1rPCSKJ/PxC4zezxzNn0k/T1xPecQ//yDe7jCHPwm/3EaWCZP
+7F43sVznw33RWcT7s4SdYi6g9UiXWd1Con6jf3b9pCscNJ/7ntFDVG+8u2W
lPdNlDF6y3+U/t953B0TES+uoZ4/uSKZOQ1uZ2I6NmtexdknGTnTvYRP/rPk
+HMZ7Y4U6hsMEu3db/tj7HMRV3TX/ZD6Tjh/Wtt0xgQPq7qmTowT9dl1hNcy
jVFfK9YgYXIatK5IbjFtPosXLWePtv0gTPsxTyk6g7tmlV4cmyWuVxB1el14
GtsydCOyfhLXZ8PbvoenUMTC6s+RX4SrJ9usY0/gzTKGlt1vYrzjTT565cdx
iIes9PK/88ZKXvYeQ0dxzwgfJWiRKOcJknjPq4cdVysFvf4Q3tHboXpUB//F
2C7e+EvUP2RtWvpcG313yT7Y949o/8Ky3scqLVx9zfT59//OQ+vpl0ut18Qv
CQMigf+dl57nUeuJV0Wv+g0nxJcJB4i/eK56CL3OxK8k/He+mu9ymWDPAez+
WK7K/d/5bXFxv2SPvZhyi+OPxX/ntecmPhia7cQnZ5+qpf1XnibiqlclgZ1l
b5do/5XPfCu0Or0Vh5wuwq//znu79GyyObkW///8eN1Els7Fsv8BjHZBww==

       "]], LineBox[CompressedData["
1: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
qcTsiQ34v/vjHpPh7s1DJiX/B62uXck=
       "]], LineBox[CompressedData["
1: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
U8EPDkK/8vxEbV8OLv6mC60skTHmhZNEUnMeHg4vaNi+SEatHQ/DkzfmY9gt
9cE982Q0bGD7EK+RjxRa5M0902SsfBgh41ubj6mHItmyh8j4yPnGzr+lBfj0
0oXNqw1kfHAxVCX5XRGGXeW9XVpHxkt56ycFBotQQuJjxLUaMs5s7OUN2VmM
K2ODTGVlZDxygj/LPLgYjX7y1vzMJONQkvBq6u0StEhx1ewNJWO7ydTCtGIZ
zsQopG0JIiO/B9fMb5cyfPn8SZeiHxmrD9vYLGaVoY+vwF0fbzJqdti7DQmW
o+KxG0rpTmQ8LDcYfJ6xAteLbTK7TdzPZ1htVesbK5H1wkqIqDZxv+s8UtFZ
V4WFb78879YgI/NGvaJW+SqMpBlIblMmI+macX1uehWKrKrel5Ik4yaf41nb
ghD3SvWGfyX6hZPHDnwMS6nG8Q1MTPJFvXg3Gl+us63Faap9kFtOL15hNfq5
6lOLQ9ialJnei62813csvKlFyR0ZgUuve/HsTHV8F70WlcXvme972osRhefT
lAw/oMCB4Mslxr14Lks3v0+lDh+OZ8R+GSfh+qGAsFHuj7g7yVDp1zcSVsWn
n9oq8xF5t9Pe/u0nYda584/F9T8ik1ll40IHCT96fQvSDvyIq76LcffySfiD
LyNGZu0jqqZVsTe7k7BUwp814nsDHsgbexm10oMsq1NzsplNGDUcfSZjrgcv
uv/k7m1owtMz4TolEz14w+nvl6tfm/DdmUtWJZ96cJ6bftJ7ZzNKvzIc1avo
wZzuRp1Tfs0ourFV9/vdHkwRfx4mYd2C+9oMWNKnunE1hI0R2NvwP+bX97O/
d2Px/o7oGvE2TM8MDEj/1I1NZor5CmptOBWs8sC/uRtfbxmz5rjbhpafBFeG
kruxTG/u3emhNmRRyNRjMevGnN0vRb7nteN+Tbfy3diF4sqhb06LduKm20Wv
Gwq7UHbrzDsO6U4sS4twuZLZhdLWh3aSTnRit+pBhpjYLvxa8fiQjnEnspU+
7Yh37sL+gtSiDb6dqP7kPK+NaBdqlz86/XKgE8Wy/gyXEN8Xvn8km/ZGdyHT
r4Ldvh6daPTu+l3DhC70obEFnr7diUnhaWKexDxl5he2Vlp04rYNg041tV04
4V45byTTib9+SV3YSnwn/IqbCPCt7sCUVOGM9xrdqJwWo6Fu346c474vNsx2
o+Nk4KChbjveXA445Py3GzdqXThkKNeO3rwb7KjEd8LmiTvzIiztKD17jii4
PTjkPTzIltyGzCasgrlne7DgQr03+0ArfuGZOlWR3IMDLf6TP7RaCLs7FigG
JJwYNnrBc6QFRaOVjjhZkNAuHavkeVrwfczb8HWXSbj5PpOfwddmbD/DlM/u
ScI07vEO8r1mvLnrKFtfCgmT6HKfpN41IWe/a7/AHxLek7er0J9vwFGvbSu6
Mb2Ymjz3+xm9AZUKDIIvJvSi0DVbleaaBtQNXKu6QuTBT/HBrdtDGrAtZvOi
Y0UvauxLk+UWbcDa28edhAZ6UfEwY8Sw4Udcy5NeNBIl+lixrvz+lDocIsvl
dmaRcc/P2f8yA+uQ949qF3sRGQOZMypuOtWhzTTz8dNVZExx6v1Mkq/DBfax
9qR2MholKonxtX7AKQEqeQtRx14u3aeETNXiwvzhpahDRN/E88X/vwM1ONBd
pXAvlYLueQ4R59lrMOhd+Ujxe6KPVXH20v9VjZ/4vTuniihIfee9S6S8Go//
nT91up6CKUE1LLpa1bhxhuVu2iAFGdUj/oS0VWGb4yUuET4qZp5udhg8XI7U
0DtiXx9SkQWSnrgslCGl7GXcKX8qUsuv0ObKy/BjxjHGV6FUVFim6lZqlOHG
60fiFOKoOLuYm33DrBR7DhyoESqkYoFY7TULn2KUZn66Ev2diu3qV60rMB9L
5UtKBVT7sFqPq3jQMx+V7bWM2TT7cKXE8O2sYj6qD240+n22D20tGh9QivPw
dQf3rfemfbjK7DicnZ2Ll7t0vxXfJOQ03aunjrzHheHCYLG4PhQINZBkz8jG
xzFmciEJfXj5wwaGgr3ZuP6tE/9ESh+aNv809efJwrI9weHBuX0Y9J+biP1y
Om68GjVh/5GY37S+fH1FCg6tZ7a8NdWHJTkOo9ePpiB31o9SrV/Eer2/cRSk
J+P+lKGD/It9mFn+uqErJgl/DlwxTlhHQ2+lpQMmzoloZLXe/iQXDTeKLhxU
PBWHtTdH3vceo+EA9ZXCQuhj9Pvs9UDanYaH7d11KT6PkGn1u27GfRo6ObE0
qjn7YOrSz30CXjSMn7L5HZR2D+eEfgx+f0zYP/JFA8/YYqIEjwPfMxpasdPr
4tjcoJO712wtg4ZC24rUZo7fB5X3Et9+Z9NQRVjac7etF9xwKTQbyaUhg2TC
yqPPjyB9rmdbbjENO0fD3nooBYG07tN7g7U0dOeoThZ/Eg2zs38YKik01BNd
YdwW+Rwkror3HaXRMDX1xOzBxBjQZ9kdmPiJhiPOIcVrVS8gok/VzWGQhtXb
DjkzL78Gl9vGOqFjhD1K8s2TzPFQe8ins26ChhPUWFH+4HiQWvIUmZ0i1ute
fZTnVQIE/+aRkflFw8hLxtuPVb0Fqv+Dz8bLNJxJ6uCt0EiCeOitOvOXhgJq
nqbnO5JgKi7YTnaNho3xIPJpIBmGjJ6tm1tPR9M898MMzKlQX+luxLaJjiSt
5/pqIanQyWp0unozHfeSqn684UkDDuq7P1e20pHao7rplUQ6WL++FpbEQceK
BPOHmfqZcDi4xamIm45Om2XGTw1nggJ7erkaLx3D9HX+zHtkQe/BRM0mPjoO
eJU/TUvNhqgTVbsKBeg4I2TSlK78HpZ3nbcT2E3Yl6+S/kh6D4v3l0fuCtJx
fWSfV7J3DohetnvDI0zHk31G22gtOdDfUd7xnwgdVVKE7vHz5MInx2PHQvbS
UW7oYGBdVi5kMvSn9IvScdNrzdUseh50KJ4cYTlAJ+rZxSeaYvnwvH5r7iLB
m+Y5HSZv58MMNr8bkKRj7bTQnMWmArCeKNn57BAdTxs5+ew3KYD1JTWRFlJ0
nFJQFV9LKABeiavHdx+m48756wGd8oWQs+K06HOEjq99SHtbHheCbWjltn3S
dHTh637Z1VUI3VKBBlUEm3b/+vJ1VxHI5/UV6Ryl48Rk0+A6xyIQYM5U7iGY
4ftw+IGiIqiQ3jiqK0PHnNvfBqzWF0Ow9e+CaoJj4s9jgm4x5NAeJ+yX/Wfv
266pF8Xgsu5D1hOCgzpFJ9WHi6HTsoZKI5it98OutKMlMPIqes8+OTqmRNvE
83iXgH+I2VM7glONcu3CW0ugXFSSNY7g3UNmltx8paDiK5bSSLBr3o77KXal
sGvqpsU4wQPfIjNV80rhCFniENMxOj479+zr8Gop5NG8ebYT/CaonSNWuwxa
G17x8hJ8knnjPuOYMlCIzTn8T37rLxOnwPcy+HB/3PLf+KfxIfWTR8phrv1R
4j/737bcPtr8oBziRPOW/s2vc9FbO7elHLzO5tn/W98Yhqwm8lbAqOqH7//W
33vd9cQbuwowUxVz+7e/tGauP8l5FSBWLbKTTuz/gYO2cPFaBfA7rWv/559g
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
       "]], LineBox[CompressedData["
1:eJw12nc019//APCMkKaRUYRKZEYlUZ4SCg2lfIRKGqIIKRSRZFRIRigzI3vv
8bT3fvOeEkU2DcmK36vzO19/pMe593Xv63Xv8z7vdc4VM793/ibzmjVrRoh/
/v3+/5/v8L//3ZcwUZpfnQF3JzzEfHwdkBVf0wb++fkxb4qWIOh9Xjde/M/f
4PDkn52Qs/7R7Wf/fKDHQubcXjibQbt4lPCa6xnhfFnycKL+du7IygxU2ttY
c67fD8UnMzw8CLu/7nY4qaEE3JxOdRsJq7s/5Xn05DB8j6O7+v4lnlcIqzGo
PAKbzylk/F4mnjf1G9BkVYc1PcKXzhNeMyjKNJp6DEa0fJ5GLxHtdX7jt/7v
OGz8HiX1aZGov5zZLsuuBde2k/9b/88y0zHPSrWhvJ90+vA84difXgb7dcFr
1+cdh/8Q7VWnerv90QPmxiDPvXOEJ44+jK86DRkvnMX6fhHt/1oRi8zTh3JK
krLvNPH8CY3xUO8L4PjiheamKcJJc28ue12Eg0bL3J4ThEf+/HL1NYRCNyce
jVHi+Yv+uo6RRiDe5u/AMUi4cEH2x5rL4PqAdIP3M+HdX0qkJa5AhR2vIdcn
ov/cEA8ug6tQ9uDx1X4q0Z6bZvyxfjNYSh/lq+8gzG6cq2x9HTT1OMR7Swgf
aNjzRtES3rfkJWp5zcDAzjBu2vR9aA8OlFbymIEYs4JsZk8HaLvrNcj3hOhP
tviIvNADeKC0JJ/8gOhPW1Gg6OJDyIka9+O5QczHlueKb6adwOyufRqXGtH+
8PbrqvgEMhJnjM+OTIPZiCgl3tcLBkJavtwbnAb1wtiPTzZ4w+44N8tnjGmo
nLC9dT7QGz59Otb7rGMaBtxWE37E+IDAqWfkyQLieTnJEX3qC7hVFCDz4Nk0
iDJmj5glB4CFbHrDRt5p2GenHv7hXgj8d3dLoMpGovzh1ciulhAw3e5aeIVt
Grb8zj08IxkKBVLWd/zmp0BUrtt3YTgURJfm3nv1TYEtZuvp3QmDm9Gnby7E
EY69JtYb9w6s9Nt2WEhNgT5LpvP0tVi4pLn32DmJSYgR4qoYoCTDCsu3d1wi
k1BUsbmaWSwF1BlSA218k6BsVJjmZZUC9hZZxipsk7CmuPxAzkoK3Ppg4D00
NAGdh3JrfaXT4MgLzkGf2Am4feX3j9rQDCgKvjF7Q2AC9L1D99RRssElUOJi
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
8NVhb1pQKdY6XORkfUaFozqLvZuflCGf53WHmdtUkJr6skg/U4H1I9dN7PdT
Yc41hqPteyVKVtvbKddQgI5PS2w3V+G5O9Ra01IKPP9wzIJDrgqvydqyOudS
4EDbkWCeO1WYbe90IfwDBdbKZdqGDVUh9fIhf+dnFDD41dx/sbcab50dESs9
RgEp/4cm1um1qBzsyHapiAzv2Z888GiuRY+pTQvumWTok3dJeDFSi9bOLGqx
iWR4JXBJ2kGsDtcmGbY2B5Nh1+ja9anBdai+09io2pY4lzb1rI1zqkehsv07
tSXIcOJMUaunUiPKclx5UeTfC4IbVfmF9BuRPCxiHva8F3g6vpsnWTZizEO7
MTuXXmBTPzoa/r4RV6Juc3Nb9cL56EbuaaYmzGh7LMKu1Qs1R5QUzzQ3Ybx0
YnH9Qg+82FZr3niuBScoOr1ZV3rguFCVY69lCz62On2l9UIPHKXcGOp92oLf
DRrnBnV7gG0fR1ZWdgtW1riZLyn1wJMQwadtW1rR1rzm8cimHhiQFguJbm3F
PQJ+tknlJIiZmzH2UGlH1j8eT/v4SJBVnzjUcb4dE0W8m0zXk+DGmH7vxjvt
aHTiYwB5tRsuvR7sNn7XjjMJPYkFo91wTMImSHmpHd+vV3uwt6QblLm/0P4W
dqBihKHqJ5Nu2Oth9qn6TSfyPD60+V1EFyTew6PjkZ2oUjimYeDfBTf84uzX
JXdip8I7l7UeXfBGPuSMPHaikM1tHiPLLrBt+uMmMNGJd91WThYc6oLpE64X
rxzrQg6J76nGpE7Y2S0cET/ShTKgZ27O1gn0D5Eib3504XYbEsuxXx2g+47L
znGpC4eopI4cWgfUL7Ha7N3cjY/evd7nmNgBfgXtL6WUunF/bRqbJ3RAlfK8
SrRHN8YbfX6Xf68dzPt3zRzbSsKYvcc/5je2gvtxuuHuHST8fUz72mx6K5yw
LoWVPSR8MRmLe4NaYXJW6lWYMgmbxUVfO11uhVq7O923TEjoXTL5KOlHC7Tb
vNl3O5qEB6XOXjwv0ALlygeezoj24I79FZ7brzbBFZ3qHcqSPdhqtVtURKsJ
BMvihZ3le7CgOD5ou3QTHIjnPTx0tAdjxodFV+caYUairOSKcQ9euH4z0c6/
EaS4TAO+BvbgwDbrn5xlDUQ+NFm7c6kH9St++Rznrgcu68d995l68Zon1tv+
qYO2GZfhcvZeXP4k3/G2rw46LBK8VXh78b1I7hVSYh2IiNp865XpRfV9nmeZ
VOtAYOz+lyDTXrRqpyuBeS18e0nu2lXQi0Lrxgyd06rhwKDl0kRpL3YU7//x
3r8acnL2NqZU9aKDVtn1EttqaG05rrWhrRe93j5Z+HKgGh76LMZf+dqLIxvH
VifKqoAsyl0Km8g4vj5c7VtLJXixUKzseMg4Yyu4OS2dOHfKKiaFC5BRLN/G
6G5AJQQtXaps20nGfM1frn3nK+HdjfKztUpkvH737pX5HCSi4lDdmCkZz3Tg
es+Wctiwp+/Ds2tkLE4v0bjtXw7fRScWeW6RMUzCM1PjXDkI/A7cKHCPjP3v
Jx7TyWUgmRUUn+5ORo0fztvCBktBS3s+cmMcGSUlQffy72IY1mR7vCmRjE7n
E6wzCotBYK6mYm0KGa8NRW3841wMlfMHH1Kyyag9p7/13koRiKWQfNiryGim
ddZjma0ICu9svhH+iYy8dQ3tUXwFYK73rqJ+gIwOg7dcAvvywcmjOX3iKxk3
1LczXOPyQWbq6AmhcTL+9d3z67hcPhT4bDYQmCNjNXgZe2vlQaDkmcOPN1Aw
x2t73YJ9Dmx/tdZPbDMFBU762gUo54DC8VEr5KLg6C++TyIr2XD0aE/1IB8F
Wy22HlTwzQb6HgVSpSgFDxg5V/FHZwHTdNjSiCIFL3hOyrAFp0O6pkYm20EK
apubHgvfkQ4/yr2GhA5RcB+n/I9dyWngwrKmW16VgstGASmiFakwmfwndUaD
gt9qPx4uHUmGnMdZV5s1KXi1069/k30yPBN3CHyvTcGQa9JyJssfYeqCk7WE
LgU9m00v9m/5CAact5bJ+hQMlvd/9OZwInRzG4dYn6cgT6qoTGZNAtwNOZ68
ZEBBJWH5sLrTCSD/7bX6iiEFHSoqJAauxcNwcP6uSFMKMnnM9HX4xoF87+iL
mcsU9KiL3FbBEwcBpo5Wh69ScOD42M6kyFjIrXENzL1GwZ1L7tutsmPghLe7
47FbFMyK3dNqkx0Jw+/IZroWFNTfzcwb3/Qe/NjvbNW7TcHpw4rXuwbfwev7
dp/3W1HQ8bWFwFbuCBBXcJ7dfod4/+6+FWmpcLhWOU5aIrzZz2tKVSMMSNa6
P+KsKdjNaTl0wj4UpAL65KxsiPe7uMNa80UI3PMRVdp7j4KlnEyrKnHBIJwq
GOtvS0GzYUPg734DR0Wesh60o+Az3XM2f8cCoXXN6j4S4acu3kn9TIEwqFUw
NGdPwQW65/091/1B9mjWHZf7FBxPy9jT/uYVvGk6VrpAWNP79Xfr6hewPe0s
ycaBgv1qeI7tpw/suleZyyCsbtDV/FbMG0xuuZiqPyDGp+tK385zz+FzhnXb
e8IfDjKxf3R/BlLy7mw/CJ8/Z9AikfUUdr2NZT/6kIKNF78YaKEb7DWr6nQn
fKhhRltxhwtsbuu8VkZYeP96O35XJ9gzXl0yQ9gzyJ70m+EAGn6vGNscie+1
vHmvXcUOci/urj1KOIdF55Xm/jtwMc3DwYhwk9PX7KHv1+FlTeykFeG7mhC/
YnoJNN66yjwgrJm5peJSlhb8meQ54EhYY5OjEtyUxQyDGyx2hIUalT4+VjiP
v3fZRpgTbl7ZvE/cxAyn3VQW9AjvF6tg9Ym0QA2DRhFZwl8yo88OfbZBcQPR
TWyEK1gE2IW47uOZFd1aMvH+O5XnotRzHiJT5HmNaMJ0HanpKwaP8I/6cZ+r
hGUePPj1YNYVneukQvkJt59qM6xudkeVDoG7DcT41atkbtR654F3W3dw3vs3
vtM1kdV3PDFj9qztJsI9i/e8VI54IYtOVVQCMT9/lQRPpG3wwY2WVRdKifmM
SmA68zj9JcaLP+s7TPjGME8QxdUPBb6Py2QR8cCd3JQufSYAXyntkfQk4oU3
ajLL1DEQ302pkAaJ+NpwnfOv09U3+ErS6cQhwlFVDMXXJ4KwSJP5VRMRn837
vY0z+ENwPDnKlI2wtQ6jJW81BDsimP+oEPFsKEgRzx8JRclmku9LIt7dQxrf
xBWG4dG5QZlmYv38TJvX2fvfe6T109syiPV17EfpbNz5SKwXCqv3vUmsZ5oU
F8+ZKFT/4Ve58zoFWXeEp1rtjMGjKQc/DxDrV/xB/etJgTg8F7PphBOxvtW/
xWQ/CY3D/qaT69hMKBi6630NJ+8H5GW7EsVqRMGTBw7xb9kcj4fOs/D5nyPW
031ZlhbWRPTsaDGhnqWg7i6F/ZIeiVgvv29V4AwF9+xg3/hkNRFzSsPMXIl8
ZERO2MazmITritjfdRP5jKnNQ7x/Ohnjy65fzVQg8k2EA/SQ05H6eKr4qjzx
viE+Ix8NMjCl1OwRmywFC0ZN0u53ZiDPWmv5Q5IUvHRMf2y8KROrO7wei+8g
4klBpV+2Pwt1B7bKK3FQMK7GLyywIwePOEcdPL2WGP+n13U+bMzF+pNdacbM
RHtbrtRk6OXiJSHV70bLZHz55WNVTkMu7q1rH/gyQ9hWO+su5uHsjts7ZHvJ
mJwyFhOaXoAdqixdI11kPJSCVsIjBfigpF41op2MspL+OZGihfirtOjItwYy
zrO+fPQiqBC9rE8xbS8h41hEqBiPcxE+oZw5Pv+ejLvZcl27NUrwim5gj1w4
GffEybqMPS5BO/+3UpdDyCgqqPhrPq8Et0obSsb6kXGHWOE6JolSlKju8Kh3
JZ7nluLK4ywj6ms/9ib2Zx9jC4O3neWY+NKvWsWIjLe/nToit64CDWZYPw0b
kHHx7rqIsmMVyHrkasAuPTKu8F6+jzkVmNOyY+3Rw2RU0VaimQQjjm8N2jpG
nBc0yWdTv6dUYuR1QznZml7kpvb/R7ldjQKNX5ytyntxW1FjVJ9XNbqLWBtE
FfZiFMeXHEZ8Nb6x9CoYS+1Fc0W5bQ0D1fhCI8pic3Avuh81bj5nVIP8IUOk
t+a9aJggNCCrXYveN2u0P873oNoln6ISoXo0lMq7W/KjB/MdZOS+Ha5HR/+X
F2vGe/BUZd0+zv/qUVBLyrG4rwd/OejnqwbW41qms7KHKnvQRt4z6fjaBrTZ
tY3t0fMelGgQDumfaMCgCJtxqXU9WKw8KLWc04TLPteH1Zh6MMPta15cexPO
nuw8oLtAQmOB3UPq4024jWUNTXuMhLXFTJtuiDWjaU2eDbWRhKd28AZqBjTj
nud7Q694kbApZdOdW8TfEcnH9jquXepGcj1bxDRfG64ZpK+y/+xGJbdkIyeF
NvyReluUeawb94TORM7rtWG55kbFT+RurB5UCO9zb8Myl3CyXE433riaYaow
3obBPAd3a1h0o+nlOlu20nYMm+M8cLilCyOcVTYHSnWi1Pgc/0BVFw5nmJ41
VerEfZvWTrkVdaFxlNn8To1OHJ0Ktk9J6MLwgVOOcZc6UXdQdneqWxfGC6Y1
Wvp0opooTJgqduEth6QyvuFOfDfEFfea+Pvixw451e6ILjxzTyT1ElGPsfk8
M2tiF46GXBvd/qQTrd5dqd+X3YXdRcc4Xll2okH88qHHDV3YLDy9bbt6Jz73
2XaT9KsL292s5ycpHSiYw7/OX68bbx5SGb/u2o4PLZwbtv7pxtbLxXesb7Zj
n4WDvyczCXdrTryzON2Ou9t85iY3EuPObCIqJ9yOaz+PhqfsJqF6Jukaa1kb
nqoxKKeeI6GVePBWxlwrskdNLi6nkHAjn6W56bUW/L3xb5uOUQ/+kS4K8j7R
go/ujG4aNu/Bt3NZh+NlW7BRJfK+s3UPfvdT+pu90IwHYxXC/Tx6kBJ8lU80
sBk/7eOeME/rQbbGxMOnypvQe+9+s4qVHvyv1kace30jLoxxJu2I6sW2CK+p
Mz8aMEriySeFpF78dkmw0o3SgKbLTLlqWb2YeT07ovxDA3I9TpDXqu7FrAuy
lSmqDcipH7pj7bde7Hbdk3TWsh45eEfPnZEho5whiE+U1qKnZN2Fn7lkjC/h
2JAXU4tTjlem9peRsSdbIdvueS1S12i02NSSifwSfbrlTC0OH+E/1dlDnKsr
wXZ+oIbIK9F8Gr/J2PqK0xpYarBNK9i5/wBxDk1L2pUMVdhnIy8ymkHk4fvq
Ogm7qvBv+4X1kgUU9CNZnXvLXoVrtnTJXysnzmU1IyKXOyqx/Zq5ALYQ+/LK
/HnbK5V4S/bUnr2jFDwXfYfF4XcFnlJ9KJsnQkWlBL03rEalKPLh+t8QXyry
HapzeClcioJ+OU/nA6jYnP3RZ/VLCebV/fltEEpFz8cM+0zrEjz0oybhdxwV
Y8hZwfIexajffPHb11IqqoXp7i9NKkS/H2e2WE1SscfcxP7ccC52XPN4vukk
DT9KN2yw/JCLL3pEJZnP0LCgTUT17rVc/HlLQGbKgIYrXfSAg59y0GVe6Ezy
VRqau7ViLykbDZW084sf0rA2KfNbzqNM3GCtOK38gYbzg2NV5rMZqJj40D32
Iw1fu7EnT1hnoLvu2dNMGTR0eOvM62uWjpXnzfwSi2go007J/X08FSk8ize9
22goVHi5LIslCf+ebXSK+U1DH0Gdd6uPEnE10zzm8SINXdQarff+TMB1Sgf7
T6/S0Ey+12LTQDxqX6gKonDQsWzLCodYSRx+Ky5IdttOR/eHT96xd7zH5fea
H0SBjupaH6hGMV64TmyD+Vs3Oq65QwprC/TESTWHRK5ndNwSGZvW7uGBcgak
mWdedByIXi2frndBqZqrL/X9iPofzJ0LXW+jlc/TUt8IOorq2jvYLzmAMnUg
71EuHc1sLtTE7HGGC/wSoQ4FxPNKFhPJ511BgH3mxq1iOr5+mU+KJ3uA0bm7
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
NuD/7pe71xtMrDtqWvZ/xfBo5Q==
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
RgWepZcr/gd49mlZ
       "]], LineBox[CompressedData["
1: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
pHqlJZ91Yqz/2ZuUzT3Y4GcT1nixE9Noqw1T9/Tg7+oJYYs1nfj09o6opXM9
uMv7p1vKwXfI/SYK3Ct78PUZ02ts2e3YctDW/vylXozVXHLaHNmOEy4P8tZ4
9uK+bTfb5W+0o3tV6qZX/r1Y2BM7zqvbjqIZVjrvo3rxhkLzob1EGxp3J1p3
VPeisNuBTe/Y27DxXY2zFy8VeT8KW5090YI7amJlruZRscRLZWWYeguazh+S
CyunYmxuT85r8RY8V+Zf96Keit8L86QaJprRmHexuoxKRZu4uU1Ogc041PzX
K+EXFZeEgtVvvm3CnTfd7RS0aEgr+3VhZEUjbvP6fMyMXBeGwpXUE4cb0MnP
RPI5hYY2qxzr9Nsb0JVDe+cggzwHb/7O4x1FcsOX1SfGaJjw0VbLRq4Bb2bF
6X4lz8EN4tbL7IfrseZGUFrtETquHHGbUwmsRe7H657pN9DxYLH/vU2OtXj6
wOffj9rJfac+48eSQS2e+3Eo/H03HauqaLef8dWitrnWkf2DdOS+lTpo+6IG
S5W1auqXyX3rpPL1DbcQe98dygvZw8C562eDxZkVeLh/KIOZxEDd+a5K36QK
DLqRxqabzsDxM6zCrfYVaJd01jg9m4EH7dldtsyU42LYluiTZQzsX7D7sGpV
Odpszm617WbggGrxz0NbSnHN5cPjIqv6sG3y9G+tc4V4vPufr8yZPpQQPjan
IFGIuSIbP2526EOD26xuLB8L8IKrz1Oey30YtVLukItVAXa8FRNmepF6ovyQ
uWk+tnxynGF91Ifjugv7L6q+RR4D+lBJeR9a/rkXKzv6Bier6yhyNX0Y5O34
+tjZN2jeJjQf1tiHRtOzW/ecyEXK9LN2TUof1hj0DG/fk43R/D2hal9JdjAQ
/v3tFVLkPLTurGPi9orm/nGnVzj785jdeT4m2j9d8i/+lI62/LIRGkJMdJo2
/PCx4yWu5Pwi2CVB6pcCTK+/TEUq9UNgxG4mHqYSc/VJz5HFtOiPrQUT37Y8
WMPYGor5EskL2+KYmPwzN+uLSAhunypcnxXPRAnX4xd8195DFQ35LVJJTLST
9i8wG7mNr1u5jy6+ZGLA60kTQw13tGSLtdAtYGKN/OaBU9ucgY/71TerDiay
MLilC3XcgPLsubHleyZqefiLRrt5AYvc1ccm3WT8g7myr91+sOU7W7sUg8y/
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
j///vvyE6zHFYNvK/wGO8Wow
       "]], LineBox[CompressedData["
1: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
//mUhXnd/wBFeDVO
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
FFc2V5YiTHL8fLwjiowncpXVOOlLMI/hyFtKBBk38EhOdR0vwcpsyaHxUDLO
1odp+/iW4BvVSdJAIBGvyr2f+/6U4Jh+jv5xN6I/4/1Owj9KMfZ7abqBORmP
ST+o9Zstx9Mcs3sYzhP5ICH6doZwBTr6sx4vOENGu1ylJ28sK3A0iePe3Gky
Fjdrfh8brMBwUfOhDWpE/lH4zTpUXYkrveWjT/eR0ZCF09YutBrZPnVs69lL
5HN7WbMdTdV4xyno9zdeMjJ8Vimr+1ONgdyX50W4iPW3v3n5160a5IhVMhVn
JOPT8eFBzrO1mF9ctDFtgoTaF7dE1AvUoUj7niHd9yT00tpr9OV8HV5UbLKe
o5BwouKQ+864OmwVetq6Y4A4v6Ol8vQ3IlZtUuxkQhJeddj7VncGUTduIdk6
iYQcCkyP28j16BklNL6sQ0JL5b0CV540oifvLi9hdRJmlJf211Y2YvqyWYz+
ERL2ZvQfZyM3Ym1Yr7S3HAm7dvYqJnM2IVmr//xNHhIOFTwzvx7RhBfihMdD
p0bQbehiXrdXM6ps/q5Q5DmCVy/djL1g1oqMYTF8pXdGUFl+LGbkbisK4lRx
vuMIPlV/x6Yb14pWzzct3780gosbM0129baijnvL9yb1Edx+smzdQqMNa9o0
MoOYRjCWeUDq1v52LM1VNBAJG0Y3juEhh7UOdFw3nRALGMZCvWEdS65OHD+z
tULQYxjTjQpPn5DrxA1fLkj/vjaMT+tOfaG378TIsNEgLd1htP1EDthO7kSb
1pyiw5uG0TXh3Gx4SRd+ccCagntDaMbgdrn8cg9Gv9ILT3Uawv67Ocmhfj0Y
+dF/PPDqENrPZ2uYJPdgQMK6sNKZITwiGdvS0d+DPuJrZ5TlhrDsrmCSumov
BnbcMs/5OIhll8rbLrL3YWft9wcndAZx/MnIA7ez/ehU1fWNenQQpcRdm2xt
+vFbXBJcURjEqeBJC/2b/dgao/rgquAgZrJrp7MG92P532GmHb+J94OJ0xvO
lfXjjbAvKXvyB7Ahdce+zZwDyLYnbGSZZQAfv69iae4cQM0Zm7DsDQMI4Oa9
gzSAvQlf7Yx/9GMG8H+w/jCATeIb4x9N9KNCIdlp7scA5lUI8HRW9qP173+m
DcKDGKjnkL9g24+fjcVO3vUexCviLj8srvehj40G12fJIezYw6Jw0LgPNdYj
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
cwFW//Ptnit787bj/38Pbs51UDTbuvZ/ALGBUJ0=
       "]], LineBox[CompressedData["
1:eJw9mnk41F/UwK2lLJGlRUVIUqSSFDkp7UJCREJClJJQimQpe6LslX3fd8Kx
Zsk2ZsyMmQgtJPteKe/397zP+/qD+Tzn3HPPvfecc8887naLO7o32FhYWIaI
X//9/d+fKfi/T21SxkpLK5NgNlXeLqbJD6FcIb0DBA8IJGb5XhAH0zVrRssJ
9rAsESe7yECitYuNF8Fx4uW/dl9SgCkVsv5Rglk49MhwWxEMbIwLh/9NwrEp
fuj1VwaKz2tPT4I9zgorZ2WpwtP2C428//GvZydLbh6DjL/hbn5/J6FG5ujw
9yfHoedIa/b8MmFv2C1bPUoDosaeGeoSXHOyZ7t4ySlwCy/wePeHsP/9UCqT
egYqsh7s6vv9n38HnNv/nIMBy3MG3ASznJOI0tpxAW6L7zt/eIlYT+959vx6
HZC/7yV6eJHQN7iToztwEfhCjD12LRD28l9wj6/ogqwYj+inWWI+PcsX78/o
w3ix4W6/CYJN66p9OK/A78QBRb5xQn8Tb3ehmjEYqWWyeP8k7M2FbFF6bAJ7
+hm/1UcIecKP4UGOayCwKfkc1yAhd/ZLqpCxgLUp9w4KfSa4njNhhm4BEpFl
4gJ9hP2tfYnLAddhR7vbln46MT7YMYj+2xJ+CPDmN3YS6+mUn/321xo6F//p
UioIfeukmPAMe1Do2b3xxDPiPHZb9yuEuMDqtdp3D3hOgjjFWLJZ8QGMWF5a
FHQn2EHOzvTTA1gftjyQ7EToLyh25Ci6wvW8ksvrLIn5FJeKv691A1vtfdu5
1Qj9IumQqoynEBCu6ak+PAE1b+1ufdP0g+yjHx3MByfg2PD6R7tpfsDr5Gx8
nzkB4v0OTTbX/UH5Xqe7Y+cEmIWOcpKfBsBf5YDC3pIJiPPj0U6lBsFmXdY7
xl6EvWm2KB6Hl3DfIEV5SHACWM7+/njqZASw3Wqs5eWdAA8ThZs1SRHw7JJ/
vMKqCejilT4uwxkJOfcri0yWxqHmucpMXXMkbHVR0df5NA5TnzrnpIyjIUG+
NackgZCbiIcGZr2BTbt3jnDKjgOXaIK0uEcCdGvVakdJj0HZMP++V9KZULIo
Y2uwbQxGeuNHpB0yQd7pheU6kTGImztH2VyZCbw/Xsk7cY7BxqrBU1KXsqDs
uegzga8/gS61VyfXJxuK/vFfjYz7CQ8MC4UUlnMhYYNIx74NP+HVixYW99cF
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
4vITmhqZ6DPlFsTNOvERXWjsxjkyPiNap9t7O7E0osDqjjkZf+x7HX6hvQNp
Agb3FV+Q0a7Q8dK+VR0ophZ/y+sHGfffrXDOv9WG0ztc12yKomCaPbdVjG4b
8nlUatATKVgg3ZzirNyGpEKj0JAcCv56cVOJlaMNOw0u6I/VU3C056iGdfRH
bJ3Ytk5ngoJ8gT/JjxtaseZXHUujeg/6W7DuW+ZtQbHbowXnvvTgqiY/kaXZ
ZlRcc9jKbawH27euHh3ubcZN126mpRN9fYiktENicjM2ZVe2T6ymIq1ON9Zf
tRmtOePP7d5DRYlOOZ1tNk14QHXZx9aRihOXtYY9SxrR4PLwxollKu6jST1e
HdOI9mWzmy9w0pBfnLXY40kjBgarXUzmpeHamXWyF880YvfrJG31bTTccbCr
wba3AZ9Pvj29E4g6ckisz+dXPcoyWVrSntBwSjJy0XtfHb6e7gi884eG/eLN
3CrCdYgB53a3stExLeHmz+9LtdjWsDi1leirnuu9lxSvqUVXI8uRvI10PBLB
snGTVi1+DTh30vsgHW1DR/hkbWpw4XRERv9tOlq0RC0O7KrCncwBft1eOkrU
5ClSJyrRs0loY/tnOnJtcnpYVliJbc9s/x77TvQRRU1nNI5W4irPRiPBWTp6
nDI/5ar9Hpm2MVsseHrxgd82dtu75biRCj+Tj/bivYYgscykYuyK8lldFt2L
dd8ULolZFKO74eO2+jhCfnPXpLtYMX49Itj3IaUXmxnb37BEF2FZsSCtoICQ
t3x9vC64EEcmvUe2t/Yil0hsns29fIzYJX/lymIvjuivfx0tn495fe55vcuE
fPQXtWw0D5NrtXbrsDGw7XBmXoVFHlEXlrwleBm4ZIE9GYk5uNmf9MxEgoEK
jStzI4YZaLYQjZLnGVgpmzjwvSMdReLNTgvpMFD13A4n1EhHwX2zHX/0GEj5
mSvEqpCGpn/SKLmmDGxY1/uyhSMF4+e43DIdGHj/l3KWf2o8NvhYXpt8zUD+
XH9+reSXWF5J7oumEfPLPCnziglBgfBL9tJMBuqs0Tj6T+IFJp+unUzvJ/iF
xMCLX/7YYaWOkd8YGMIqbakV74nKIsethGcZyOIu9Ye//AI+PazyzI+HiSyG
LLVywWKwPsvaIWwdEz08PqQhSRcUJKkHX69nYs37vAcDp2zB6wlFw2MjE+Mi
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
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
mvbgyYhtbY89O1CaSqvd7NSDr+xJcVuEO9DywX9bmeN68GzEydumJu34vFY+
On21B9MPphrHVbTiRcnRB9+JcfPrNld/kNCKzSdOllYWkohzXfZj8GnFAP1I
tmfVJFSJk+6NvdiKWuG/K5cpJHRo3btUMNmCeww3CnsR3wVbWn8ki/O2IKVO
5pKeYS8aec4/NzZrwhsB9LtuK4SHdr1UPt2EqlNTbSWMZLTd+NRh5/4mXNs/
kT3HRkZFhjMsWUuNyLc6xa65i4ytd4tHzvg2Io1Lq+CjChljmuOtFAoacOtP
gcvyL4lzuuRWdQPmeiyT5p46x0OsK+rMk1Xjdei+9+983g4KErushFhrHSas
zYnxiVBQfDs1pPVNHYqoz3HXyhHr3rXrZYGidRhvsyWp7SIFHdep3GFSq8Xg
/C6rkFAK3p9M/Zv4qBoPW4+EjHJT8cWd1gj1K9W4/5P0VfXtVNw0rrHSf6oa
j4XYGsQT58Ib9nu2TW2sxv/YD/qfIc5xLmpGPq/CqrA3xezQMW3inLN6TXo+
qxKdDqiLkbyoKJeRN/SxqBytvvEnVM9TsUXq/EMn13IUyYuTUluhotRu0iaJ
U+X46iQ1sHKNKF/X9rxpSxnx/fqiL5a9D3V0GJIHPpXiYSuJQ5yifTh1/kaF
9Woxeh+PEfIz7MN3sS/8mw4W4KmoIj3OvD4se/ngI/tkPpoq2D8SLunDZG0r
EcXkfGR22jEpWdmHczVXrQ335KNtq/prsdY+5HZ70BzJm4can2gJOSN9qCW5
OfbKSjYqdFt+2ruFho2qgrHmedkY5cd9MJWPht5J8guaDtmoleYauW8nDak5
Z+rGxrOwL5i1ccM+GirF1eH1tEwUuCi020yJhkUVM1/tzT+ijsVIock1GnI1
zPuxkFKRbcdSq54NDbfem66+r5mK74IWaCdv03A15YjlN9kUTDD/RP37gIaj
wfbt3BuS8Ibat928fsT7E3IyAhPjMDzPZM4ni4YKttW8csS5QaPqyZaQBcK7
QCjBNwgHPqrOin6nIcPsVEOfeyCuafYUZvykobJImNPB3lf4ykWEOZmBjpXf
Iu4X33+OGZxfjBQ56ejOlOp3MOg/vDg3m9q7j/DtSqf7p0xRsPq9+6gEHRmk
25lPlJxBhlLT/ZMHiXTnc2EDzoZQ7X1xZlCWSA8cEk0Pug+dFwQErwPhU48Y
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
dzce/P/734syKr4Pr5b9D3MGYR4=
       "]], LineBox[CompressedData["
1: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
xGkC9dfdNoo8+QIGhaw0DtoQKM21vcne3hc2l3VKoC2BllsUbd4G+EOrg1C9
+lUCNzhZnUi7HgSiKzLicg4EDpecK64oDoO9+Wm2xXcJHE8v51FrCwdz5xs/
WO4TGP8u5Ovi0Ct4Zf774El3sj3eZnp/10SBr8+TonxP8nl22oWLJrEwdj61
Zc9zAlOXNgo7OMbB505qvsxLAn+wDY4ZqcXDr63KJ474EWjQohP0+cIbGKjh
NtgeROBe3LdKxDsRNhr2r30eQSD7NnONa+uTYM6mmk0visA65zqZtqgkkBMi
YjlfE5j0QjiDkpsMxtWKSQ5xBBbXb1Jk+ZgCW/elfmhPJv1sv2CHayo8W0qt
d0ohcODB6g/vN6SBQWpm09o0sr218Q86VdLhs/RzAaFMAgX7j29no6fDz4+d
tpFZBBrVXhE0vJkBr4QWmjjekeMjsbPkeEImHD1Ma+7MJXBRr3LziEIWLAsL
2u58T2DEyMdzUb1ZcL9Oe+ONfDLexPLUBbZ3cOhLWPRIIYG6Gq+4VxXkQPjH
DrXzZWS5ZdtyIXMunPNXPmFSTuaPpOpF19O50L9NXc+ggizfaywpMp4L+1fi
naWQwEpmxXurj+SBkGRTwOoqcvyp9N+Lj/Kgf1Asi0Z6lcTkqVWC7+Ftj8q0
eQ2Bpw3fM2+9+h4e94xzbawl8PrfT28VC9/Dy9FX+ypIu798t+8aSz6cAm0d
szoCxZ/q+CTp54OK8srledJ9cbPxX2Py4cClEveH9QTSihg3lCbzoeSChz9z
A4FVs5ofIuULAGfOR90jTSt8MLTKpwAmd+nFjZHWb6u0udtbANK7XV7rNBJ4
zdDQ7JdIIRzRHgxMJn121K/Ey6EQFjfFuC2QrvIuvrq1vBDk1VovKjYRKNso
YV62tgjWlnhL3yVd2H7kqd2FIjgfMb6YSlr+gkK/SHIR3Dm8Nb+LNHtrqPzo
XBGk8ylZzZD2OZHyJk+lGGr/3VthbiYwPZHK5OtfDPEz//zWkQ70D9BwGiiG
PsE/6/7zoWdKlyykSkB8JcaVibTgL72Txq4loKEt0jtJxhs5CJ/MGkrAbL5E
oJ20hO/j3Tf4SiHxYMrpJNLi1lGsT61LYb3nboebpN3E2OwzckrhZ+wDVxnS
v220dBj/SiE97Nv1abK9KSOzYRtPlcHh/Abt16R3hz1XvBBdBl9C9XhUSfOU
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
8p1ltAMH+fB/979V8ubMI/fYlP8fpC5C2w==
       "]], LineBox[CompressedData["
1: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
aVin57hF4XYrnl2TrsfW/wmvpVf73X7aip3Gt1+pPfyEuSWBf9/ktuJ94ZU1
HXlNmB/0OjaV3COuxp8YzhFuxI3sW3SqKtrw4qqaXgf2Rly7t1UptKkNSyvu
8UoONqDy8CWZGx1teOdwJBhkNiBXVjr/r/E2XFGvdpvnWAN+bLB6lUfuERET
n5fW2Naj61LdroGb7ShplJ/umFeLu/aanaJz07FN5mCXZlgtnpFTL90oREen
1X/6V3nW4k3h85nGm+nILnQp9PbJWnyiZSPUKE/HxneJR1O+1qAn3543hqTu
32zT4N2/pgZHmx+1qUSRe8HjRyXuhtXY3WKybU6GgSrs58+xoBp7C9Z5W8sz
8GAo3V1SohpT2mg8LFUGHhfXSggdrcKsLQavQnUY6JyezGS7X4XpfjIrP90i
ecF/dCTlbSWOuZVZfktnIPdHqaBKWjmOv31woJXkzdVTWV5aWeWYVz1lByTP
nn3vvK8uqBy9PE+Vx5A6dP9pv64443KMGd6ZYHCCifFt7/98HSnD+EHqoh2p
6/hjI+66LSlDXen5E2cjmZglGaMfdrEEVSezN7ZwdaBaV2qSnFgJ7lnmddSI
rwPLekfGs78W40mPksO9Qh1Y2ixy7aF1MaotC0xt3dqBddoDjvIPitDm9/Dc
pQMdqGHGc1r4XQHSVlckiNt1oKRH3DnF+hzs/3fKa0tzB/a4mk2pe+Wg6iP9
3QcYHai7trRz7+EcjIpKWK/f1YE39Acbu0uy8ejhHS9MhjqQ5re9V+VDFkpN
X5hdtYiF80ntWjtfZOCmuUFj3MHC24+Nun9qZ2B1YniG9l4WzjQkZcSsyEAb
tRPCrUosVDFIuVTv9oHcH+a3Vhxi4fJqKd8d1umYJ0brVjBg4dHcZpNM72Rc
HvmvzNaDhYo8SrdaF5Kw6BT9oo0XCxue6sw02ieh6O+8wavPWCjx5c6gnnEi
ajzPq5MPYpE8t7kmfGc80rSm7lgmsjBYyYlhWh+NI40HI9Z/YuHgpXW2ubRA
rDlw+NrztRS69RgFHap6hbpTZkZb1lHoJfBrb1D+S0zTUpXPEqAwz+te1LPI
ABSt+/00X4RC06ndhU+7vDG+oiTUTJbCUpukXZJ/7JD+wm69rCbhxGOfd7nc
Qhan4IsDx4n9PO1YA3YL1LmWxNTWppDNUTFzreRRbEkbqtA+Tfgf0zRqzgqm
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
7taeNskYvlL0f+RJtL8=
       "]], LineBox[CompressedData["
1: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
OUgtjBNQlWLiHb+5SzTnHLT5p+arIkHyTXjZ+WMlOShKdz28aQO5n73t6BrF
XPSL4OK8JcjEr9+Nom7sz8Ov9uEmB2cY2OGzarJBpgBtPl3wG/zBwCq3pdbR
NgVoFjh7xO8bA4PHlh++lliALnaTtvnDDFQKdG39LlqI8Z1Ls1M+MNCpg88t
c1ER/tBuipgvZ+CGF22J7exijOno37WxhIHSdD21vatKkK2FpocKGNj6MEku
6FQJUgpKSUZvyf7ap9q6s6YEPcX/lsi/YmDdEztJvoxSDFzt0qtP9ueLywT7
lMl7ROAAo3zGkVzv/3aReEE5xthnawTZk/13X7Djr8lyTFhIs4yzYaDDHtV/
fuaItBM5Q1f1GXh5/vOV+K0VuPCSa6fpHlIuXOfhtbQSnb8aDW3ro+Nad6vC
p7QqrMlf16dB0TG2XlBfY6oKtTNUlUy76Cjs4pEyzV+NfzMHRBwa6Gj9xU5G
Vbsa36NeunQWHffwvs73rq/GDb1t/vX36ZjLE5LSUVKDn33OffkkQEf1vIN5
Ei9r0W2PmnznUjoa9q9w/lNci3Kl0WKl3HS0V/JMbWLW4sgwd5ntry6sOMEp
dl6oDhNO15hbsLrQUn+V8iL/OlQ8QV/y5GUX7v30KnrcoR5rF5fYT4t14Xi5
9l4/9Ubk0nKb+iJMvHerSqd5I57hXB/1fnkXOn2KaVjl0YjJY3+dXP524rzA
fRm3oka8l+YfY9/diYuCeTSHpd7jBnsFw4rITuzliYgXWdKERxR5PTqXdqLf
zbKxqIpmTFWPD0zn7MT1fd+HaqhmtKoe43P5TcM30ZOH+n81Y31RrvmCQRpO
F5q1c+5swRN1AZUJlTTcEtcc1xTRgvuG2Yq6d2jY5Lt4x4MbrXjVom7oOr0D
d3tr/RPzbUPv6/tzh5o6UFX6mobsszYsD15/2qi6A4cT8waUX7fh6ayHC3Zl
duAbnnq+k0VtOOue4uXs24GSlmIJO7+2oXS+eG+FYgceXFc6x6vejvEVrC4u
8n6h/7RsszBnBw4pCtZFPW4n4wjiAcs68PSsevOuB+349NLcv/k1Hcj5JXyj
8o12zODLMGvd3YESu8IkeY+0I+3I2gvyFzuQvlIsTX+8Db2O/51bUtCBk3L9
MQOH2lBrtkE2y4KG15psV+fItmFCZVuEhR0NZ3qdqu5ubUPqbY/nqvs0rDLW
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
+17cfTD2cVPhldL/A3wsu5o=
       "]], LineBox[CompressedData["
1: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
3vb9ypVS0r+pTx+ZOT4DamWkaFAZDbkfdXxp2RECNxmarm18T8NQsmOqPxkE
j9LX64eTrLhz8FqJQyDw9OhQOMtpeCe0P+z1c3/Y52r76y7JzH7Seb5FT4Bf
73jhZ5LT97FoWdJ9QeBP73q1ChouSRZ2K656Q8boKkskyU8u3xlcJ+4Fvkbv
or+SLMz9aqxX0xO8zClN0pU0zOF7/0O5+x5UjFtF2pBM0+PbUrP5Nrwo1GV4
RfKkVsvFY5Zu8Oqc79qPJI8y3C0qf+MExbuZ0sZJbsi6Ym31+Tpw3S7/uhZp
KOLCnn3cyQoET2VXCpIsPSqdfpLBBJ77dstvJzldq/z5XxUteDYkfVyS5CMr
abKPxPei/WjOggjJe23dOOJS9ZHy9+pRHpK/xlnZuNSZY52h0c7f5POYxpp3
vlCww4e/PTP6SH6q/uFwVqojxtaPN+aSbHxzg85goAsuO8T5PiI5zdVKwELj
FlZ6pA6cIDliucZ9YOUOaquu72L9T14Ra6Nf+ABPT3+3rCTtw/Yiz/HTwUeY
E3gk9AbJPTWaUzwbvNFvSsKEj2TR9BqpIzM+uBNzqt6R9i/P/Bp3pfkxrvNc
rNUgmdfbrsU7zQ8lZ7kTDUl/puaFHH1n9hQX6zfe7ST9L7Wa71mqEozbulRn
NUhW3hZXOMARihtmXEr4yHjx3HNcqGvkGabU1bDak/G0k9+V+UPvc1y8UDpf
WUzG47orlXm1L/CQyaF0bTIeNby3v7wfH45du3kcvch4TbhUL28SFIGOngd6
8gpoeJWtLWrf3UjsCOW5s0zG/+77FUWN56MwLz1ASZLMlzY5XZ5UrlhsZq34
u4bMJ4FLkTdc1sdhrl/od1oWDS3Kf7Ae4o3HbdZndlpn0PBSSyTldEACrlc9
5MBK5u+WKpZ696DXmJ5tZR5J5ndF660BOe4k7KZ/ur31NZkvG+Y/fA9OwndZ
mhKc8aT/nKcsj4Qm41NHNkuXlzR8vuWyStTzVLyj3RxVEEHD5RsvtUU2pKEg
466ViTAajts00V+9SEPNf8+OHXlGQ/G7sp8ehqXjyvztL1fJehbIIj30PTwD
yzYbj03cIvPvuuMp8pyIRy4eZQ11I/0jW7i6dtM7PL5F3WiXCw0T7S9HL0S8
w0czfBFqDjSc1daaNTmVg8tE9vPlK2T9vmy9hTiZi4k2qTsidcn6UDhf33Ai
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
VgD/d1+86vobcZVIm/L/AwM9k7M=
       "]], LineBox[CompressedData["
1:eJw9mnk01V+0wM1lKhmiQaRIMyoptIUkIkloEiJC5iRDhiQilSJTkZBknudt
nufh3uveS0iZh1CU4n1/6633/IHP2t9zzt5nT+esdXaa2umaMzEwMIwQv/77
+78/c/B//93aeU12eW0WvAOuhFC5BKC183nfIMFK1zYIn94gDpsW100U/SfP
HmUYjjgM51acLB8RHBcVvJfGdwyCB5suK/4nN+kT4zU6CZ78Gjmjq8T4Sr/v
DZ8BKm3u+foS7J3Lv7vvoTIc5xas5SZY1Oqli9K+M2CoBZ6B/2ahYsw+3oly
FtQjVdN+/iXGV8RXNAdqAFW72kCXYAb0qH9/Sgs+hr/1il0h5PQpf+2lC7Am
t7Kn/w+hz14DXYGrF6HX9pweJ8Gi4qfP1xfrQui9urMnlmfBWPaB48dHl0GU
a6/giSViPf+s0INT+uB39qvb3l+Efv0bfD8aGMKj/QW89AVCfif0prjcNSBv
ENoaOEPIW/wimEONQSw2VHTDNME+NTfu6ZmAb/3U2KNJYn4D/TTuLaYAm+ep
p8cI/exbEtk+3YItJ3T41w8RcrbkSPPvt4EuvH6Z7wsxPjhnyqDUAmJMntF4
+on15iSjBMMs4Uh1Um0/hZAftr2kc8EKQq8yH6xtJ+ajdTzsG7sLFv+KlLuL
Z2HwiIhn/qAjOBzMqQd/wt5H/lzfVD1AWJ/+7bAvsV/S1vIe/zxgpWqdFM9D
Yn9Ug65xF3mCQte6N+/vEeM52BdUTnjBUT7OYXYzYv2PU0f9DvuAFffLRKZT
BJu+Ge/+4Aen4fbzw6MzYLzYezt3KBg8vEyLtIdmwLtdrSTy3jO45+9JNqbN
AMPbO92OnCHQmLbjolH7DAzG2e/iUHwOe9TWfavIn4G5RPoEG/0FPBj8y3Py
ETGfWZn9myevINf1beUnPoI9Lw3wJEXCn6hXn7u5ZkBJfgt7B3sUeOiMfl1k
JfjG+Gd32yjgbWZ7Lrw8DcZFPrERJ6PBduzUMjt9GjqiQurG+2Oga+D3EeP4
aRDdNRRuIxkHE9HpX5/snYbl+ooDOxY+QGnWTH+K+BToeF7Xc6KkgqDOrcpb
wlMgRz68+nV3GuBeN1chgSnIZIxfzHVIAwWZN+H3WKbAOyar7h5XOgzqNK6t
DU+Cjoh4kZlaBnzfFRRmHDsJCbv2sVd+y4QwhfHEDwKTwMNlEnc3KAfU2z/m
2/0Zh8VIli8O6kUw8N6uZtFrFPysvDLNnleDk8fK1Qbxb0DWMdlYbdgEf66V
ueiEDYO/uXMCD3aArv2cTzv3ILywZ8p1nO8G0jrpoissg7D3BVtb7L9uUJ8Q
Da7/+QXeW2/Pq1vfAwffb6uaaf8CDkerexhFeqCSaVTxhN8XoAzTqw9o9sA6
u9nP5VMDwBp2qFUnvgfc/F3inpX1g5b4VEq6Zi+w99WW6RvR4D6Kvq8JJMEU
s/Bq+TkaRHxs7eJ8TYLxPamMe47R4KmFs7XGOxJklszo/+KkwVxFFqZlk+BF
rNbV0CIqKHl9vc9FIwEl6Ud3BT8VKM8nTCX2kUG7uWWIoZkCW54uZmdUksHa
5xajWT4Fnn9+/pnWRAaz9NKN9e8pYK7z5+lqNxmi2WXWgl0p8KZaeU7yOxmW
y80MhCQokGxsuLiRgwKWiY+tD/mQIcqge2mXDgUmDAMGzY6TYLm2hFG7lwLv
FOPa9uwmQYPChXcNdArM486hCR4SvC4QXzo5QgHpj4fdHCZ6oZRtuYdtgQLG
97NTvd/2gtQ5ZJXn6QOFKb53ycy9IJTvbMd3rg/SjzS82t/RDa5Hfk255PYB
1/enz36VdoOfyqjct+I+SJ2SG6381A0ezyNYNCv74O9Gp6orj7pBTbeF/19r
H+jR0y6GyHaDL/fFqT/f+8BjU0Ii19suKOAk77ouSAV1A4Yjd606ocLp8EiK
AxU0ggTSkg06QbbtqP2kCxXOxK3Wjqh2wgTj06RdHlTgOLqu30ikE86VfeN2
96eCpa9H/9WeDuj3skqpjaKC9ce8rc6nOqC5s06xsZIKV7tXgor3d0CCwM1f
j+qocJ7vKzJu6QDFjNZzss1UyLwQ9mP3aDsc2VpZ5tNDhZoTpV/cLrbDtsXC
qpzvVPhxbyPDfYk2kNBdefGInQZDUSO3dzC2gWFsWXgBNw12JWu9q6e1gmH8
hv1fN9Fg/eq+UJGXrWBZnP9XdCsNSAr/BL6vtEBAnqLM8X000AtRp3R2NkNX
+phxqzoNtkkfVDnr1Qj7ZVoU3nrRQEXntyenQSPMu0WtZ3tEgy2b9SK7DjXC
v6SHnWb+RJyamgbfGWiAP+aMV1ieEfpMuIiUKDaAlC3fseZIGqhvKRme/1sH
5gMTA/ezaFDX/1l7rKcODk9u1lfKpYGtWuS6odQ6+D3xo3Y1nwbb1dk86Nfr
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
b2ltiw4RxP9/L95ROyMTYFH6P/rQjrg=
       "]], LineBox[CompressedData["
1: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
a6lo4/hjwPZiBDw51CFURPBFG9I4v3c4/Ek9fuwkKzGfU8Jg3cPnMF6993og
GxWLo+Z3KFg8BZq2h906dipa6tcmuN0IA3XGm8FQgvnev2fOePkYfiVmzK/l
oOKfmAfNg8WPINv6bownwSHPNH15qMHgl7jaRyfYNSoqTmP5Puxa3pyoy0nF
tQZhuVbbgkA3P2f1GcHXry3que8OgPfzpTMDBCeYFVc/POsP1pXbPSW5qEg6
4xysseILTUOUR+cI/paS/NwMfGDfxh7VlwTPj0+nOt27AR2tzC61BJ8QF+y5
UXcdFF1stb8RbCZHVWbidoHFHYMvmbmpuNfuNsv6p45w75d/sADBw5/crWWl
T8Ovxt1cYgRvf8eYsLU5CCaHNoptJziT5LLocEwJtdj/fdxKsP7MonNjzQk8
5rh2lZvgrD/nIgcY9jj6WqZlnlhvfINXZ99JZ5QrcZHpJ/ikt4BVfZ8bsqXQ
NmcS7FV5NNQyzQN1tt+K8iU44ENh4D6nmwhVlhn7CJ6y9eBUkLyNVt99TrAQ
PJtYuol7yA8ffJkPKSHs0+Flazp7/B4+qCVZOhEc2nvKjKIUiI23VPO5CVZS
/MFZtv4+unQJvk0j7C+xqLz4YuIB7rdPktpDsPzCwfArrQ/xc8+foSOEPxto
V1uYH4WiqTiTaBPh/030Wtuai09w750NE7oEn4eyQ7slnuG4e5shOxEvp8cO
jI4wh6OnfGWzPRFP66hJTrtmw3GNMozkrqGi38WArNuDESgV8ZysS8QjiV/+
2Z+qF+hQn5/lTsTrvyypFLWsl/hjhGtrEhMVW5i47zjEvcKr3RuyRon4N+7j
cMq9/RqPswx1rSfyhbvVfmZRKw6tP/Hp/CDyy8j36hc9vXgU0+Qsq/pN1NvV
Ntab+m/wgO8dduNFCkqryB65mJSAiTaR1K9E/pZ5tlJ905IwzWaa153Ib9od
heCfcm9RZGu1w+IkBf2lpf85fHiLqbImZ7+MU9D3OnOialYyHhEx/WAwTMGq
IhOJ2/kpmNz+tPnuEAVJR68/KFdPRabBV2yFgxQ8tiXUYb4wFU++pQ0wf6Ig
77u5r8dK0lCjMH2TFFHP0r6qOidVpGO2Xi1veB0FL9LV6PF1WVjPanhyVw0F
67rL9cz3ZyOPK39jSxWhv0iQ90p9NhoYKYkwSon6s/zJTcghBzU9ZCofZlMw
9sLQJR7HXJRWr3fgek1B7cm+S8OO+WhiueMaz0uiHteVFnxNzscjicNZHBEU
XKenl8AYzsfZ8tyGz6GEvjjOWu5YgIp7qm4I+hP1iml3g4xjIa69bBVa4EjB
9N4nc1nninFrDdvEqXMUjEqNalyNLUa9XUvti2cpKADyM4coxfhCPmPbFmsK
Zqvk/G4+VoJ+WuM/Z40J+1kpb7ypV4rRD2YPb1SgYLh4aIEXfzmGZD/fqSxD
7J9Zf8TiWDkGiV19s1+CgpEO588qPCrH6hpLdattxHklr/Ol+l85MmRJegLc
xHmXwewYOlaBDxLmnvz9TsYeHpW6l5VVOF2yvSdimIzdrgYxs7+qUHStY/6O
QTKOi3jl7FND4hwQspAhkzHDisW0PQUxKsZVvq2ejPbNPw+VGVWjJI8Q332i
X9Bs4bQJUK5B8Xv3nctNiPGr2lts/tRi5IVAtd4DZDw8+Jf3xNY6VEajo1+A
jMnqYdmGOnWonX7m9uAuMi4nvMpdf7MOKd21I5e3kVGYzyLVeq4O/SqMbXK/
k/Ba1cHj6aP1eE0v4xWvLwlF304msLQ3YEvL0YwFTxLWqWXoC/1owFC6nHH3
VRJyVgxoy3I2Yl/xGhEXOxKacgtuVT7QiPKjw24qe0lo/zPa83NFI6YzPC4u
sJLwbxmpqCa9CQdn8gL9HvTj0Kdvhw/6t+BywGcOO79+HFeZOtAe24JfT9am
a3r1o+oUJduktAU7lfqPtF7ox7pVng9Kcy34N6FrX8j+fkyy8NYNdWjFrDvK
3fZM/eh9Miohbn8bnj7+yufu9T50zF0rTl1tx+M8Z/OMnPvwyMko/t3bOhDb
tY+y2/UhRUrX9IVmB651uJzncqQPR82f+8tf7UDj87m3u6T7MJ33Ts0AtQM1
t5wV/EftRXEmgwmn3E50ZKSeZNHtRZuVJfIZ4t5ge0290EWlF+N9bsc8LOlC
AQEuUqd0L/oq8qbn1BP3iHc0F3/+Xmzdejp6jtGFxoxLco8nerAm66/jnvXd
2KjdXWgc14Nrit3Df7h0E33ssoQHcb+IzZpgD5ftwYcb5mSXp7pxdd7Jdbt6
D1b/3at1a7gbjQ4Z5X6AHtxHnvO+0NmN1xtzqnKsevB0HaPze3I3hmenvvYN
6sGiU99bko91YxTw2At+7sFHrDs1WOK6sGLVeNL4WS8KTnjllj7rwrTHWimC
sb14hmmv5aWgLiQXLJG+EPcIz+e5YrlXupA9+s5Te+zFkEt5m7/qdOGEY/AY
z1QvPmgtfJ7yvhMv20ZkKxzuQ9YxvfEFzg6sFEs1O7TSh4xgxq9b0+2obi6q
YMDRj7toV8Vn+9qRKWvljzJ/P9HHICPnTTu+lHbwXJbtx1c+58r91NuxPULL
XNeiHw/OsI+cOtOGBZrVl8+/78fKwydV9sS3YKDBkKfOMaKv9ytu7Atswddw
pT/WmoRvXvwUt7/UgmMh3R+W7EmYG56jfEKdiKt91llvPEhI4bt1Nrm5GQ8d
flAcS9wLtsyo/WGda0I27oBDJ7+QsCKLr+CbTiMmPm3RrLlKxuINxz8wizai
w+3nOUe9yFi10CeykaURr8zs3t/rR8ZzFddC17c04AnvnVnNT8lYx6GreedU
A3bd2Q8OuUTfHVY1v9vrI+pays0d/EkwX4Ghc2odbmX/1FV5nYKuy0/X5oXU
oafivQJDHwqefyXiNnu1DrXi+pOriLpXffHGCTP1OmSGscS3TyloJuw3/6K6
FrXDH7UIZVKQKe1bpRa5BieP2tQUEH2j/hPFT+uWEePzT/+KtKDio7OsP8Wr
EE+GDw5pnKFi4WW2ru0BiEc3/H7WeY6KMwdlNoxzIkbWsSpOulIx6N3c9AvB
KhQKExXvfkhF2S0F+RfUKvC2IEVIt5yKfeUVXjonS9DRId/73lYaOude5c0V
KEHjD2WheeI0rMrh7eTvLkZhp/YWmjQNJyQdlqIPFSNT/VAZ7y4a+nHtKcrV
KcLWez8l+ExoeHLXdW+ezQUYnkYdd/ahodO8Zw5052N3XKE7910atrw7yn42
NB+tbk7+TQ6iofS4gakNSz76NtJ4Kp/S0MV9ms1tMheLpYS/+b+jobB89cuR
u9nY1/zN0rKThr93FcbTfmah80feMac+GnLkczPeX8zCbju7U25UGnqq7L5B
PpaJNf6eTY5fifkufnnpvu0Dbhw5kfRlkYay806H6jNTsGH94JntwnTkLZ5l
OLnFoOIxLal0OzpW+62lFZ+Lxlt+/B6mDnQ03jU81W7+Ggc8h8OnnOjYtdio
dFjrFc4tyu3lc6Ujh/r9rId/wlFgRFD91206XovnJb2YC8KbTf18mi/paDCz
05C7KwCTvh5uPvmakCdYnNiY6Y+HYwp0PGKJ9ZaKOJJavbFgV+bep0l09G8N
zjv+3BanXr1ud8gi+ILHUkPPLVALtHl+p57gmUFvJ6m78Gq0ErY10nHGLGnw
SsU9WDbaHp7TTMdnko91Nm98AAXHy0RqO+hoz8k6vA+fwNpUwwx/Ch2bqKw4
euMZ5F3OsaLT6GhqFHPOPvQ5SL6bid75iY7afmdOjZVGANONhR8lX+g4mLR6
zWJLFMQG/gq7PE7HkrKjxgrKr+G+bMvwvQlCfnjfqV1G0cDz/mPrsymChzxP
k27GQnrC4wMv5uhYoR4kkns1AVo6tjZpL9Nxt7xRgu1yAkjkTtxd95eOfUwX
5iSCE0HesqmKvELH38zi8QsJSfDvnma7BTMDo/ZKH8zrT4b332N4xtgZWKAV
dmvV9R0ktBUJRnMyMMG2vegiRwrs2V8sYcjNwOSV2PqHeqlAHpLVus7DQMmb
gpaG/amQk8i8Z3kDA7uOH7gi4JYGd6Wf6vtsZGB9ZGkK59v3wGxaqnxKgIGx
uhseK+xJB3c2knDZJgbuHlTzuEhOh6G0VKaNWxj4bEitXXFdBgRlPk5NECK+
f3FIZNwrC16kz5oaiTIIe0i8oGzMhgllvR5rMQY2DYyuH8zIhpPCHQa24gzU
pT2rjr2eA/OBll+O7GCgk+mTuAOYA7p3BTZqSDCw6teDsuV1uRA1nCvHL8lA
xi0ez0dpuYC3YGOuFAPLxr1mzi/mwktz/oFr0gy0aQ1zMd6fB25joU+lZRh4
2NaIohOeB9q/30n2EMz3K1pCazAPmJzPxHrIMtCALVDfQCkfvI9lLnDJMfC7
5IqgpW8+XJyJV44iWJEjqy1RsABYXP0MI+UZeE195j7VqQDmWwO2rFFg4G8r
epVwYQEMTpi3XCQ4NujOxStrCkFrC+upWoKfGH53+2hWCIHNGbV8igz0D1Vp
kk8ohL5yR7ZTBD/84WofM1UItl8OSbwg2PEmUZL2FMHyJV/BRoIVRw03xj8u
guw6sZEpgmdihbhUaEVgFnv64bqdDNTPvbqmXbYY/g5ZMYsT/O2f86TnzWLA
ZsPjcgRHKuuWyDQUg2SjyXVZgtMa+S1GBEqg+1WakwjB4aqKuZkOJbDF4KkS
B8HCrZXon1cCKet1m74T65Fm2K7ZMpcC3+tvakgwhfNw3kHTUnjS2H/1McFT
ke1eOm9KIbjNxPsowSrqjEzNqVIwUnhmxkrwSEm9kf6eMkgvmfyd9599VGjq
pqFl0BKbd9WK4PkZjwsu9DJIsVDJnibsG/N2sjlcvhy+5JdX+BFsbp56os6n
HK5/y3ixhuAN3qwzK03lYO1up+NH+KeU5Xr4XsEKOKujljpF+FOyVD5trKgC
zPrrB3IIf9u8PPfXhK0S7hibp7IQXGV5c0uJZSU0ab7ROkzEi7XLfsfM+Urw
ZFfLLCPia8xspnRWvwoW+w9vnyPir0Bo0F7/URX83nQiXZzgf8Nm12ZEEP5J
BS2d387ApNRqtHRG+Bb1pcqLiGcG44hSXR5xjfwY/uoeEe/+Vfbb6BLV8N3O
/Z6vCGG/Hhpd5FA1cF36/txFmIF2F6fDHV2r4Y6TYYH5NgZWfORsWymphnN+
xjvZiXyaLD5XYXusBox8F0ZZiHwsNGAKqvaogSPryv0+8BHxa5vHK/26BtR0
mKVMiPzlYC2y//u1BjR4N75xI/J9Uc9Lud+nFjhsvuw9ysFAXic+VbWUOjgx
tk/sDFF/jI9burS31sGk69ALz990ZLbcz+0yWwfDjfuE7i/Sce0BMZv83fWg
Sl898JioXyNPxZIu9dbD3PkuDUWi/tFnrULcmBtg5VDqlWoyHYdvF6vryzSA
9hqmD4f76Xjdt+PrhqMNEGMp/au1h44elqhdEdUA1a57i/Lb6XjLOXmrtkoj
yH6Q691SR8fjG55nF9s1wdp0SoZaBh3Fr3AYLwQ1AZ9HBvue93S8UZXtqpHe
BKvPeFv1U+iotFnTrHK+CVKNY0NlE+jYOWtNGn/UDHnPP7O8iCDmc1TdX1LQ
AnIy+9l6vOmYPWZ2QJjWAh9ebeU1v0HHPbGR/gGrLZDczvew9Tod+4u+PbM8
3Appkqr1SZeJ84Cu/WjTYCswyRy4NX6GjgVvfjj95m4Hlpjrpp9301GrEVPu
qLaD+Pq/N8nadHTnretca90OsgvimxvV6Ri3ENYsmNQOtzVrSkIV6WgTfqPH
SrsDfORK3uduo6NmPPMv6QudcEIxmHz+Nw2fzH0S+vO5C8o2aM5c/EBD73qz
5GvzXaBZsyHiC3H+L6XpL3zj6Ib9JS8PmSXQkCTM/7lftRvkgucX+V7QcCxQ
KbAisBsiXaa9xfyI8S250ekyPZAmfPeU7TEa3p5P4v7l1gulm9aG+I1SMYz9
M69/UC/wGj8KrRyk4uUfUQ84X/fC3IARaY5KxfmB8FKR2l4YHdYyMmijYrpg
xu/DAn3AP32H5JRDRUWSf1VRSR/EzB7yGfaionnfB+U6ZhKo1V+8nPuXgvOy
he6LAiSQaomOOLBAwf087BQ5WRJc2qwX1E3c+7ln21ieHyPBt+mL9V0DFNQ9
4pluH0OCB5ZLKy7VFJx40E5eo0GGimMDZqIBFFyMZxs/5kyBL8cEbW+sktHd
9arphw4aiNWL64YNkVC9tTHT6ysN7u/c0nmWQkLnOZ1Ow980CLCYfSLVQcLT
HGGnyNvpQH1klhhdSkJZgR+XVz3pIOdZ/mzbM6LfZt34YO82BhgMTRX76pHQ
YYTxNuziJxguVmH7/Lgf/949zbx+9TMouvdw2gj04dE9kpUPHw5Bz9pXXvcH
uzBX7fRO0a/DYH+pLT9dsxUt7YIt4lxG4UlbR1311zoMbfqjFFgzBkeqJF9u
yyxDdoGFmYCWMXhYFJZ53bcM138/s/1e7xj4at958tWkDI3POeV7j4xB7HT1
+LYfpbiQeuqLOec4+G/JxVH5UkwyFNhXYDoOLr5O/qo5xSgYb2c2+mkcmC68
lSvtLUDasDnPlpkfEGUz/3GrWDbOpCjHSC39AMH1BV0dzVk48L02UJllApgG
yyZnPLOQSdJaWkNgAn6HHFm615aJKht/MFi1J+B7ZKXWmH8G5qnfncv0mwD7
z9kFlqvvcceVpaNR7JNgb3rSLsTqHf5rPFIzvWEStK2T3ojzvsM+d8ZuA8FJ
8D7ewKnZkoxZLnpLrbIEVwx8+gzJGCnIpB16aBKe7Qpz11F9iwIcw/OxjyaB
6WVRzSHFRBxiltFwWDMF9orifBVcMVgc0u+pzjUFOULDk0PvolFHKWDXCu8U
PBP5emHWMBo1vyQOeopOQXX4cmu972u87vaKvqw9BeJn1/oZrrxC0XLaIVMX
Ynz3aS5buRf4T6+HM6qVYPOSCGmFZ3i/++W8o/M0VLetf0g5cg+bLew9frlM
w6B6nRH/kD/ebH/v53N9Ggw0b1346+2PfGHbvpjcIpitdO9j67t4k9PSTebx
NPjrG3MePOSLWjuFLVPfT4N9uXzKvUovtI8zfyObSci7UzLKBb1Q2tJ8Z1TO
NIh/CNua4HUDJd5eazMsJljkQIymricOuhxXrqwjxnsrzGt9vo5b9w/YHaQS
6zUy6UrLX0G6T71IMp3g4J+XP8pdRu9OM6np/9673mZt5d15CdkLzD8fGZqG
hLWjNrr6F3GnfYGP3TAhL/mi+9nECY23vtxp941Yj03mbaXNBazlXyiUGifW
q7oUkBfsgBUUnxsTPwh9xYsPPUk8j+MazyQTJgl76I7qK1Wdw6mHQwodM4S9
8snWwf/sUPbUKXfjOeL7d45Plw/aonslJSj7J8F6GSVskTboHjcytW+R0Df8
X+ov3VO4vnhB6/p/74WV/+D5SGvkyhRQefyb0G950cNj1hI/hPF0P18i9Cnz
ujRhZoGGs1s33V8m5lunt+VZ4QmcvvBp0fEPIRcLbBIXNkPv3gvXVf8S88+l
GtRwHUcnsor/+H/vm7uDdSSGTNBGSFbs2Qohfxyh/qPSGC+8Sjq84x+xvp1Y
VizRebqOO64m/Pe+evL5RJn/XuwKSNRdt0qwigJPeLs+VjN+Lzn89347M44S
Ea+NzRk+emn/ya/v7PH3UEPltYkrlP/klK8VFS9l8fTV07BIcPWVlC8NkYL4
v/fh1RnDQ6JPnCv+D7tyWPc=
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
q20ECy/6lFk+RX0c8vTqoSLP7uH4YX9HtOLalew8RNSf+kYeFbOGqgZOR/Jv
oj9um7u2dnZwbkY2yH2FKC8l9Lik0REe3Sw9e+AvFSsua600uLsBz7yvLTDQ
cJDj2kz7sg8UG8plcDMTvCdjw+WjL2FAacnKk5WGmQ7beE5c84deakMmlY2G
7SpSo+zXg2ClovHHQ04aetzFrhsVb+DGy5kqFW4ajmlLX84mv4VC5aNNN3lo
uJnxyDHxX6GwN6tBz/UQDWOZWc438b+HngXf5SB+GkoZ86goBkXBmFKivJYI
Desdt8vsTo2GS2ZRF4RFafiOW/sXV10M3LzR1rYuRkNv0e2O//2fvXnZ6YKf
BOGvgtmH7ZLxEChk1nVGloZPmDkHhdrjwSWY79aCHA2/y26UvWGdAFTWgek4
oOHGfN167piPsPH5YuuQEg1V00YjyVuSISDEomRElYaFiW4nGhOSwcAzsEpd
jSg/d4bcDZ/AuOVBdtpFGtK12s2efpgCC9LPVdTUaajwqO2N2Pc0OP5E9Qiz
Ng3vg5v6rPtnMG2M0Tx8lYZGF8321e1PB32StKGoDg2P22bfLNfOAGzM23Jc
j4ZzAjyJA7MZ0KlnkrpPn4Y3L38rZlbOhJI/FIF1gsNPrPPeGc4ENveVtE8G
NLSWGfBIE80C/qvuOfcMaejgunV02S0L5A++CzpmREPGnVfPabdkQd0FubP9
BOfyhrwo3J8N4jbWjd7XafhyNCr+qHU2PLnKfeSQMQ0f1Wo/SyzMhpC/Blp5
BL87B0bVOjng9OY5T5kJDS9VyomZJ+SAzEtfFDOl4Ru+R/6sv3Ig46qccCTB
Vieo12sVc6GVMddqjeBkZr23PkG58HyWwU7rBg35jQYO6QzkgmiE0vlogrPh
zpKwSB7w9AR+HyDY6ubiOrtrHoh9YlTfbUZDrT1PTtA354G6ZbPHOYLXlOgd
V/flA33Epie3CFZ99rKCzjofmHmp8h4E98rwMrAX5cMYx+P6QIK/vug8enxz
AbjQWPe8JniHdYaAll4BBAu0HQ8geL6oedIrsQACfs5uciWYVenszfLFAlj1
SokzI9i59oTPxvOFIGF/hkGe4ELmHHmdN4XAkDJ8eDvBNfM/n2R+KwS48Y2x
l/C/9D7nyV2nisCb3zslhODeT2rqz72KoJ3GynqeYP0/VZV0nUUgVt4uOk3M
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
//devGL6nVvzd+vS/wNGcH6h
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
ddn/AbEyP6k=
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
Mss=
       "]], LineBox[CompressedData["
1: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
cnVGPdjlGJSLdpOw+GHaOxFKLbz52X36IImE0TxOYFJaC13bDNfBIAnDa3ht
XkfVgnG2wpdD4yTkZZx2nbpSC0fURo7krCNjZvbzYiNqDbTunWZt2k9Gg39K
c8zUalCcF72udpCMgQd//hsqrYZ/ubat6UfImFqgL1UUVQ2UXcUNVhpk3OtU
oaZzpRpuSSsft7xMRm+es0/UyFUwt85xq+dTMiq5MonuzkRg31r+ycibjL4K
fRyytxE0xRse7wwgY7vmrxwZGQSrfQJtsaFkbDiZeJMptRJ8G21+iaSQ8fh4
57JqQgW832hiotRCxom6PsfhN2UQOKe7366djP03tuafNygDq2T175HdZDw0
o8GQy1sGsFK4uYdCxma9RF7j4FIIPSmxuW2cjFz8FU+1/EvgsP/N8YGNFJy9
L24Y6lYEKSf4L8iyUzCV8kaFrloEdvekye6bKdheYv5YdO0jMHm5X2Hgp+AI
KcLqlddHCLhtshIlTkGhS3fTdgYWgoUnv5SUMgWNORI990Xng+fK6YBpVQpG
vPoWzns1H8QFO1hzgIJNfeWS/0Tz4ZK2lgH/SQpKCe37k5qQB59o0xz3LxDy
pKt6Hem5cLbN53GQBQW9GeLUTR2yIVJ2g3qLJQXNzVi1Amaz4MVaFf/yDQrm
00tcc1yyQN/z3y+N2xS8MPxk4sujD7CJh25++y4FdS13sw76ZkBeSm3c1XsU
lFM9ZNjMlgHn8sSnT7lSML7l22Tmy3TY8OlFDuNDClbyr3mbhqZBrvf1GlZP
CkrcU9axiUmBayunLT56UXBCwqF7u3gKxAlbs19+TsFlpu3ldYnJMLirxt3L
l4Ihl1v1WdKTgG331lbblxTc6HDo+YmCBDhon5bXGURBiw+P99YdSoCxlay4
PcEUrMq9cxlK4iF2IyW04TUFv8fd7dlZGQczhYGNryKI85iLsLILigGdU9aW
KZEU/Hh2wXBz5HswTKJfK4yi4OoZ8e8p8e+gTjvfsSiaggr7pqarCt/CLGe8
T8Y7CuZ4J00dxyh4GHVmKfw9BaeunI8sa4oEjUbGJb1YCg6vZDNEUd8AH1O2
9844CrY99tdYGwmHu8p69lMER1VFql+dCoOMqD6DGwkU5BtLe8i6LhSSH5lf
4ksk9OkcOGrE+hpeth3LKSPY8kZoUyxPCGj9uek2lUSMXxHTlJB6BQZJDj/c
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
v++txUx4D0glO5b/H1dHCBs=
       "]], LineBox[CompressedData["
1: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
a+X/AbK3EdY=
       "]], LineBox[CompressedData["
1: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
AR0GzRA=
       "]], LineBox[CompressedData["
1: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
1oUt6Cvz58udRDrEtArbTRe1Yrzmm2lhGzr0J1qMr89pRwuRyrnROho4ZztZ
6HS045o4nljlchokqEwsHptox3wMFnTLo4FmzI9hA8UOHPx76UR3DA1SJL2M
nid3oMNpKlXzKg2cFrubwl51Yv46/x7/zTQ46dF9uNunG4OnUixF/aggvvNO
o0ZEN8ZdpUgKe1Mhyc7ixuPsbiQ9nd+w4jwV9uf2OokNdyPb0PfzR6IvF6Wb
9TYqkHBeQmRAbxsV7gyfO8f9jIT9qwI3tdP64UhG7osIlx78bnP02LRKP0zd
Hrvh5dWDRw5m9UvK9UPTS9XXxrd78IbhQy5diX5wscLgsZc9aCo/ZXmdqx8k
nb9QyG09GORqohFNpUDuNpdqux1k9Dkx1lp0mwJCOTm5unNk5FA4wmvS0gcx
y8JjD3H0EvEeEK6q7IPAGQHt/at7UXaflNzmvD54JB3iIKnQi+8G9b1Yz/uA
d+2N9R42vZg09E3pj1MfyKbXnbuLvbgoqs7z/XcvvNwqnKR9vw8rOnaJjG7t
hQ1zls+3hfVhh/rPdj+pXvilpd8uFtOHC9capQUEesFOhzrfUdiH9pd2Jm6Y
IwPf5cnp3o99yO97OGmmigy+qlok7f0UTFu2J+vicTIEaeX6mM5Q0NLeWZR0
uQde7eVJm12kYOBTHY1Pjj2Q7Fog/IS7H3WFN1T8sOgBCSX74GTJfhQmOwvy
7iaer5UpcNPrRxef89aj/0hwc4dDmumLfgxeEr31JpQEFmtcTZ01qFh3I/rW
NtNucHzenfNZh4rW15LCuDS6wVT76ZzTYSrqUDbH9qzpBt6Bmyr7ralYEtlN
Os7sggduhTIPb1Oxb8HgNeVsFyyZvR92aKbig/4RWcGbneDdvXulnDkNF2SH
//q/agdVUlTcN2saJvBqe6v5tUME6+bqUkcaFp4g72Hbt4NsHO8FRS8a6tM/
TmxQaAeNjrzprDAaBuScytUrboNMkYkG+XYamo+416qQWuFe3W/tsb10rEq6
/yGHowW+D96PzDlIxwVPl6Rbw82Qv2xv2EUjOr7/ZVp7sKkZfhodutx+go67
H6kpVj9uhvJqv/itXnT0tkoKcxZvBu+vUfePJ9OxdXvtjL9SE/Ceznuiv5yB
z35YSW0m+ng9LkH/63wM1PYq6E3Z3gAzrRLn4oQY6Hfg9dym1Q1wKblVqmc9
A4W3DUTxdNTDKNlsvHInA6uu2z8KMKoHcf07RTlODIx4XBBvcqgOzkbQr+w/
z0DLDV/pl2Tr4HTAZbFGdwaymDXygcvqwDrm6UzRDQbyZbnLJ2MtWB8dnFwb
ysDvlh8m3+ythf6E8ZqfJQzs3qglel+9Bn7LUdmjlQy0NjWMNhCugXWCKo2t
NQTPqDSuHkQY7fj31buNgetzRRonbBB+q28INGYzsONVUuJ20/dgZ2FQvnoZ
E8fEdv1k7q4Cq+ue4ye5mRi0cMKteb4S7vVTSC9XMvF3ikBNRmElrN7zuWZB
mIkaDHlnC+VK0FxVxguyTJzdn/1TR6YCdANu6LN0mZhnqx/nx1UGX75dohzS
Y+KphtHe0w2lMEhesk80YOK5hNrDWoGlkFg14qhnwkSuwwo7KDyl0FnXwrXe
lokzmkOcjStLQPFEobTEFSZmf2jw8xN4BzKKLRwzPkzkMa7g/dVVBCdGFMjV
N5jofivo2+WwIrDz2a27/zbB8r8VjwkVga+W9m5yMBP3veFWbBYuBN5ea9HD
b5hoZ6Si3SqaD+s5GAmPY5nYTflyeiwtD5R1HcVb4pm4MMdppLk1D6SL/PK2
pDBx3ndt6butuTD+dlPUlRwmHvTVGDmmmA0iUjz6nnlMXDRz7rPPyAKa4Fqa
cwETf5R+GLugmAWrAhcSdxQzsS9gn5CrYiYc4W5E6yomVkkkW6xUTId76/mu
rX7PxJL9yo6D6WmgyyW/qgyZ+OrTrpL8rWlgN2tH+lbHRDGZ5y37tqaCMq2w
6mcLE++GM0NWKyRDtq2/vVMbE7cNjJEKU5Pgx16TD/XtTDRvEQ8wl0+CT151
Hm5dTHygV116b0siZIinkI/2MlEunuaetDke6Hsfvzvfx0RXcoXx0SNxYNml
136LwkTJ1u8qRsdj4XH9wRcPqUyMSNa8qHTyDQzoiBnfpTFxBe+AsaBtDJBN
e9U86UyUzlwqmrSLhpe5Rm80mYT9zFn1yHOvwPP2W+lVLCZSlt8k21x8CaLz
a/uoBJf49a3e4PEC1KS7qSc+MHGT4C23MJ8omG8u3bJygInhxffW6t58Bnt4
ZVILCY7y6vOe8Isk+vr+fRODTHw8OmSs8SAcbq4YsvT9SOgzpDkxXjAMbFcM
v+UYYuIZmo8mWfwpWP+uXHeb4J3D0dTfGx4DWJs1zhJ8Po1TVHrLI7gZ/CjJ
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
+hj5
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
H1ZiAjE=
       "]], LineBox[CompressedData["
1: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
AE/sWpk=
       "]], LineBox[CompressedData["
1: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
QI3le2moJg2199/2LonoglHHHp8+oOH41940lW9dUJuV/36Gl9z7dn6QuhzY
DcdL76S6U4N4xOqqvHx/DwzPbfv3T3sQ3zHsEt5Y9MMOpaUUwf0DyLk/vWLC
vR/UC8SyrnEPYGd8j4BYZD/UCh1nfsI5gCJBbWkZ1f3gc+F2UutiP67cMRqb
zD0AFMNek2rrJ/c+1wDbDwNQ3efoeIT00+Nc3qY3JGiwWeTfUF9pHwoEldMt
flPwU4v2V+NgL9plCRaHHRiG4dlY12flnWhlt2bVysTPcFzbjfObXBtWtfYn
8quMgvNy3YODLvWo8d897pmMr1B2o52j63gFnqbPxcSMjUPK9bWeze35GDH4
6Ur2iklQkHprXS2ZjAouK+2fsk4CU/i1TaIzSagT7t5ruHESZp/LqKzITUKu
Bx27fnBNgtbEWZ2Zw0loECnz4pX0JLjFiD5YOJqILLLFGxQtJoG1h0XOQTMe
VzZcmllonISszrrujNQXKC7XxPKibRLitj1iP3fiBfaO31pxpGcSOPS/+Zf3
x6CWUJyx/MdJEO948HkVewzmaRrSGv4Q+8xs/1v58Dnu2iD0JJt3CmzPyzTO
ukegpdjmz2A6BW7iaoontofg9STB6C7LKdCSPuywXBqMmQGnanRvk/G75W5+
RsH4rJyJ65DjFOjKSXkv5QShXtxa903+U2AQyiK3t+Apjt6rNYlOnQLxSF5b
02hflJbkTeROn4IgEf0xrn8+KHLywfanWWR9cyGLbYY+aPxM85Js4RSUb29e
UXHwMUbfCjIqrCLjr/LWq3d6oUbrlE1qLbHHT3LMDbzw2cb0g74NU6Cwv2hH
Y5onujyMcN/0YQqy2t1WuPl5oHngq0Wl/iloC1dNqz7nhi/Ltq2KH5yCuD9F
r1r9XXHCLVj9O30KmCQ8/nXed0HufBGHM8PE3jsRjWMazvjGiklJ/zPZz6t3
EzR5Jzw+fopff4Ss5xPse0XMEQ/5ZP0S/DYF056n0ks2O2Cfk1/7+DhZP4IX
3FntcV5DOTr2O9mPJLtR1L/7uM6ZtbVlegr4bFPfeE/exS6tob0qP4k/XfVV
5MfuYIiU7OnMX2T+kBwr9k+3MUb9Zr3SHzL+oUfMqdAGb+hK7br9dwqGbt2R
XZFrhQqH3Hb6z04Bxx7mKyezLJC/Qak8eI74l2P1+X2ZZsi09yur9zzhIr3m
gMxbmJulMGm8QOxh/NK/lG2C0ameFocXyXxBqgFmeUZ447628zfCtkJra5KK
bqD5rzKuoCXiLw2tTprTdYyslVHl/9/3xsnfI874XMULEa/+xREeuhNwQy/8
Ei6eVZJbv0z8rb4ioTPpAj5X7pgzImywaq/9uKUmvrezOpbyv++dk6xn2INO
45vnL5f6CPNVGHmKmQFWnroCfwjHOSX/B6aH8P9/T12+5quSgWvp/wEx4z3O

       "]], LineBox[CompressedData["
1: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
3/1lhRapsA978f/vR1/ik9323jn/fwC51QfL
       "]], LineBox[CompressedData["
1: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
C1FrJL/04WjIxgerentx7XjVdnl6H1Y8faL8frQXg25969pX2YceOd6mNxd7
MbaWJaT7fh/65K8Vld3Xh1Cu2mS9pg/t3IQ2n0zqQ9OqfcLbd/TivYuT7ZkO
/fgtZAN9p2gvnkncrxrq2Y87NRUOS63oxU/ahxosQ/pxMv/0CAezB8/sprUv
S+tHrUUpSf38Hlwoagj4NNiPB05s+e6+vwdznui3rIcB7LG7vzXrYDcuGYyJ
1lkyiDf2pL59Ld2N/pZsopY8g/jqpvWtmvXdyH+pcL/j2kFsqBeCysUuPDD6
YLvjzkFUDzvRZl7dha3+MQnrdAext6I73U6tC7+5Fo4v5gyi//FTFffPdeIm
hWmRldo0PN4851ml3IlHvR1Oy1yjoSPSW77LduJ4xe2s4xbEL7bK8KjxdSJT
ym1W7y4NTU2uPUzq6MDwEGulnc9peHmZZbmkZgf69IWuPj9L/IptfOO90+1Y
VKsb8zhgCK/JcJw7drAdbah1HAHhQ6hbnlnIuqMdTbKaI+yeDOE819Jdttzt
+Pyp4AqZ7CHMofXY8oS3IeuBR+tPtA9h1YMghWOBrVju5WT6S5COSkc2bbhi
14LaPDSFC9F0/JH7YIXHuRZcQrlXHUug497xtqOxMi241j1CWDqNjhdj0mJz
PjejkaaI1FgxHd8HXKrSMWrGb5T+/ZleOppftuXJP9uEH+GIpLvAMF7Sk8ks
Fm/A8KZFYW2/YbRerdIa8aceyzt2JLYHDyNziYmuaW89LpH5vu1o5DAODq5r
+RhQj+/Xj8twpgzjmef7xfWn67BfJalGqHIYeZTjg2Re1+KWGr5knXmiK00C
ThcjavHPBhyRY2FgzddMXXubWrSUsZpbwslAPi+WPUEba7Fo93ygtyADV32J
3nfQuwYjszbs5tlFdM+t0CtKtRpDOwzXyRkxcPRQjz6/WDVeionSMzNnoKDZ
owbv+Sqs//vr5KMbDPx7edbiZEYVls3vFWhxYWBIQMmn88urMHXf272V4Qxc
udFkyqu5AqOX032LK4iOFlkkrAp4g1cdlo8YEp2+Lxj1cyl5V+7WSNpn8lAY
F31a8sv0a3zDynt9mpe880yxg76XXuNcVYeJtQCFrzi1uRa2lGHN2fHX0uRd
UBZquzVbUYyfPQ24W6VJ3QEXj321L8YRsyXy72QoVHKcofdtKcaCjD/Z9bLk
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
5sjuwf99v62c/00/ZofPm/8DrKljkQ==
       "]], LineBox[CompressedData["
1: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
HnvryS/rvRXxf997TzRVjct6PC36P4sAhzs=
       "]], LineBox[CompressedData["
1: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
ti+98pNVzi33/wBMfI7n
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1:eJw12nc8l+/3OHCjIqMkSVqSMrJCktRRSEOlNITSkJ2VtiIrCcnKzs5+22Qd
e++9vbwGL4VXg4yM3/15/B5ff+D5uO7rdr3Odc657+vxsO++9dWHLExMTN+J
b//7+f+/fsL//aaar6e4sMYA9qgjy1ZcGpAp876fRNjm/aleP67rUGk4PvmN
cBTrEPWIvyHA0EZTF8JOHG4nhbkfgndr7bUThMXmHJV+aZuD7bRs5sQq4QeZ
1TsCrUHhgd8bZ8JG/kmUHks70Kx6UspN2ClqwMtw8xMI+hNl936FAb6xefUy
Wc9AeSN/xNwyA5T2qTlrX38JmQpbVa8SvuvTF9qw4AA5Ybx3vvxjQEZn4Z+E
cEcIP9KwOLTEgNmttxSeCb2FS7GH+DkJqxy4Su+ycwa+6sFhpQUGrJveM3xZ
wA3e2Sn6Ks0zoCC5Z/yJhTvkvbnaLvaXAbKJVq8mSt/BruRHPIN/iHiMxWWV
GnuC2P5L2yN+M4DJKItFqugD3JDMKr38i1hf5U6lhc3eMN+hxvpuhgHPj8w5
5RV+hDx2oRTOaSJ+cQI8tzx8wenBEPvbHwwIcGUa8Zb/BCWk8pUTdAYI8Q/T
4jz9QFhwoxPzGAPsH3GKVx4PBI+ofR5co0S8h+bfZNMDQb32yiv2YQac/ZX8
6EdgEFT7hJ/q7GMAaS5YXPnXZ8CDPTK5rUQ82GemPFNCAU5K2p5tJuLVdPgn
Qy8M3DolSE0NDOBZG9FL5QgH3xMylknVDOhj42OXt4iAr8mG57MKGZBzZubg
DYEo2L0Su74tnwFexfdCnGyj4PFW3xOjOQzYxXRUcqQhCgSv37jUkU7Ex2JE
VfFNNNyN3STBFcMAyas97+wmYuDFMP/GfjcGBKud7+qpiod13gv7Kt4ywHU6
0chMPAHURUe5w14zwGB5yEfTJwGOPDeK2fWEAQI/+R991/0KYhxqMXcfEPvz
WC2B8isRfDeLp/1TIeKx76PMfflUME97e4CVNgOyjYqf+xwyoflZthHH6AyU
rR62iczJBJEY3SHW/hlwONp8NnAqE05R8+qam2aAz6u7h/92FhwY4aJg9gxo
hwSss1bNhuTdj9NlHIn52nzUEJ5cMI/0vNnJNQOSinUaMb0FsOnCh38N62dA
hNt/R9qWb6D9W3y6YHUafFdj79AufIMDp9hWn/2cBhWbsoMjZd+ALzop17Vz
GuLGxRsZqYWQoFB2beLzNDjd/8zs4V0MshrbbmkITsPTmQjlhaNlwJ/6aFsj
+xRsGo86GKlbBYXsU6TzGZOgkqmWqC3dDBvbfQcf0cbBSLDRrSipE+purrdw
EaaCgNWgYLx+H5iZVGz4wjIG6Tc76v4KDYMa9QFJ8C8JbCivT5fKDcPjDWnf
AyZJIF++fOW1+jDsOnY+0KWNBD+K7rKTTYZBxu6C4YVIEpTypP2nnj4Mc2c9
U92OkUBwSwWL8bER6Ey3XtQdHgE5acWErrOjcJb/tCpz4iDor1caOhpPAtaT
Ci9GPw6CxOMV7YepJFgr4d1Y9GwQqiUjxHyySVA3xaporjkIZ9b1zraXk4B9
uw5T0vgAtPtuy9w3QgLaIyWVZJEBCHJP1RjdNgZvIuq5GiP7wMLh0Z6yt2Nw
9fGYha57HxTtuxJ9zWMMzut5mVMe9YGVt5oc1WcMNOYstX+r9IH0+XL72bAx
OM6Uzzo70Av1P8eP9eeOQa/1d5X3/L2QMLtcmkkfg9gQ56PcXt3AdH7s5Mfz
ZFARG7U9YdsNt0zenGO+QgbJMxvULW50w/kXyocf3SSD6fcdpSjUDWwfN/vI
GZGBe5XZWiu3C4JYDig9fk0GL6nHq/PDndD0YUm+IZ0MwSNur7KkOkC4fq63
lIsC458+zIbzdsCPqLtrJrwUiLss4+Q23w7b3v8r4hCggGxa9qh2eTscH2+f
UtlPgdIeZfn2a+0QY3vur84xCijN7+t+9aoNnk1uXDtvRAGRV1Qh6Y/N4Ggm
ekc7lwIFVY8qlAyaoX2a2bjnGwV8B80XVMWbITVyJe5GKQUG5kzhfGUTbMm+
ValRS4GXJcc4Ts03QqGhiuFIHwV27PWRqLnTADurC9kXlijwH8ntjpFkLTCV
P7lYrUyF/LBDl2QXa8Da3nzl40kqSPTq1C9V18BWMc3ya6epsJ9J1/mDYQ14
WPx2ajpHhaR1FmPhftWQvnKwxl6XCr+Ya+3dFyphmF8t6qs9FSbpOdT0yjIY
eW/U6JtIBVn+00l3PpUByd+a3TuFCr5i6mybDMvgT43/K5d0KtTocd/tnUXI
YI1nNsyhgtb+cRnN+6VwfUvNqzakwnNIat9xogjyXp6ID++mgoPDirR9XyFs
kA9YPt5HBfZvbtUtjwshO3/AqXuAqJsHxSTX5G9gOCGzaX6UCgOX2GL/bi+A
Zx2HpWcnqXBpgyTb2u8c2LTNdmfPMhXarAfajXxyIL2/mV1gjQpNkd/JjeI5
8PRpz85rzDToKb29K/JuNtyY1cssXE+DjDnRxmstmWAoF//x1CYaNB1YOaVw
LQ0G2NobjuyhQVT/y3ylD6kQ9bBqYocQDWwuxZBOVaSAkdasyMI+GhQPq/bf
l02GqtdTqzEHiHFuqyMUrq+wWNUlniVJgwImyvnlmiiwObJ4IO8YDe6G9yVH
DHyBstYIjtvHaSA0W7BORzQShqfjmFZUaKDEnPiLURYKxjKre8VUaZDo8zV6
edYfhDbpHTx0hri+vqFZ6rQf9N5w9A3VJKzAsd3uoy9Ep33gYD1H+M3KsPk1
T2j5VCeFF2jAlME3V+X8ArqcDKWo2jRQdTY03VZoB/k8x7buukqMu/wKekUx
AQl7PvaLOoSjMOLEyDE8pOS5J/Q6DZxS9PXqChxQS3/9CukWMf+0y6ImvsWl
OZtbY3qER/jXLe1zw3Yl76oBfSJeo19+VI9/wNcxAzUFt2kge26z9mxeAK5U
Gzjsu0fEZ65qJcAkCJMftF/6TvinBztph0Awbnc8Kpt6n3CSQWPL8zBcdd0v
tNOImB/VKLAqFoFe+V3SdYR50G0/T38kiv5t1rJ6SAN6y22HR7uicVstW368
MbEe+Vcu52ajcbubG+tREyLeliuS/E0xmBVXbVhO2FSh+FxnbCy6XJhqVDcl
rh9wS3Z6FYcCvXvPlhMuuL1XaI9OPM4PenQpmtFgwVP9VYpEAtaIXLWNJ5yY
/0cksP8rbswrGnpkTgMPjTq+XxmJaBVanFJLuKC9RFLFIwknFkY+CFoQ11c+
OPHUMBldInRfGxM2nVXd/kUxBVXc7jmlEPat7/TM405FgWH5wEnCC9p+psXU
VLzAzFUsZEkDdoPvThlFaXjfQWxOm7Bp6Kk4P790fLOhQfUlYaG8uZj7Zv/h
LVf5L+GESYrpB3mEMjBkQzJPAWGevrFvDz9k4I86+8AmwomDSn8y/2agxOFh
qQHCZZ86CmfvZWJCi/QAifCsZ8OCVHMmnryVH/o/SyYoBd5WysLwjBrrfsIB
uw8/d4nNQqvB9FuNhFXknmx4wpaNdSy98/mEw4VXZm9bZKMi5a1vJGHd/Cuy
J1uzcYv0/H7H/3n3Ytw2+RzcqOCUdYuwK+MpUINy0I9qoiJNuA20ppKWctC2
eal8mYiHWPT8Z+M7ucgp+E6tmvBd2TlpwYpcXPMzKH9HmBpRGlF1IA9fRzQd
Vyf8U7Gx7eH7PGxSlsheIvaja+ZjzspUHlawNYimEC4zdTzipZ2PciosodcJ
2zBxqG7JyUfzZAmOJWJ/pzojyry2F2BaafjzYMJaST7dxiMFOOXReKWSyI++
9SWnq099Q0s+tZLLhJmMP/fuiP+Gi4wXYj1Eftn8GxSPtyjE8JrUtTYiHwM2
s5UNthTizys2lhqEDeYNZdjlirBSy3kgm8jfuiS2C6cXihD2yhW/IfKbfZWt
7bJ+Mb4+HCc7+IAGuy6EjF4tLUYrUe7Ew4SjhEovH3MtQaUPr6ObiPoJ9hvS
ctuMuNyo3lh4hwYCcifWVOwQd35ofTBx+3/5EBM52YV4JGCaZRPhqYyGZJ6L
Zahg3XrjHFGviqINJ9bxlmN5/+z95zeJ/bZozJNTK0eHD/0nntwg7k/Wvalv
X47hVVf2WxL9QEnh00RoTzla6QnynCX6hTMlTqYjtALz1A47FVyigWXUsba2
xgpc59VU6naR6KfNJ87VL1egksMdrotaRP69XQ7/eqcSVblye+qJfsWvsjVP
QLgKG54kKTmo08B4kwlr1ddqPFnyqbBKiQYcswsZ1kPVqOyncGTLUSLeFRtM
t26pwQvmd8tuHCHqxWxT2emXNRi0r4yz+TBRzz2ceaBVi6Q3mz4aS9BAoeRo
yteZOrxPEeK9JEgDN6rWuhbhetTaZcgkKUADmeiM8B836rHjWD03Kz8N3LP7
dLmwHvVebPEM30KDlYrxcLJPA6pseirymp0GDUpfz/RKNqFo3ZXauVkqnKK0
JVrcbUKVkURh499UEOU47vTXvwmn3HvTWhlU+PZTz4Cx1IR3iyR1fb5T4epy
uqllXTPO3jq5q5B4ns3+pDZ43GtFz3clRk11VCDlTeosarSjr7KDPTWQCt4/
HVYS77Tjhh0nt3n7UcHA6biWzrN2XLxLOS/zkXi+W34q/5zYjjrFCy/uelDB
UXaf8ShHB0pLB3E+fUk8H+0olkYtHTinkyRifZsKwtpBGruudKGp3GJDzB4q
uKWzHdpm1oU3lc/GOwkSz0urxEW2t124frZfVZefWP8DqeODGV34r766fJab
Ciu/LFOP8nTjv99C2yjLFPjpy6tQ2dyN5zy99IL6KcByM8BqWa0X5/epvLnv
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
7kU9A2xeJlAWjcNR7rD24rpWBgQ/12MqHA5FrjZNEZV+4nqXhEOH2z4jbDqw
I2yQAQKFNcW13J8x6cjJ4xPDhNsvnii+EIStzPxDZ8hEPNy5irPrAlCQsueM
HpUBus+frM9kC8C+kMVsvXEGDHHMdTFp+iNTyL0nwt8ZQFVLMvWq+YR6BbS8
yR9EvHl4dSo2fEKdaIm+iGliPPw8D2j6ojkmhTT9ZEDZd24NFj9vrKwNk9D8
Tdw/KPyfE58XNt5Ah/Q/DMjY9Nb2yWdPFPain1P7y4C7IRGmXyPfoYX58wKb
eQbI+iyX9Qm7o4zI5VbPBQY0Zae+M/nqisZq299/WiT8+0zoRUkXnGvpJbku
MSBuu0W7a+ZbvJsw2270jwEigQLMbEedkN4jrXt4mQHabpt/h714jcLf46y/
E/bYxcbx1e0lBkt18vmuEOsVezcg7PcMV//4qwuvEvE65D3N8sUeTVv3LkcR
rvqgV6ucaotrVdzHuNaI+ZHXW149foTeL3QWHxDWDu/6uOZjgvY3NY4nEuYr
HSifSL6HKWlBK32EhYK+hCr63MSftbfgL+GMx+L663w08f/+H529rXpGzuNz
8f8DZgVbOg==
       "]], LineBox[CompressedData["
1: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
tEhibOn/AyHkeLM=
       "]], LineBox[CompressedData["
1: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
G2blxw==
       "]]},
     Annotation[#, "Charting`Private`Tag$2440#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-1.6666665195035506`, 1.}, {-1.2006323671284156`, 
   1.2006329245274208`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.923474571736366*^9, 3.923474715106903*^9, 
  3.923474788984024*^9, 3.9234751501527433`*^9, 3.924019260774579*^9, 
  3.925463641155995*^9, 3.925463679350964*^9, 3.928987882143818*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"23235bc9-1084-4f23-b4c3-e1f425900686"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", ",", " ", 
     RowBox[{"Re", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
        "z"}]], "]"}], ",", 
     RowBox[{"Im", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
        "z"}]], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.923478827924526*^9, 3.923478926038433*^9}, {
  3.9234789812460704`*^9, 3.9234789971367373`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8fd408a8-e2ba-4dde-b453-e7df7578a5c3"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
73LZFHA5r5eDwiPebEUW1aC7PtG/q5r8XVDfB4gvfrxgdQXqaNW2mHGjAXTX
srkV92qG5CKrcztFTheUg74Kdhd5gAtykPmM3lvxGvx+0Dq6390j13PQr/r6
Ru+7/H6Qh91FBq7JQeOsNHtPKfD7wdh3x04++J2NqpPLVZ695veDEWOf95y4
lo22vw3uaXTg94O3+4cv7J2QjfYOqQiXUub3g/dVh515OuAT+v30hvjMKH4/
2H/fpo0/jmSima4XdW228/vBo4MMGgP2fkQHE7/kzlrJ7we3Vaw/2OqThtRX
po9dFMjvB/fcXuDwZ2kSml2mPPCcZx3oqFLdhYYT18ej9zJHfjk85etYnX5r
XKctdMHW6o9tlnW2AU+PZPfIu9ZmOAbft3DrzwGeOqoakeGirthms+4Gn238
eY7V+tDlnot88cK9GyyL0vlzG5Hlf+q6Ta9iZy3PN92K/PmMeHP06x97Q/Db
7103C+35c5juHI8N4x/dx1U90pd3pfDnLaKHr/ZeXPMY1/5xDDn5f+Yq6w3E
LIOyn+OnZwudjr3mz088pq571T3lFWbJyHdE7ebPSfRfJjQaa7OwlvKLHxNX
8uch6Z/fa12RTMKad63Moi/w5x6F0t0Dhh35iDWmfzvGceDPNzZWpS6WLcnD
Nh0W4hbnmoCnwcUOw+4mDt4bHTYzM7wdePYzGb+k0OkT3hNoWFQVz5+PmXWu
HtK7MBsH2x8Wuy9aCjy7V/8J8PmYjePKMr9Eb+TPuwbt7OLucs7B1UueHat6
y59rBc5dkD9NJxf/yDle90edP7/60VMxduScPJzyuuXoblYZ8GyZ+njc9o35
uFuzX3zO3nLgeaNfmvbA9AK8+UDy5AxUATztmwddULlXhL9wPPUc1lYCz+AV
QdUXpUvxyCu70pIwB3hGy63ndp2uwB2ZW61zKqv4cyTvKWv01vX1g27bq45u
5vdfc8RaVqzyr8Po4Uslw5xa4HnWyihvWGsrXt9k96vqcRPwdHvv9+jWtlJs
GuN2v61/JvDs7zjRxfJ7KS7tp7Z0k1kmf79fNwuyDCvD4UGqbdovMoHnqJvX
e3cfLMce5RlLX03KAp5JAduPbdhZgSPXuq/+E5oFPMu3rR0737sSZ4nK3fix
+BPw5I3A8lW1HLwkbtV7tR+fgOc5cSUvv6wqLPvYW/r5wWzgOedW8tvhTVys
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
aT/4h/SDwJlN+0EO6QeBsxPtBzeSfhA4h9J+UIr0g8BZmfaDC0k/CJwjaT/o
TfpBPmfaD3qRfhA459J+cEjtv34QOG+k/aAd6QeB8wPaD6qQfhA436b94ALS
DwLntbQf9CX9IHCuTV2WMG4YF2l2RW1oeNIEnFPovKKbzCuAZx2dS2iRuQTw
vEvnEm/JXAJ4OtC5RDmZSwDPCjqXCCVzCeAZQOcS8mH/5hLAU4POJXTJXAJ4
HqFziQ1kLgE8velcwpHMJYDnDjqX0CZzCeCpRecSkWQuATwz6Vyim8wlgOeO
niL1uLhmJHdlYolrXTbwzDbwqRS50IzEl/00S2wugetQhvQ6lDi5DoW+1TRv
LQuczP55YPDExD6eIouMFi1qeYk8Q15lxa6UZ+uI7z6d0sfT+nDG2984Fkm/
EHNXGizH7l9zddCdPp5X1qsE9497hWZPDbEqc57AFu80vazbx/O315ExLpVx
SP/mvGUBtdLsxkHHJof28RT3aE1KXRqPDtHrnhH03PQGem7a99ev+thZo9jz
vxdfwn3czEJuT/p6iI2Wc5Uvlc0fzh7ZXDhCv6IZ5SfamHVveIccP5qbGUmK
s8UefRxVU9iM9M9pOmcNTUa3XnqPe9Xan12m63V3UGaff7vGOgyZ/wFdRXte
GgX8wtJa6x1y3jSjlbbqRg1LshFvdPLiKUaf8bJzPccnBTajI69zR93SKEb3
mevU9Dz1dXqemvy98uzY7LruAdtrkY1TnVrYt2x0+N/z6OTYH6WfXBWzqEVf
t+rvTd2aQ59nO4FtV/asZPaKWrTcf+/i3qIcdO9J/91l82XYjXkDv7Rp1aKe
5gUxSvtyUSO9/nuOnoNWoeegewYkFtuXDWfvY1/rzs6tQVrye3ruvyhEM9ra
b5TFirOTtDpVn92sQW+61ou5cIvRhmK5bUYBA9jeTXLHxhvXIGPdcdYi88vR
kFM3dB3KfuO7tf2nP3xbjY42dMordPGfh2b4PavWO4CLbhprDRvUXY8qmfvn
6XX5UnoOOu/fc+T6/l6vXxO+7y1Gd5+UYMPtZajJaGG4/QRZdlrIhrH+04rR
ih/+lbFdZagf/nRO6ZwMe2PJkmC18iKEwmISB4eXozh6XbuYXte2oOeg6yV8
auw3D2ZbNnnb+3nlo7I6p7vmatVo9K+4sLL5omzZp9l3VXNykaKjntgbxVrk
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
ckhOlmK84A3xAp+MflRZoN8oA7c0NjTvp5EPP+SS/IRjXJAGcQHF6eaYvyqA
/BXJ1VL053/D9xciftfBvFZfyGuRXFlhvPwY4mWK66dgvmso5LtIrswwXr4H
8TLF++8MIA82H/JgZJ8zsP5qLdRfUZ5kLeYPnSB/SHajPcb1afj+QvD7X5hX
9IG8ItmNgRjXO0FcT3kVU8w3XoJ8Iz+EfNQM87RLIE9L9tkD8wy98J2F4J0v
oyEvYbToe16C9pWF9Y1eUN9Ic0ZmrJ3e9EZxAau64loW10qa612J9xHGcB9B
cyisu/1szqry2c+vPA6XlUhzvX9obPu8TbWK+Z1dcn9Hy7rzDyJvUKkMOutS
6xfG7xjZ/78VdecZRH7gycc3ekHnVEx/9JmYjal15xNEfmDvqX2XJ66uXb+n
3sh1MzPrzBvQnFDTrq3HmahYVpXFwH/y684biHi/1T6L6psv01lmdJMX8fvr
zg+IuL5p+Jz1Xrtr/YbxXX9Y6FJ3HkDE7/7NGjye0z6dlRWF5Ea41h3vizjd
dnfVXH/fNGb8m6K/xf2643oxH6fcqLdhPZ7KjjgMCr4Uk0d/V2rPk6U5bpX7
P/586UoK6/ivdcfn/+XT3xfI4nQxB2eOznAnvdbJbM2YjevT0qU5j0GyeFzI
YSz/uszSVckqSnZXpaulv1/Xnj9Lcrh7ov2NiUsfsTObr/Xir0ulOdoYd3ti
3C3kUHVn6JsZvhH85JzVzxwzsknejJQhfRb3v8N3GjlX6JvkkFw9cqhxs9C/
y6/oOxSZ/p1D8pM2MeeC0VTOJyg7HOvdLJfkZIpNq2mrPiq4smzAw2UBuSQP
X7fqZXbyu89XWFQUhHaV5MHlzNS94Wse8CGjK7ICt0tzNstaWP208MUj3tJm
0NFkHel8TV8fWVJT+pQ/8Oy8vPMFac6m6nSn6CideL5myZZ6s7ZKczY7nuji
652dyL/8vCRu/XUJf8Mqw8g+3dL414Jgt05rpTmbndb1y3YalM171LN6reMs
zdk8Yfzt1aY/i3ijk687BPaR5my+XKf/0Lw8id8MGO971iWd8Cxd2tc81iuZ
91feSDU7n054nq6fcrCodQpf+H7SxUYV6YQnT95iFvUkhUdM1c3aP01FeK58
rp9ofjKVu+2+u9IiXEV4jl855dXMk2k8I+zHxU2HvyA8vyU1jylMS+ev/v1t
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
llAnxuqoE2NC3pb01evZoHE2DzF4fyjHI5YJeWsWfOFxizfZPNLL2+FxdiwT
8tZ9gc3FRjU5PPJczvtB8+KYvE5sIvZdFHViPlgnlgh1YkxeJ9YS6sSYkKub
B762W96piP8eXH/Kj9OUTMhVyer6+VH8Fbfx3T4wzC+R9XOf6ecf8oNi9G+L
VPZlGh7rW3x5pXcy7Wsp7usk7Iv0qAXuKwz2xeX7+hf2RXJ+C7/HC76Hy79n
JnwPl3/PY/geslcVKD9hID9krz6j/LQD+SF7okR5+AbywIU8RKM89AJ54EIv
JqFeHAC94EL+t6D8F4P8U51YLtZPFmJfI7GOBerpLNBTqvtSYD2kPfb5Eetv
Q/0NAf2l7zTynG8/2KuQ+f22Nd3MPoP3R3zCdp0svvRUw9r0i0mKOB3LhTyP
xXrgcdiXRuCpwN8X9P3+e1ZX/bDQa7O7Kwqya+2q7Z2J34qT/6U+qIMzpsQ3
rv37LbVtzOedYdSXw0uREdem1t5Wz3hRb+CccOor8uueNgFfNBp2e3oFvzDp
NvUVqen3h9f1WntbnDsvMNghgvqKlKC9PQ72lvqRXpTVFYt+Shm+N9uNKKj1
o940Kl8zQUH9SC2Sv53zy9Gw7idWx19URlN/Ev/cd9WHXmiYh7d6ZHix1Hd0
Zdqs8XuTNGxs/aAt/fIfSf2u57aKiHusYRk/Rf9tsjKO8PkV64f/ls1j+nXY
5NQ+zmq27N7+fvklSmmOVWbhrat2arbq9SdvlwmJhM/KY5uLc2eo2b2xz1cE
nk8kfHpgnd5GqNMjfKJKLhokDFezRm4G850uSfNo5HXFAgeXPRuOWqoK2bVf
95zU25hGOJxI739k5JVC5uP0rkxvvIpw2BXVwvOmayHTV5ms8nkk9V2R55/F
OlXot3fAPKqJLG8zB/MMYr9KyxYZET/lcDOjk9s2f42lPhX/vR5mktcjlyfV
aNpluMVRPwob7bwK9ZE42Xx0+vxjxXzbiCFjRr1NpP4Mts/2LI88XcpvBVrc
6aWU+mRGy+J08T2ec3Onb92ayuvbHrDWu6ii/yvyYwswXhb/t+bLoddN2xTy
3YdDHMLWSP3uijFuHYdxq1jHCOPEKowTDeqowxTnex3Ptz2cr9TXDvVCLZtP
IfoqNMa+CkKvy0NDG7Sp9dubFgdP7e2gpD7AEfh+xBP7CQj9Wjr+0yBrfTW7
drXxqmY9UkieA9F/+ID+g5ArK+361Tr9AbHO7P/0lVV9U/hG/dcJ62qkucDX
tet+af3fzVPM2s/I4ZY5h+8/0pH6Ngu+9pD1bY7s/rI2aMrip1LL3fp+fkr/
N2/98NyHwVl8aEVi8ImJsbRfG+TZSbL+xm/ZIYd69wr4xHnm10tc4ul7rO+5
rntiqOaXK0rdxlxLkNZH+1+A9j+qDjsvvr8Yz6UTnIs0vwbtyTmwJ9Q3bwza
Ey+wJyRvXmhPNoM9IXl2RnuSAPaE5ES8G/LFd0MCh3l47vfg3KlPnTfaE1Ow
J7QvO7Qn0WBPSM4Poj05DPaE9iv4aCjykdivCfLLFuAX2m8f5Jcs4Bfarzvy
y+CZ3/mF9jsW+aUU+IX06wPyS5u87/wizbtBfRmH730EDkHIL37AL4SDEvll
AvAL4TAO+WUc8AvhsAP55TDwC9mNhcgvLsAvZK9EHXWEbA6Lk9p98YAxiazk
s/Exi49Sn3zHXrkVR5cVsO3TjCySa/WO+sUZHVmsaxPHwhu+HGjduoT0xdR4
8YeUNyrWKuavVk5DMujvj0w7F81eF82mno+Zu7qhNIcuN7XilP9TFXvQKmnm
223S3LflE87/PLVcwaIXrnm23kmaTzdi+A8qZ0cFy14V1mjpfWlOionsXlKc
lzHWDzjK5pgU/b4nwyHlLqsJ+eNLoKPU/y1AU5Vf+SWd/dJ1hWfnhVlSX/RJ
HS5nNIhinwdZpelekuYpyPt7CPu5Ni00wC40nT3pfiZ6YQtpPl2QrK8FzWsY
bdi1T3YE0wn4uCJeV5onktP5yLpV6jQWFaXe3uT/6s9Fv32biinW7W+xDuvX
7ulcLc1lCGs+ZIRqbhoL1Il/5tdamhsY1MzEdHH762xhmyd6D85J8xos2eWj
55POsr365W8e+UpzGYK0+4USX2/FeoP5srkeCvMnvy9T/s09mtmNsZsl9bsL
mjvMpX3bf3logcMNlUrqd+fU4tfgmX8+5u295040GCTN4+gQ3+PO8E6RfGjR
iqCMz9KcHf8hXbrdO3GHL0+puV9tLvUhFHW2WOdD51VutWtwl873+RXjvTMs
f5TO64msD4bA39hLd2mv0Bj+MvzyzAxHaQ7jog86tjeLH/MZnrPntB4j4Zx1
MG9wy7RYvq9BlyZuqnzCIQ3rfJpiXSv1h0+y1J2nm8nvN1h/ZIa31LdQsX+2
zR+TC/ip5ybVDVdJc4juuR9hh7sn8+l+nTvu806nfcnrP8W+tuL79D+wH4XY
V2TT0nrFdum83jjb2aX+0jwar0XfjA//mMEvzNx/3flVBn3nDqzjWon1luI7
O5uNitE7X8q/bs5KGDikiP6vvG+D+L9vZPWKYh0frIvbh3WA8nVEXwKxzltc
5wjW6Ql8OOJjCfiQHV4lq4uT5m5rv9+X41PDvuPD5ficB3yoT9dW/P49WNcn
cNupjRt951CUZxOQZ+KjEG15Jn5phHVrTWV9rb9oyzPt64Xsfb3Y10iU5yKQ
Z9qXB8rzdJBn4p0ybXkmHsnTlmepXx/KwzeQB8JhOsq5AuSccLiG9t8S7D/h
MBPtfAzYeeLlLmjn88DOEy9Xy/o/C9xC0Z7/B/accLuMdvsL2G3Cbbm2HSbc
2qAd1gU7TLi9nK1lbwk3F7SrzmBXia/zxoJd/RPsKvH1gfZgV7fI+jArLcB+
rgH7STg/QfsQDPaBcC7Vtqv0+x1oVzuAXSX8eyMvdwBeJvxjkX+fAf8Snu2Q
N52x7k7guR350Qr4kfCcjTw4DN/j01wh5MFE4EHC8ynyWgzwmjTPDvnrJPAX
4bMceWcR1rkJHCaj3/IW/BbCYR/6J3fBP6Hfizl08VhvJn4/Df0cf/Bz6O9r
sE7MCOvEhHx+QD88E9+xinNPQz/cBt+fCrlVyupehDy0ldWZmMjueUVdhzgX
D4wfG0D8SOucxfhxPtZXCNy+acePtH4exst2WOcg1n+O8fI4iJeJd75hvKyC
eJnVES+zOuJl4hd7jJfDIV4mvpO/nxXyGYFx1jGIswj/AoyzBkKcxeVx1ljZ
vNcyjLPGQZxFejob46zzEGfV+S5V/N85GFd6QVxJ69/AuNJONqd1M8aVFhBX
0jq3MM59j+89xe/na8/PIru3AfMhKXivGiK7x+yC95gCf2/Mq/SEvArJ/xLM
L9Uf8D2/RHIu3l3q4rvL/wEMzur9
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
uUNtF43fR+2+1N9xpn7/Vm1fyVrr91Nzv8Px+n1V4u/Luz1FY1aU3+U04ZXC
z2vMn4n1/GE6t0Pu73I6tk64gfD+wvuV66aD+sMlryX8MHYgWGf9obZYrQ57
X2N+z6yv+L5naMxq4Rd0rzWJ19VRulf/3GvpAo1dkFlfnaO+u+SNE9uj83Xu
xlK/nS28TriXxizObB+7Mq/Meq8TnEjnNmS/Cy/MrOuO1L165l7DvSVbktnO
HiH5ObnX3uHCnXKvVZ7rI7XdE/OuXsE6t5/OW57Z7nRR31vjmwi/ot/y1HqY
PXKBxqc6nqSWpdaZbXT9vrlt62k69yTh+uW3nlLa31dTc9PjSp3fW9fZBF6v
cy/ObTcn4kel3hfYvj4as6mO++uaKzLb3L7ql2XWzz3VL8psf89j/Wa2KU/B
5XT+PXBTOLhwF+G7hCfx3oWfgR8K3yv8hPBcODx2WHiG8LXCD6Nv4GfCXws3
1Xxqab63Cb/IN4PzaX51uI7u+wgcBs4HP4/+raLxM6JtQU3hMcKfoFs15mbh
51lDwq8L19b1/xR+V3hn4X+F3xfehXeucycKbyP8s+QvC28t/KPwq8LV2VPC
U4R76l6Fxo8Qfo1vJvkwuDD7RHg0+xK+KDxS+A32tvAo4bd578JfRduIGoV7
bMbLesZvJN9d99qJ7yZ5Q8kfZD3jjws/xPfVmIt0XFVjPo0etyWcK3rcVsKz
hJvrOruik4Rb4CMX5gwdhJfqOtMlvxQuK3kPfds/MnMhuPL01D4U+naexv2S
eWwjHY+V/JNyDtV07kfRNnELbEK0Xdu2cI+dezGxDcQWvoR+1pj9NYddNOaL
6N+2L8xbTpZ8ucZMi7atmxW+Nnb32cQ2Flv7TOLfscHjhD/U+D7wG42fGj1u
k8KyuhpzX2IOcx7fvbRN84kF6LkImizNzJOJeeyf2m+Fjy1Te1Xfa65k+6X2
Wy/Udb/KjYmlxGA+THxghcaH3DGQ+yVvlTrW8afkUfJzdO7k3H4c8ZP7NOYg
3jV8PrevNFPHLVLHUr5V3zJ1PAR/fLmuU9G4byRrXnJLuONRqf33C1gHuf0p
/PGxuv7h+u0GuEOw7z0UO5abW3bjG+T2JXm+I8tnPA+/ILcfNy/1Pbg+MZzR
us7BqWMFDwsfIXy+xn+Q2wfsIvx26a/dCN8Jji/cAo/Izau7a8y3ubklXGut
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
            "]], Polygon3DBox[CompressedData["
1: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
uVo0d9Y+mjpaBnvg/2MpZdw=
            "]], Polygon3DBox[CompressedData["
1:eJwt13n8V1Mex/Fv3/utX3uKEkooKSozI4aKFkVToTIJFaFdC0KJEaHxsO+j
TaSNtNBQ2SqUSKSopEUk+1JRocXz4/z+ePc779d5n3vu7Z57Pud79OVDOg/O
53K5JVSSbimVy32j8WiWy/27kMstLJHLjcS+wh7Gzsdex8bxa/DGBj+GtdJ3
OvYTdoL2HPxt1xvNb8efxLrKLTG2Kf89Xg+bKfeW3EKsDzZd/1lyg/U1wX7A
6mvPyqd7bIb9iB2PzcaWYsP5Dfid2HnGznONethCKi9zC5bRf/mdcpPkLuSX
yjUqyuWe1q7gOg/6+xCdIfOzbAO5541fpm8GvhHbyPegulgd/jUqy9+sf7/8
FH8/xT7GulAtuYP5Z2m3+a7Vv1luojkGBMfaYu1iLqw79jTWGrsUK8uPj3eC
DcTexsbLnYONxZpjrbEnsPMii7XA2mJV+GdoFzYU24DV5V+ncu5tJFaCZhl7
MTZJ7kz+YrkJWL8Yj52NnYXdwG/C79LuiM3XdyT2EmWuNwLboa86P4f26R+G
fYPV4udRQe5G7BfsKH4+lcRuwnZjM1z/QuwpY1thF2AV4/+EfsauwlZjLb23
DfHeje1O3ehw/nnaLzdc7ju5VXw7asrfS7Xk+vNvmOfqLD1bPGNd16uBPeR9
/YHvpZX6CvjwePZYW7mUeYQO43/PUr6qzHbZa7TzsfZpE18Gv1/7AbpEX+mi
xKP9m/u4Dy+JrY3nxHZht2XJl8Jv174jS31d+fXu+32Z1tSGxst1cy/vabcg
3bkfsINlnzHuWRqMtZb5VedJ/Hy597EJct3xFXwrMiTXjt8td4rcq9jHWAfs
N+xU7HVsLbbZ2LIGPBjPT5di58j9Lncav1BuHVZZ5nvZQdo5fGrcE99Pdr3M
mVRNVzW5HfjQiMV3QNP43nJrZU6ng/VNxXrFvsM3pSrYdKwPto5vTodgT8b/
MfYh347KYk/F94St4jtQOWwS1hNbzZ9L5bFj3EsZ7D/an7iP9VSEbZTtge2R
uzfWZHwHVFl7C43SN1vmSuwzmfPoCOxQY3fi12oX5F7Ikq+Oz9X+f5b6nsH6
GvuJcS2pKnZR8Rr/lD+LzqaJcR9yK7XbUhm5WdgAbDN/TnwH2EysP7aJb0+H
5dI+dxn2Ed8xn/a8M/lfzPEP9zEPW5FL76yKuadh07P0/r6Xu1VuUexhco/j
35ZM9SJqxNCoA1EzsAbGnuYaTWKvM7YNdgJ2Et+YPsC2+VsRmxB7F/XBvox9
GBsXexz1xtYae6055pojCtUovHxRykb/Pmws9rHcULkX5AZht2IvYZdik7E+
WC+sobH/iv8DYxvzzVxnOT9I7jm5AXLX4wuwy7ApWF+sD7YMG4jNwPpj12Fz
sR7Fe3Zv7LL4drArsKlYP6wfthq7Jvan2Mdj783SfezCTtZ+JZ/uqZz72xrr
XHsvNibWl9wIuQWx/2H3xF6E7cWaab+BrZcfa9xF+Lt8M2JzY/xzIfYO3yT/
12eYGxd7PLacPyOf6v4F5v0j9kmBxdgimiM3UOcW7U5UQ64jv0/udLk3sU+x
SsZ+G2tfez82Wd+P/CH4DO3naIi+TsbuN/YM/i25Dbm0d1/C79bukaV9fLpc
F7mJnrdXrFW8M3YAa669BNsoPwU7H3tC7or4hvVNwjphE7DL41uPM0s8oHtp
ob0U28QexH8Xz6d9AJui72istOxNse74dVnyo6mi9pos9VXi76Yq/Od0G3aq
Od+mQ1zrCaoX659fRlXju6X6sfb5NvHOte+iGvHN8S3p7/yddDj2XjwrnRjn
Fjos9mlz7oxcrO3ImPfRqKn0MtZT7iPP3VJuB/Y37EW55XJLY046Vub2qBH4
KaUSj/aEONPgC/hv6VBj/xc1JZ9q9DdUDXssn+r14Kh5WKPYq+OdxTku7o2O
dp1RVBlbyZ9N/+TvpppRq9zfGGoYNYF/Jc6fUZ+otsxtsf/g+2Tuw1Z4phH8
LPkuxfOeGHsnNjeeL9YjNTRudOyt+fStrTL+ZrkOhfTd5Y19Vbu++frjA+iq
qKnxfWm30zc7vvfY57AhWTqLxpk0xg3Fvnbtvlm6xpVyS2LfydIZLs5yveNM
iF2JtcGmlUjPsBebiXUvpOe5GlsZaw1rj83BTi6u8R8U7/Wx57+ob4jc1qgp
ssfk0nnwCyrN35lPZ8PJ/NY472L3YNuxGfw2OijOINgerERRumZcp1N8V/Ge
+a7mWBa1h/fnr/Pql1SJvz+fzq5z+a9jjWOPRIhe5r+j6tjjcY6gEq41kspi
72Sprv9ujhuwUvxrWfru6mRp3cT6OS7euzn+8HeEXFGcN4przxFFiUd7IbaI
jsMayc3HavNHxvWL97AmWVoXsT4iUw+vpf+oQspnRelsF+e5HTLD4iyKFWSv
x1byH0atdq2v4vvQfljugPurI3eQ3O1Rr/BtdCxWNfYE7Cf+5zgz8HdQhahN
dGMuZR6gqrE/Zilf39iTsYXax2HHF5I/Hj9Bu0Eh9dUuSvtO7DVfyG3NUt15
AeuZpd8LUYO6YbOxblk6y8eZPn5TfBbvM59qVOSOdL18yXT2WC77HtXE9hXS
Xv1m7NFUC8vkrsNW8O9Tg/g+qELU3qgLxjTiF1NFfhzVLKQflDdTmaidWfH5
OM4MVI5/t/jsU8McewvprLo46hn9EnterNXY67I0/6+xN2Lzoz5n6V1dYs4t
sc7zqcZHrb8oark5umbpN0T8luiJfR7vM5/qedT1jvF7Jng+1YqoGZ35zfF9
5VNNidoyjF8fdcD1znW9l7A9/g7HSka9z1Lt6xq/l6Im8S31PynXnt8T+1+s
e9dbI/cn2yr5IA==
            "]]},
          Annotation[#, "Charting`Private`Tag$2619#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{570, 713, 1840, 571, 726, 1852, 598, 845, 1925, 739, 611, 
        846, 1926, 746, 618, 886, 1948, 753, 625, 1885, 909, 760, 632, 1890, 
        933, 767, 639, 957, 774, 2033, 646, 981, 781, 2038, 653, 1005, 1978, 
        788, 660, 1029, 1989, 795, 667, 1053, 2005, 802, 674, 1898, 809, 686, 
        1908, 821, 699}], 
       Line3DBox[{572, 714, 1841, 573, 727, 1853, 599, 847, 740, 2018, 612, 
        848, 1927, 747, 619, 1883, 887, 754, 626, 1886, 910, 761, 633, 1891, 
        934, 768, 640, 958, 775, 2034, 647, 982, 782, 2039, 654, 1006, 789, 
        2042, 661, 1030, 1990, 796, 668, 1895, 1054, 803, 675, 1899, 810, 687,
         1909, 822, 700}], 
       Line3DBox[{574, 715, 1842, 575, 728, 1854, 600, 849, 850, 1862, 1089, 
        851, 1928, 852, 1097, 2020, 888, 889, 1105, 2022, 911, 912, 1113, 
        2026, 935, 936, 1121, 959, 960, 1864, 1129, 983, 984, 1870, 1137, 
        1007, 1008, 1874, 1145, 1031, 1991, 1032, 1153, 2044, 1055, 1056, 676,
         1900, 811, 688, 1910, 823, 701}], 
       Line3DBox[{576, 716, 1843, 577, 729, 1855, 601, 853, 1929, 854, 1090, 
        855, 1930, 856, 1098, 890, 1949, 891, 1106, 2023, 913, 914, 1114, 
        2027, 937, 938, 1122, 961, 962, 1865, 1130, 985, 986, 1871, 1138, 
        1009, 1979, 1010, 1146, 1033, 1992, 1034, 1154, 1057, 2006, 1058, 677,
         1901, 812, 689, 1911, 824, 702}], 
       Line3DBox[{578, 717, 1844, 579, 730, 1856, 602, 857, 1931, 858, 1091, 
        859, 1932, 860, 1099, 892, 1950, 893, 1107, 915, 1959, 916, 1115, 
        2028, 939, 940, 1123, 963, 964, 1866, 1131, 987, 1971, 988, 1139, 
        1011, 1980, 1012, 1147, 1035, 1993, 1036, 1155, 1059, 2007, 1060, 678,
         813, 1876, 690, 1912, 825, 703}], 
       Line3DBox[{580, 718, 1845, 582, 731, 1857, 603, 861, 1934, 863, 1092, 
        864, 1936, 866, 1100, 894, 1952, 896, 1108, 917, 1961, 919, 1116, 941,
         1966, 943, 1124, 965, 1969, 967, 1132, 989, 1973, 991, 1140, 1013, 
        1982, 1015, 1148, 1037, 1995, 1039, 1156, 1061, 2009, 1063, 679, 814, 
        1877, 691, 826, 1878, 704}], 
       Line3DBox[{584, 720, 1846, 585, 1882, 733, 605, 867, 1937, 742, 614, 
        868, 1938, 749, 621, 897, 1953, 756, 628, 920, 1962, 763, 635, 1892, 
        944, 770, 642, 968, 777, 2035, 649, 992, 1974, 784, 656, 1016, 1983, 
        791, 663, 1040, 1996, 798, 670, 1064, 2010, 805, 681, 1903, 816, 693, 
        1914, 828, 706}], 
       Line3DBox[{586, 721, 1847, 587, 734, 1858, 606, 869, 1939, 743, 615, 
        870, 1940, 750, 622, 898, 1954, 757, 629, 1887, 921, 764, 636, 1893, 
        945, 771, 643, 969, 778, 2036, 650, 993, 785, 2040, 657, 1017, 1984, 
        792, 664, 1041, 1997, 799, 671, 1065, 2011, 806, 682, 1904, 817, 694, 
        1915, 829, 707}], 
       Line3DBox[{588, 722, 1848, 589, 735, 1859, 607, 871, 744, 2019, 616, 
        872, 1941, 751, 623, 1884, 899, 758, 630, 1888, 922, 765, 637, 1894, 
        946, 772, 644, 970, 779, 2037, 651, 994, 786, 2041, 658, 1018, 793, 
        2043, 665, 1042, 1998, 800, 672, 1896, 1066, 807, 683, 1905, 818, 695,
         1916, 830, 708}], 
       Line3DBox[{590, 723, 1849, 591, 736, 1860, 608, 873, 874, 1863, 1093, 
        875, 1942, 876, 1101, 2021, 900, 901, 1109, 2024, 923, 924, 1117, 
        2029, 947, 948, 1125, 971, 972, 1867, 1133, 995, 996, 1872, 1141, 
        1019, 1020, 1875, 1149, 1043, 1999, 1044, 1157, 2045, 1067, 1068, 684,
         1906, 819, 696, 1917, 831, 709}], 
       Line3DBox[{592, 724, 1850, 593, 737, 1861, 609, 877, 1943, 878, 1094, 
        879, 1944, 880, 1102, 902, 1955, 903, 1110, 2025, 925, 926, 1118, 
        2030, 949, 950, 1126, 973, 974, 1868, 1134, 997, 998, 1873, 1142, 
        1021, 1985, 1022, 1150, 1045, 2000, 1046, 1158, 1069, 2012, 1070, 
        1161, 2046, 1075, 1076, 697, 1918, 832, 710}], 
       Line3DBox[{594, 1169, 1170, 1851, 595, 835, 1919, 836, 1087, 837, 1920,
         838, 1095, 881, 1945, 882, 1103, 904, 1956, 905, 1111, 928, 1963, 
        929, 1119, 2031, 952, 953, 1127, 976, 977, 1869, 1135, 1000, 1976, 
        1001, 1143, 1024, 1987, 1025, 1151, 1048, 2002, 1049, 1159, 1071, 
        2013, 1072, 1162, 1077, 2015, 1078, 1164, 2047, 1081, 1082, 711}], 
       Line3DBox[{596, 1172, 1173, 1171, 2048, 834, 1174, 839, 1921, 840, 
        1088, 841, 1922, 842, 1096, 883, 1946, 884, 1104, 906, 1957, 927, 907,
         1112, 930, 1964, 951, 931, 1120, 954, 1967, 975, 955, 1128, 978, 999,
         1975, 979, 1136, 1002, 1023, 1986, 1003, 1144, 1026, 1047, 2001, 
        1027, 1152, 1050, 2003, 1051, 1160, 1073, 2014, 1074, 1163, 1079, 
        2016, 1080, 1165, 1083, 2017, 1166, 1168, 1167, 1085}], 
       Line3DBox[{698, 820, 1084, 1907, 685, 808, 1897, 673, 801, 2004, 1052, 
        666, 794, 1988, 1028, 659, 787, 1977, 1004, 652, 780, 1970, 980, 645, 
        2032, 773, 956, 638, 766, 932, 1889, 631, 759, 1958, 908, 624, 752, 
        1947, 885, 617, 745, 1924, 844, 610, 738, 1923, 843, 597, 725, 1880, 
        569, 1839, 712, 833, 1086}], 
       Line3DBox[{705, 827, 1913, 692, 815, 1902, 680, 804, 2008, 1062, 669, 
        797, 1994, 1038, 662, 790, 1981, 1014, 655, 783, 1972, 990, 648, 776, 
        1968, 966, 641, 769, 1965, 942, 634, 762, 1960, 918, 627, 755, 1951, 
        895, 620, 748, 1935, 865, 613, 741, 1933, 862, 604, 732, 1881, 583, 
        719, 1879, 581}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1176, 1434, 1839, 1367, 1175, 1840, 1368, 1177, 1841, 1369, 
        1178, 1842, 1370, 1179, 1843, 1371, 1180, 1844, 1372, 1181, 1845, 
        1754, 1879, 1182, 1846, 1373, 1183, 1847, 1374, 1184, 1848, 1375, 
        1185, 1849, 1376, 1186, 1850, 1377, 1187, 1838, 1851, 1378, 1749, 
        2048, 1435, 1750, 1751, 1753, 1379, 1752}], 
       Line3DBox[{1189, 1755, 1880, 1188, 1852, 1380, 1190, 1853, 1381, 1191, 
        1854, 1382, 1192, 1855, 1383, 1193, 1856, 1384, 1194, 1857, 1756, 
        1881, 1195, 1757, 1882, 1196, 1858, 1385, 1197, 1859, 1386, 1198, 
        1860, 1387, 1199, 1861, 1388, 1200, 1919, 1436, 1613, 1389, 1201, 
        1921, 1438, 1615, 1390, 1614}], 
       Line3DBox[{1203, 1440, 1616, 1758, 1923, 1202, 1443, 1618, 1759, 1925, 
        1204, 1446, 1620, 2018, 1391, 1205, 1793, 1862, 1622, 1392, 1206, 
        1929, 1451, 1624, 1393, 1207, 1931, 1454, 1626, 1394, 1208, 1934, 
        1457, 1628, 1760, 1933, 1209, 1460, 1630, 1761, 1937, 1210, 1463, 
        1632, 1762, 1939, 1211, 1466, 1634, 2019, 1395, 1212, 1794, 1863, 
        1636, 1396, 1213, 1943, 1471, 1638, 1397, 1214, 1920, 1437, 1640, 
        1398, 1215, 1922, 1439, 1642, 1399, 1476}], 
       Line3DBox[{1229, 1478, 1643, 1477, 1946, 1228, 1475, 1641, 1474, 1945, 
        1227, 1473, 1639, 1472, 1944, 1226, 1470, 1637, 1469, 1942, 1225, 
        1941, 1468, 1635, 1467, 1224, 1940, 1465, 1633, 1464, 1223, 1938, 
        1462, 1631, 1461, 1222, 1935, 1459, 1629, 1458, 1936, 1221, 1456, 
        1627, 1455, 1932, 1220, 1453, 1625, 1452, 1930, 1219, 1450, 1623, 
        1449, 1928, 1218, 1927, 1448, 1621, 1447, 1217, 1926, 1445, 1619, 
        1444, 1216, 1924, 1442, 1617, 1441, 1481}], 
       Line3DBox[{1243, 1503, 1657, 1502, 1957, 1242, 1501, 1656, 1500, 1956, 
        1241, 1499, 1655, 1498, 1955, 1240, 1497, 1654, 2021, 1798, 1239, 
        1797, 1884, 1653, 1496, 1238, 1954, 1495, 1652, 1494, 1237, 1953, 
        1493, 1651, 1492, 1236, 1951, 1491, 1650, 1490, 1952, 1235, 1489, 
        1649, 1488, 1950, 1234, 1487, 1648, 1486, 1949, 1233, 1485, 1647, 
        2020, 1796, 1232, 1795, 1883, 1646, 1484, 1231, 1948, 1483, 1645, 
        1482, 1230, 1947, 1480, 1644, 1479, 1506}], 
       Line3DBox[{1257, 1524, 1671, 1523, 1964, 1256, 1522, 1670, 1521, 1963, 
        1255, 1520, 1669, 2025, 1806, 1254, 1519, 1668, 2024, 1805, 1253, 
        1804, 1888, 1667, 1518, 1252, 1803, 1887, 1666, 1517, 1251, 1962, 
        1516, 1665, 1515, 1250, 1960, 1514, 1664, 1513, 1961, 1249, 1512, 
        1663, 1511, 1959, 1248, 1510, 1662, 2023, 1802, 1247, 1509, 1661, 
        2022, 1801, 1246, 1800, 1886, 1660, 1508, 1245, 1799, 1885, 1659, 
        1507, 1244, 1958, 1505, 1658, 1504, 1526}], 
       Line3DBox[{106, 469, 638, 107, 470, 639, 108, 471, 640, 109, 1121, 472,
         110, 1122, 473, 111, 1123, 474, 112, 1124, 475, 641, 113, 476, 642, 
        114, 477, 643, 115, 478, 644, 116, 1125, 479, 117, 1126, 480, 118, 
        1127, 481, 119, 1128, 482, 120}], 
       Line3DBox[{1271, 1541, 1685, 1540, 1967, 1270, 1539, 1684, 2031, 1818, 
        1269, 1538, 1683, 2030, 1817, 1268, 1537, 1682, 2029, 1816, 1267, 
        1815, 1894, 1681, 1536, 1266, 1814, 1893, 1680, 1535, 1265, 1813, 
        1892, 1679, 1534, 1264, 1965, 1533, 1678, 1532, 1966, 1263, 1531, 
        1677, 2028, 1812, 1262, 1530, 1676, 2027, 1811, 1261, 1529, 1675, 
        2026, 1810, 1260, 1809, 1891, 1674, 1528, 1259, 1808, 1890, 1673, 
        1527, 1258, 1807, 1889, 1672, 1525, 1543}], 
       Line3DBox[{1273, 1542, 1686, 2032, 1400, 1272, 1544, 1687, 2033, 1401, 
        1274, 1545, 1688, 2034, 1402, 1275, 1819, 1864, 1689, 1403, 1276, 
        1820, 1865, 1690, 1404, 1277, 1821, 1866, 1691, 1405, 1278, 1969, 
        1546, 1692, 1763, 1968, 1279, 1547, 1693, 2035, 1406, 1280, 1548, 
        1694, 2036, 1407, 1281, 1549, 1695, 2037, 1408, 1282, 1822, 1867, 
        1696, 1409, 1283, 1823, 1868, 1697, 1410, 1284, 1824, 1869, 1698, 
        1411, 1559, 1975, 1550, 1699, 1412, 1561}], 
       Line3DBox[{1286, 1551, 1700, 1764, 1970, 1285, 1552, 1701, 2038, 1413, 
        1287, 1553, 1702, 2039, 1414, 1288, 1825, 1870, 1703, 1415, 1289, 
        1826, 1871, 1704, 1416, 1290, 1971, 1554, 1705, 1417, 1291, 1973, 
        1555, 1706, 1765, 1972, 1292, 1556, 1707, 1766, 1974, 1293, 1557, 
        1708, 2040, 1418, 1294, 1558, 1709, 2041, 1419, 1295, 1827, 1872, 
        1710, 1420, 1296, 1828, 1873, 1711, 1421, 1297, 1976, 1560, 1712, 
        1422, 1573, 1986, 1562, 1713, 1423, 1575}], 
       Line3DBox[{1299, 1563, 1714, 1767, 1977, 1298, 1564, 1715, 1768, 1978, 
        1300, 1565, 1716, 2042, 1424, 1301, 1829, 1874, 1717, 1425, 1302, 
        1979, 1566, 1718, 1426, 1303, 1980, 1567, 1719, 1427, 1304, 1982, 
        1568, 1720, 1769, 1981, 1305, 1569, 1721, 1770, 1983, 1306, 1570, 
        1722, 1771, 1984, 1307, 1571, 1723, 2043, 1428, 1308, 1830, 1875, 
        1724, 1429, 1309, 1985, 1572, 1725, 1430, 1310, 1987, 1574, 1726, 
        1431, 1577, 2001, 1576, 1727, 1432, 1578}], 
       Line3DBox[{381, 363, 1988, 1311, 365, 1989, 1312, 366, 1990, 1313, 
        1991, 367, 1314, 1992, 368, 1315, 1993, 369, 1316, 1995, 370, 1994, 
        1317, 371, 1996, 1318, 372, 1997, 1319, 373, 1998, 1320, 1999, 374, 
        1321, 2000, 375, 1322, 2002, 377, 1323, 2003, 379, 394}], 
       Line3DBox[{1337, 1602, 1741, 1601, 2014, 1336, 1600, 1740, 1599, 2013, 
        1335, 1598, 1739, 1597, 2012, 1334, 1596, 1738, 2045, 1834, 1333, 
        1833, 1896, 1737, 1595, 1332, 2011, 1594, 1736, 1593, 1331, 2010, 
        1592, 1735, 1591, 1330, 2008, 1590, 1734, 1589, 2009, 1329, 1588, 
        1733, 1587, 2007, 1328, 1586, 1732, 1585, 2006, 1327, 1584, 1731, 
        2044, 1832, 1326, 1831, 1895, 1730, 1583, 1325, 2005, 1582, 1729, 
        1581, 1324, 2004, 1580, 1728, 1579, 1603}], 
       Line3DBox[{1339, 1772, 1897, 1338, 1773, 1898, 1340, 1774, 1899, 1341, 
        1775, 1900, 1342, 1776, 1901, 1343, 1876, 1433, 1344, 1877, 1777, 
        1902, 1345, 1778, 1903, 1346, 1779, 1904, 1347, 1780, 1905, 1348, 
        1781, 1906, 1349, 1835, 2046, 1742, 1604, 1350, 2015, 1605, 1743, 
        1606, 1351, 2016, 1607, 1744, 1608, 1352}], 
       Line3DBox[{1366, 1747, 1748, 1746, 1610, 2017, 1365, 1609, 1745, 2047, 
        1836, 1364, 1918, 1792, 1363, 1917, 1791, 1362, 1916, 1790, 1361, 
        1915, 1789, 1360, 1914, 1788, 1359, 1913, 1787, 1878, 1358, 1912, 
        1786, 1357, 1911, 1785, 1356, 1910, 1784, 1355, 1909, 1783, 1354, 
        1908, 1782, 1353, 1837, 1907, 1611, 1612}]}}},
    VertexNormals->CompressedData["
1:eJx0m3k0ld3//qVBhFIKRWmSoVDGxHmXRkmGKFGKklAomgyFjMmsgciUSMiQ
KcPOrMiceTpmB+coQob67f1o/f74rvV5/mmtve6l7Pe1r+t17ee+txpZahkz
M+H/VjIxLcV/rDG4H3QgmDV/C9vs379/GWjbvhHaX/fe/Om604p39Ffln+xY
XOd9eMFxx9ae/GULSz+56IkqySfP/bf+7PFthYDQ7nxxZGolJL9byf3C/H/r
XkrTtjtcO/NTztV9zmkWobQvW/hvPc2xkv43vC1/1i9kV1r72vyXpxbXrwwO
xt9Ubc1HI66TXs37lB7WLa4rPpI9HBDalF8fQLlmwy6jxH3oz3/rCv74z+3f
8z/k1Ahk6W2kJCctrncrHKRmXKzL1/+hlKB0STxf69fi+qkibp0A7Zr80sbB
X6y5B5V45f7+tz6ZM5Ox43xl/gXrg69FNhxR2u6wuP6y0KJwB7U0/8InQ/Nk
dxUl75TF9YY/Zu/aMgryz1z2qPUr1FR60LS4/nnvkoW2u9n5IMCW/ML0olL+
+OK6YR6b5pKDH/KNNLgttTaagfaDaf7wUz2ornmp6OmDNJSUqHDrRcpNSKEn
aQ9Z9CAbTk07ZWG8fmTTfmm2WxAksOd59LMetFzyzLtSdhrqEoiJqCywBr0l
fXU5BT2oNNaKn2tsGAV3etsuFb8HhyOlmQwne5BfT9r8+vJhJHV6YU4h0A4q
FqoDtkn0orwPwxJmocPITsD2TXmCI7zrF5LitelFSw6dr+G+PowexshcowW4
QOVo7r4tpb0osLO/+bDwMDIu4GD9suwJBHfRXyqK9KFtV5+GfW0eQjylV1I9
f/vBNd2MsgPRfSjm/tcpeeshZKzCEzG39gVYpd26ma7Yjyqtf9vyjw2iXis+
ffQsAnK9B+I/Mw+gZfL3Vl+SHkTiH3ZfF2l/BxzJniKXWAdRGU07rF1oAH3a
+HrQ/WcG7A1aJ7TdfAj59NrHGNj1IcHHsrybqF+gIys22ZuThjpbNN84mlJR
McVORff1bVg1YdRkO0VF72iFc/Z2NFS4z0GeAndgn6rsyI05Kipwj3jNd5+G
vAc3TVk9uA+KDLfW5Ut60NW8AYGDNjRklrJio84jexhJiIy5ztKDvOlWRxot
aaix3ZhjtNIRbAXkswo5e9D7sIKj2WY0tJaxfSN1owssc01fqcHTg7xKHuVm
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
vRFLG6rTUGRtZmP81TfYyPopue2kF/xpdTTS+9mK9iY3CinNZ/zVH4gy+iLM
xnkfznfVTJylt6IomRAutoV/9wfaPwUem0sNgFsL0p/TmzH/OPMta8siBlrx
F70fnNMn+G1NKOhrza5cVdqKnG49OP6Zl4F4/6L32UXMPrkHPYYJa7pp/KtW
5LhZTLpx2d91vSfrlV/mhfGQ+4btvnYA/vrglpt/sI6+/xf9HnThoIv6xHPY
s2dN0cjFVsS5q85ochXjr/pdoTuiduL3W1i15G1n8KZWdPaX47f9+PsP/kWP
/44sblS7XgzWvJ9Fyt+2oJgFj3wefRtBr/6ix71vCD1IR3Uw8fOX+eGTzWjb
uUNbFPuH0UdKdztTuvsSpbvfOZ//k+/jCbLCX17tw/r6VfzqWDusrxXZfPg1
wryBM87XJ2xDDSBv+9RKopfD/envjO/DmaZWhrxKDVSOl/hFVTHRjtrj3yT4
A2CXZlLCl/M1UBs/NFCA9XLKcXmxvRuCIbkIIqXv1UDVCuEpFqyXzRNEKm9K
P4LCCdqg+9saEDgbFiBYwESakZJWO5MiobHi4S2lgRrYxn+qLTyDiRy86y8g
8XhAprLFJqK1cDBT5nThcyb6cfIi69msJDjrrW3vdaUWhi1ur98WyUQelr6+
feJp4HjvyInx4lrw/yz6fKE3E/WeuBW8UCETeqW0GR1b6qDfp3eHgikT1Z8x
HxLnLQa9XyH0JUl1cCpNxFJwLRPd6vJ6/NGsCtT43hW7cNSDglFOt+lpBmrL
MnM56d4J6i984p5N1YIZZ3nI5LYhZL+6ub529i682m75/uEZGowt31jF/oqO
jt41WvgszRceeu+sbLhAgxQdOtd4Ih2t4N/7mj8hAMwEanNXWNFA+s7BnuFo
Osr6FjVj5hUMA8dXgK8jDVZf72x4HUpHdxmNVwX3PgJtht4tyzs0OOj5Qnfa
h44YTk68a4QiIbqZZTlrMA3c/ij26LjQ0YNq4xx0Kg4Yq55JPIynwdNDjnIC
VnRUFntiUvX7Uyh6rHrN8S0NjjgrbVQ4TUeXb5gomca9BDnhKNuPH2nAmVnu
8kOFji78fryMz/YNrI7nH6/vwLzx9WGl5PV0VBuad9C7Oxd0B/Kne37QoP4w
/9m50QFUtO2T3G7fEmCfVZaIHafBkgfnWnyDB9CFr2FWcW618CBtgp3jIQ3a
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

     "]], {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{317.8888888217828, 461.1111111111111},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}, {
    Automatic, Automatic}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8680458393049855`, 1.0382906744240719`, 1.4650138357876914`},
  ViewVertical->{0.19912826101392841`, 0.28556910284998566`, 
   0.9374423839164854}]], "Output",
 CellChangeTimes->{{3.923478910907104*^9, 3.9234789263703346`*^9}, {
  3.923478981913107*^9, 3.923478997444433*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"a6ca924a-4bc1-453c-bbdc-e9ffd7235709"]
}, Open  ]],

Cell[TextData[{
 "Se puede observar que la ",
 StyleBox["funci\[OAcute]n de curva es sim\[EAcute]trica en el eje horizontal",
  FontWeight->"Bold"],
 ": tanto para \[Theta] como para -\[Theta], la parte real es igual debido a \
que la funci\[OAcute]n Cos[] es par, es decir Cos[\[Theta]]=Cos[-\[Theta]], y \
la parte imaginaria es la misma en m\[OAcute]dulo pero con signo opuesto, \
debido a que Sin[] es impar, esto es Sin[-\[Theta]]=-Sin[\[Theta]]"
}], "Text",
 CellChangeTimes->{{3.923995382149166*^9, 3.923995472625916*^9}, {
  3.9240072190763454`*^9, 
  3.924007220268979*^9}},ExpressionUUID->"3643f623-844e-4b96-8a83-\
cc220daef750"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"curva", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"ExpToTrig", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", "z"}]],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"curva", "[", "\[Theta]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"curva", "[", 
  RowBox[{"-", "\[Theta]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.923995221751657*^9, 3.923995232288355*^9}, {
  3.9239952741890287`*^9, 3.923995363818096*^9}, {3.923995481913931*^9, 
  3.923995500725109*^9}, {3.923995649726794*^9, 3.923995702338718*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"89885c6c-214c-45b0-93be-6aa814d2282c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{"3", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
   RowBox[{"2", " ", "z", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
   RowBox[{"4", " ", "\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{"3", " ", "\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "z", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
  RowBox[{"2", " ", "z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.923995233132729*^9, {3.923995321060038*^9, 3.92399536434818*^9}, 
   3.923995501397468*^9, {3.923995654434084*^9, 3.923995671472865*^9}, 
   3.9239957111244082`*^9, 3.924018720215946*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"026b398a-c9f1-45b4-a2da-ba22eeeb9420"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{"3", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
   RowBox[{"2", " ", "z", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
   RowBox[{"4", " ", "\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"3", " ", "\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "z", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
  RowBox[{"2", " ", "z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.923995233132729*^9, {3.923995321060038*^9, 3.92399536434818*^9}, 
   3.923995501397468*^9, {3.923995654434084*^9, 3.923995671472865*^9}, 
   3.9239957111244082`*^9, 3.924018720221041*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a8378301-eb33-4307-9ab4-4c3075ed5b52"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.924071636501023*^9},ExpressionUUID->"3b17caec-591f-4bb0-9422-\
14b3400b75d9"],

Cell[TextData[{
 "Veamos la regi\[OAcute]n de estabilidad cuando ",
 StyleBox["z->-\[Infinity]",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.923474894116947*^9, 3.923474940575955*^9}, 
   3.923476628902679*^9},ExpressionUUID->"c690e8c0-52d7-4da7-b3c7-\
8577e4025991"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"ReIm", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", "z"}]],
     "]"}], ",", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", "Infinity"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92347482661767*^9, 3.92347485471457*^9}, 
   3.923476576715875*^9},ExpressionUUID->"1b182a61-5935-45c2-bc81-\
ca07d242591f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"Im", "[", "\[Theta]", "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"Re", "[", "\[Theta]", "]"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"Im", "[", "\[Theta]", "]"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"Re", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
    RowBox[{"4", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"Im", "[", "\[Theta]", "]"}]}]], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"Im", "[", "\[Theta]", "]"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"Re", "[", "\[Theta]", "]"}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.923474856786902*^9, 
  3.923476578072773*^9},ExpressionUUID->"c7893269-ba0c-429c-ab01-\
35b6519e6a83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"Im", "[", "\[Theta]", "]"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Re", "[", "\[Theta]", "]"}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"Im", "[", "\[Theta]", "]"}]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
      RowBox[{"4", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"Im", "[", "\[Theta]", "]"}]}]], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"Im", "[", "\[Theta]", "]"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"Re", "[", "\[Theta]", "]"}], "]"}]}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.923474862989956*^9, 3.923474877308483*^9}, 
   3.923476588557661*^9},ExpressionUUID->"3d0ae11e-9628-4b5c-8eed-\
4359af88a35a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4199#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.3333332727367562, 1.}, {-0.4060678984601787, 
   0.4060678834673045}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.923474877573535*^9, 
  3.923476588944438*^9},ExpressionUUID->"ccb2a3d0-7f8e-4ec7-b59c-\
c4592c0c03b0"]
}, Open  ]],

Cell["\<\
En este sentido la regi\[OAcute]n de estabilidad del BDF2 respecto a \[Mu] es \
todo el plano interior a la figura anterior\
\>", "Text",
 CellChangeTimes->{{3.923476243056321*^9, 3.923476273716902*^9}, {
  3.924071655269331*^9, 
  3.924071656416159*^9}},ExpressionUUID->"3d410aa2-1e0e-4568-824c-\
ec51dc516e68"],

Cell["El punto exacto a la izquierda de esta gr\[AAcute]fica es:", "Text",
 CellChangeTimes->{{3.923475083998714*^9, 
  3.923475094788344*^9}},ExpressionUUID->"3e397f46-0951-48d3-b258-\
80591681d3a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"Im", "[", "\[Theta]", "]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Re", "[", "\[Theta]", "]"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Im", "[", "\[Theta]", "]"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Re", "[", "\[Theta]", "]"}]}], "]"}]}]}], ")"}]}], 
       RowBox[{"4", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"Im", "[", "\[Theta]", "]"}]}]], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"Im", "[", "\[Theta]", "]"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Re", "[", "\[Theta]", "]"}], "]"}]}]}]], "\[Equal]", "x"}],
      ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "\[Equal]", "0"}]}], 
    "}"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9234749936984773`*^9, 3.923475031983754*^9}, {
  3.923475063875193*^9, 3.923475064724509*^9}, {3.9234765963190126`*^9, 
  3.92347662037383*^9}},ExpressionUUID->"2ecae28d-98f1-4878-a0d9-\
a2ddfbcbf93f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.923475032835671*^9, 3.923475065610534*^9, {3.923476597246622*^9, 
   3.923476621077693*^9}},ExpressionUUID->"7f5f82bc-e065-4d0c-a395-\
fa433c3bb773"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.924071669769974*^9},ExpressionUUID->"10df29ea-fb0b-408e-b0ae-\
2a0631079f13"],

Cell[TextData[{
 "Calculemos ahora las",
 StyleBox[" ra\[IAcute]ces de la ecuaci\[OAcute]n caracter\[IAcute]stica ",
  FontWeight->"Bold"],
 "para comprobar si la regi\[OAcute]n de estabilidad es fuera o dentro de lo \
representado"
}], "Text",
 CellChangeTimes->{{3.922854720372491*^9, 3.922854733837987*^9}, {
  3.924097520899094*^9, 
  3.924097548892924*^9}},ExpressionUUID->"4c0d2227-94da-48fd-9bb5-\
0bf33a45f3b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{"\[Xi]", ",", "z", ",", "\[Mu]"}], "]"}], "\[Equal]", "0"}], ",",
    "\[Xi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.92285473540706*^9, 3.9228547638762074`*^9}, {
  3.922856560345117*^9, 
  3.92285657085919*^9}},ExpressionUUID->"97664952-e3b7-4717-93d3-\
8a9a0a17c9a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Xi]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "z", " ", "\[Mu]"}], "-", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "z"}], "-", 
         RowBox[{"2", " ", "z", " ", "\[Mu]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "z"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "z", " ", "\[Mu]"}], "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "z"}], "-", 
         RowBox[{"2", " ", "z", " ", "\[Mu]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "z"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.922854770720361*^9, 3.92285489375189*^9, {3.922856562050803*^9, 
   3.922856573970628*^9}, 
   3.923725509846622*^9},ExpressionUUID->"72f15535-7ee6-4747-b036-\
de6d6d1cd79a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "z", " ", "\[Mu]"}], "-", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "z"}], "-", 
         RowBox[{"2", " ", "z", " ", "\[Mu]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "z"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "z", " ", "\[Mu]"}], "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "z"}], "-", 
         RowBox[{"2", " ", "z", " ", "\[Mu]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "z"}]}]]}], "}"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"z", "->", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", "1.5"}]}]}], "}"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Aqu\[IAcute]", " ", "estamos", " ", "poniendo", " ", "por", " ", 
      "ejemplo", " ", "el", " ", "z"}], "=", 
     RowBox[{"-", "2"}]}], ",", " ", 
    RowBox[{"es", " ", "decir"}], ",", " ", 
    RowBox[{
     RowBox[{
     "la", " ", "segunda", " ", "regi\[OAcute]n", " ", "m\[AAcute]s", " ", 
      "exterior", " ", "de", " ", "la", " ", "primera", " ", 
      "gr\[AAcute]fica", " ", "y", " ", "tomando", " ", "\[Mu]"}], "=", 
     RowBox[{
      RowBox[{"-", "1.5"}], " ", 
      RowBox[{"(", 
       RowBox[{"fuera", " ", "de", " ", "la", " ", "regi\[OAcute]n"}], ")"}], 
      " ", "estamos", " ", "comprobando", " ", "si", " ", "las", " ", 
      "raices", " ", "verifican", " ", "ser", " ", "en", " ", 
      "m\[OAcute]dulo", " ", "menores", " ", "que", " ", "1"}]}], ",", " ", 
    RowBox[{
    "al", " ", "no", " ", "ser", " ", "as\[IAcute]", " ", "indica", " ", 
     "que", " ", "la", " ", "regi\[OAcute]n", " ", "de", " ", "estabilidad", 
     " ", "es", " ", "el", " ", "interior"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.923725550971068*^9, 3.923725623304084*^9}, {
  3.9239114745302744`*^9, 3.923911548780934*^9}, {3.923995013894121*^9, 
  3.923995041733523*^9}},ExpressionUUID->"7755f618-d253-437e-8aa4-\
90adcdd636e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.44877548979183574`", ",", "1.5916326326489785`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.923725595481657*^9, 
  3.923725624145096*^9}},ExpressionUUID->"a3316b8f-2d78-41a9-ba17-\
d6df1fc976d5"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.923912053165222*^9},ExpressionUUID->"53bb7985-a628-4abd-b010-\
f4747c04da44"],

Cell[TextData[{
 "Vamos a comprobar ahora d\[OAcute]nde se encuentra ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FormBox[
     SubscriptBox["\[Sigma]", "z"],
     TraditionalForm],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "c91b10ab-a7be-4d9e-b962-fd15fa328830"],
 ", es decir, ",
 StyleBox["punto de la curva con menor distancia al centro del plano",
  FontWeight->"Bold"],
 ". Primero representamos la curva como funci\[OAcute]n que depende de senos \
y cosenos:"
}], "Text",
 CellChangeTimes->{
  3.9236250151352434`*^9, {3.923911558949133*^9, 3.923911688414096*^9}, {
   3.923912521893677*^9, 3.923912541639035*^9}, {3.9239956169934235`*^9, 
   3.923995620041622*^9}, {3.924021659030488*^9, 3.924021674822789*^9}, {
   3.924071681093287*^9, 
   3.924071702243567*^9}},ExpressionUUID->"85152e7b-3c65-496b-ae81-\
ac011a242252"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", "z"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", "z"}]], 
  "]"}]], "Input",
 CellChangeTimes->{{3.925202682677953*^9, 3.925202700226813*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"655f8536-6ade-4def-a1e4-02106e1b8d0f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{"2", " ", "z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      RowBox[{"2", " ", "z", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.925202701733339*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"1a861f35-d6ee-44ae-adf0-cb81a68bc515"]
}, Open  ]],

Cell["\<\
La funci\[OAcute]n distancia al cuadrado (lo ponemos al cuadrado para evitar \
ra\[IAcute]ces cuadradas y luego al tomar el valor de la funci\[OAcute]n \
pondremos la ra\[IAcute]z cuadrada) es:\
\>", "Text",
 CellChangeTimes->{{3.9252027981632357`*^9, 3.925202824707182*^9}, {
  3.925207967982083*^9, 
  3.925207986080352*^9}},ExpressionUUID->"8aa1bf3e-f292-4a4a-8e23-\
6dddec3602a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{"2", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], 
     ")"}], "^", "2"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{"2", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], 
     ")"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925202726751766*^9, 3.9252027658935165`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"27746453-b96a-4013-b5f6-1ef77960d54b"],

Cell[BoxData[
 FractionBox[
  RowBox[{"13", "-", 
   RowBox[{"6", " ", "z"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "z"}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", "z"}]}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["z", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"5", "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.925202766674868*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"22dfc355-3557-4f7d-9ae0-4975d184b231"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FuncDistCuad", "[", 
    RowBox[{"z_", ",", "\[Theta]_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"13", "-", 
     RowBox[{"6", " ", "z"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "z"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"2", " ", "z"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"5", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.925202831879924*^9, 3.925202854549255*^9}, {
  3.925202966924283*^9, 3.925202969779021*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e658eec3-27a4-4f2f-bdd7-f7b1846ccb5e"],

Cell["\<\
Para calcular los puntos con distancia m\[IAcute]nima, es decir, los m\
\[IAcute]nimos de la funci\[OAcute]n, tenemos en cuenta que ser\[AAcute]n \
ceros de la derivada de esta \[UAcute]ltima funci\[OAcute]n:\
\>", "Text",
 CellChangeTimes->{{3.925202899417824*^9, 
  3.9252029411352997`*^9}},ExpressionUUID->"f0a07063-903b-4efb-9532-\
f4ea9c1aecad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FuncDistCuad", "[", 
     RowBox[{"z", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.925202946315068*^9, 3.925203006872798*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"21f2d493-afdd-414b-928f-bc7e02c087da"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "13"}], "+", 
      RowBox[{"8", " ", "z"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["z", "2"]}], "-", 
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "z"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "z"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"5", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.925202979430972*^9, 3.925203007418336*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"c8603b0f-ae49-43c3-9bab-48fac983253a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "<", "0"}], "&&", 
    RowBox[{
    "0", "\[LessEqual]", " ", "\[Theta]", "\[LessEqual]", " ", "Pi"}]}], ",", 
   " ", 
   RowBox[{"Reduce", "[", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "13"}], "+", 
           RowBox[{"8", " ", "z"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"]}], "-", 
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "z"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "z"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"5", "-", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]}], 
      "\[Equal]", "0"}], ",", " ", "\[Theta]"}], "]"}]}], " ", "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"1e05af13-96c1-4c56-8743-9a859ad3fbad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[Equal]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "-", 
            RowBox[{"9", " ", 
             SqrtBox["2"]}]}], ")"}]}]}], "&&", 
        RowBox[{"\[Theta]", "\[Equal]", 
         RowBox[{"\[Pi]", "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"},
            "C"]}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[Equal]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "+", 
            RowBox[{"9", " ", 
             SqrtBox["2"]}]}], ")"}]}]}], "&&", 
        RowBox[{"\[Theta]", "\[Equal]", 
         RowBox[{"\[Pi]", "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"},
            "C"]}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "\[NotEqual]", "0"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            TemplateBox[{"1"},
             "C"]}]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             TemplateBox[{"1"},
              "C"]}]}]}]}], ")"}]}], ")"}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"z", "\[Equal]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "10"}], "-", 
        RowBox[{"9", " ", 
         SqrtBox["2"]}]}], ")"}]}]}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]", "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"ArcTanh", "[", 
          FractionBox[
           SqrtBox["5"], "3"], "]"}]}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"},
          "C"]}]}]}], "||", 
      RowBox[{"\[Theta]", "\[Equal]", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"ArcTanh", "[", 
          FractionBox[
           SqrtBox["5"], "3"], "]"}]}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"},
          "C"]}]}]}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"z", "\[Equal]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "10"}], "+", 
        RowBox[{"9", " ", 
         SqrtBox["2"]}]}], ")"}]}]}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]", "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"ArcTanh", "[", 
          FractionBox[
           SqrtBox["5"], "3"], "]"}]}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"},
          "C"]}]}]}], "||", 
      RowBox[{"\[Theta]", "\[Equal]", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"ArcTanh", "[", 
          FractionBox[
           SqrtBox["5"], "3"], "]"}]}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"},
          "C"]}]}]}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "31"}], "+", 
      RowBox[{"20", " ", "z"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["z", "2"]}]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"135", "-", 
            RowBox[{"36", " ", "z"}], "-", 
            RowBox[{"468", " ", 
             SuperscriptBox["z", "2"]}], "+", 
            RowBox[{"288", " ", 
             SuperscriptBox["z", "3"]}], "-", 
            RowBox[{"119", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "15"}], "+", 
               RowBox[{"4", " ", "z"}], "+", 
               RowBox[{"52", " ", 
                SuperscriptBox["z", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["z", "3"]}]}]]}], "+", 
            RowBox[{"82", " ", "z", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "15"}], "+", 
               RowBox[{"4", " ", "z"}], "+", 
               RowBox[{"52", " ", 
                SuperscriptBox["z", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["z", "3"]}]}]]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "15"}], "+", 
               RowBox[{"4", " ", "z"}], "+", 
               RowBox[{"52", " ", 
                SuperscriptBox["z", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["z", "3"]}]}]]}]}], ")"}]}], "\[NotEqual]", 
         "0"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"ArcTan", "[", 
              SqrtBox[
               FractionBox[
                RowBox[{"4", "-", 
                 RowBox[{"2", " ", "z"}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}], "-", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "15"}], "+", 
                   RowBox[{"4", " ", "z"}], "+", 
                   RowBox[{"52", " ", 
                    SuperscriptBox["z", "2"]}], "-", 
                   RowBox[{"32", " ", 
                    SuperscriptBox["z", "3"]}]}]]}], 
                RowBox[{
                 RowBox[{"-", "31"}], "+", 
                 RowBox[{"20", " ", "z"}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}]}]]], "]"}]}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             TemplateBox[{"1"},
              "C"]}]}]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              SqrtBox[
               FractionBox[
                RowBox[{"4", "-", 
                 RowBox[{"2", " ", "z"}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}], "-", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "15"}], "+", 
                   RowBox[{"4", " ", "z"}], "+", 
                   RowBox[{"52", " ", 
                    SuperscriptBox["z", "2"]}], "-", 
                   RowBox[{"32", " ", 
                    SuperscriptBox["z", "3"]}]}]]}], 
                RowBox[{
                 RowBox[{"-", "31"}], "+", 
                 RowBox[{"20", " ", "z"}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}]}]]], "]"}]}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             TemplateBox[{"1"},
              "C"]}]}]}]}], ")"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"135", "-", 
            RowBox[{"36", " ", "z"}], "-", 
            RowBox[{"468", " ", 
             SuperscriptBox["z", "2"]}], "+", 
            RowBox[{"288", " ", 
             SuperscriptBox["z", "3"]}], "+", 
            RowBox[{"119", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "15"}], "+", 
               RowBox[{"4", " ", "z"}], "+", 
               RowBox[{"52", " ", 
                SuperscriptBox["z", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["z", "3"]}]}]]}], "-", 
            RowBox[{"82", " ", "z", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "15"}], "+", 
               RowBox[{"4", " ", "z"}], "+", 
               RowBox[{"52", " ", 
                SuperscriptBox["z", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["z", "3"]}]}]]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "15"}], "+", 
               RowBox[{"4", " ", "z"}], "+", 
               RowBox[{"52", " ", 
                SuperscriptBox["z", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["z", "3"]}]}]]}]}], ")"}]}], "\[NotEqual]", 
         "0"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"ArcTan", "[", 
              SqrtBox[
               FractionBox[
                RowBox[{"4", "-", 
                 RowBox[{"2", " ", "z"}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "15"}], "+", 
                   RowBox[{"4", " ", "z"}], "+", 
                   RowBox[{"52", " ", 
                    SuperscriptBox["z", "2"]}], "-", 
                   RowBox[{"32", " ", 
                    SuperscriptBox["z", "3"]}]}]]}], 
                RowBox[{
                 RowBox[{"-", "31"}], "+", 
                 RowBox[{"20", " ", "z"}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}]}]]], "]"}]}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             TemplateBox[{"1"},
              "C"]}]}]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              SqrtBox[
               FractionBox[
                RowBox[{"4", "-", 
                 RowBox[{"2", " ", "z"}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "15"}], "+", 
                   RowBox[{"4", " ", "z"}], "+", 
                   RowBox[{"52", " ", 
                    SuperscriptBox["z", "2"]}], "-", 
                   RowBox[{"32", " ", 
                    SuperscriptBox["z", "3"]}]}]]}], 
                RowBox[{
                 RowBox[{"-", "31"}], "+", 
                 RowBox[{"20", " ", "z"}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["z", "2"]}]}]]], "]"}]}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             TemplateBox[{"1"},
              "C"]}]}]}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9252030113285933`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f9bb6087-b7f8-42b5-908b-f043c11ecfb7"]
}, Open  ]],

Cell[TextData[{
 "Los \[AAcute]ngulos devueltos de manera general son:    \[Theta]=0;    \
\[Theta]=Pi;     \[Theta]=",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"\[PlusMinus]", "2"}], " ", "\[ImaginaryI]", " ", 
    RowBox[{"ArcTanh", "[", 
     FractionBox[
      SqrtBox["5"], "3"], "]"}]}], "=", 
   RowBox[{
    RowBox[{"\[PlusMinus]", "1.9248473002384139`"}], " ", "\[ImaginaryI]"}]}]],
  CellChangeTimes->{3.9252030113285933`*^9},ExpressionUUID->
  "6e758d47-f604-485b-b526-971473344688"],
 ";     \[Theta]=",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[PlusMinus]", "2"}], " ", 
   RowBox[{"ArcTan", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{"4", "-", 
       RowBox[{"2", " ", "z"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "15"}], "+", 
         RowBox[{"4", " ", "z"}], "+", 
         RowBox[{"52", " ", 
          SuperscriptBox["z", "2"]}], "-", 
         RowBox[{"32", " ", 
          SuperscriptBox["z", "3"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "31"}], "+", 
       RowBox[{"20", " ", "z"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}]}]]], "]"}]}]],
  CellChangeTimes->{3.9252030113285933`*^9},ExpressionUUID->
  "72403593-7f5c-4efc-9a68-15ef478d9843"],
 ";        \[Theta]=",
 Cell[BoxData[
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{"4", "-", 
       RowBox[{"2", " ", "z"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "15"}], "+", 
         RowBox[{"4", " ", "z"}], "+", 
         RowBox[{"52", " ", 
          SuperscriptBox["z", "2"]}], "-", 
         RowBox[{"32", " ", 
          SuperscriptBox["z", "3"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "31"}], "+", 
       RowBox[{"20", " ", "z"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}]}]]], "]"}]}]],
  CellChangeTimes->{3.9252030113285933`*^9},ExpressionUUID->
  "be33a154-8bd4-4346-8627-a8f99623c191"],
 "\nLos valores complejos no nos interesan, ya que consideramos 0\[LessEqual]\
\[Theta]\[LessEqual]Pi, por lo que descartamos el tercer resultado. \
Sustituimos estos valores de \[Theta] en la funci\[OAcute]n distancia minima \
(FuncDistCuad) y veamos d\[OAcute]nde se toman los valores m\[IAcute]nimos:"
}], "Text",
 CellChangeTimes->{{3.925203017378809*^9, 3.9252031773462505`*^9}, {
  3.925203223105238*^9, 3.925203325551837*^9}, {3.925203453269991*^9, 
  3.925203468899309*^9}},ExpressionUUID->"bc9f7e8a-34a5-4b70-8c67-\
45cf01130878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"FuncDistCuad", "[", 
    RowBox[{"z", ",", "\[Theta]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925203348152658*^9, 3.925203363494763*^9}, {
  3.925203481891569*^9, 3.925203496074257*^9}, {3.925203591350622*^9, 
  3.9252035964007*^9}},ExpressionUUID->"c32b7ce7-f6a0-4ef0-965a-53344220ac70"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.9252033642801347`*^9, {3.9252034828440437`*^9, 3.925203496574499*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"3e84893d-f82a-46cd-89f9-b0d1adf3a389"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"FuncDistCuad", "[", 
      RowBox[{"z", ",", "\[Theta]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", "Pi"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"z", "<", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925203371622481*^9, 3.9252033718433104`*^9}, {
  3.9252035026227293`*^9, 3.925203512576889*^9}, {3.9252036047999964`*^9, 
  3.9252036088343115`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0a306bf5-9f48-46ec-abd9-3661393acfd0"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "4"}], "+", "z"}], 
  RowBox[{"3", " ", "z"}]]], "Output",
 CellChangeTimes->{3.925203372340147*^9, 3.925203516828368*^9, 
  3.9252036096458964`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"2c1f4224-f361-4ddd-8e90-930cc8139ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"FuncDistCuad", "[", 
      RowBox[{"z", ",", "\[Theta]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{"2", " ", 
        RowBox[{"ArcTan", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"4", "-", 
            RowBox[{"2", " ", "z"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "15"}], "+", 
              RowBox[{"4", " ", "z"}], "+", 
              RowBox[{"52", " ", 
               SuperscriptBox["z", "2"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["z", "3"]}]}]]}], 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"20", " ", "z"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}]}]]], "]"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"z", "<", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.925203538973412*^9, {3.925203613366164*^9, 3.92520361781327*^9}, {
   3.925204215361866*^9, 3.925204219648271*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"fa855055-a745-44c6-8185-2a4d9e55b36e"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "z"}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "z"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "z"}]]}]], "Output",
 CellChangeTimes->{3.925203539929689*^9, 3.925203621517358*^9, 
  3.925204227690087*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"afca3e47-58d7-404b-b595-22e3ea30e341"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"FuncDistCuad", "[", 
      RowBox[{"z", ",", "\[Theta]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"ArcTan", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"4", "-", 
            RowBox[{"2", " ", "z"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "15"}], "+", 
              RowBox[{"4", " ", "z"}], "+", 
              RowBox[{"52", " ", 
               SuperscriptBox["z", "2"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["z", "3"]}]}]]}], 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"20", " ", "z"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}]}]]], "]"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"z", "<", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{3.925204268195099*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"310d6901-73fc-42b4-b8e6-b8183e3d9476"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "z"}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "z"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "z"}]]}]], "Output",
 CellChangeTimes->{3.925204269235773*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"ff066516-f43a-4400-b5dc-5c23a7a9df94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"ArcTan", "[", 
        SqrtBox[
         FractionBox[
          RowBox[{"4", "-", 
           RowBox[{"2", " ", "z"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "15"}], "+", 
             RowBox[{"4", " ", "z"}], "+", 
             RowBox[{"52", " ", 
              SuperscriptBox["z", "2"]}], "-", 
             RowBox[{"32", " ", 
              SuperscriptBox["z", "3"]}]}]]}], 
          RowBox[{
           RowBox[{"-", "31"}], "+", 
           RowBox[{"20", " ", "z"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"]}]}]]], "]"}]}], ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "50.1"}], ",", 
      RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Se", " ", "observa", " ", "que", " ", "\[Theta]"}], "=", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"ArcTan", "[", 
       SqrtBox[
        FractionBox[
         RowBox[{"4", "-", 
          RowBox[{"2", " ", "z"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["z", "2"]}], "-", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "15"}], "+", 
            RowBox[{"4", " ", "z"}], "+", 
            RowBox[{"52", " ", 
             SuperscriptBox["z", "2"]}], "-", 
            RowBox[{"32", " ", 
             SuperscriptBox["z", "3"]}]}]]}], 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"20", " ", "z"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["z", "2"]}]}]]], "]"}], " ", "para", " ", "valores",
       " ", "entre"}]}], ",", " ", 
    RowBox[{
     RowBox[{"m\[AAcute]s", " ", "o", " ", "menos"}], " ", "-", 
     RowBox[{"12.1", " ", "y"}], " ", "-", 
     RowBox[{"0.1", " ", "posee", " ", "valores", " ", "reales"}]}], ",", " ", 
    RowBox[{"que", " ", "son", " ", "los", " ", "que", " ", "nos", " ", 
     RowBox[{"interesan", ".", " ", "Veamos"}], " ", "concretamente", " ", 
     "cu\[AAcute]les", " ", "son"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.925207648351772*^9, 
  3.9252077769865055`*^9}},ExpressionUUID->"83132e39-f12c-4d1a-8709-\
d517f905620e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.9791972914621623`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "50.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.9647601386330646`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "49.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.9499479334725867`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "48.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.9347411984047476`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "47.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.9191189129578212`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "46.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.903058346883967`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "45.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.8865348700789593`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "44.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.8695217353108964`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "43.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.8519898289389052`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "42.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.8339073837717437`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "41.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.8152396469236467`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "40.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.795948493893357`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "39.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.775991978017924`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "38.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.7553238017947728`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "37.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.7338926931306964`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "36.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.7116416650978417`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "35.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.6885071318806728`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "34.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.6644178457541257`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "33.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.6392936093800583`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "32.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.6130437033355387`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "31.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.5855649489458818`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "30.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.556739298704389`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "29.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.5264308070019823`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "28.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.4944817765694667`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "27.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.4607077913200543`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "26.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.4248912182799092`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "25.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.3867725630238819`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "24.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.3460387471299764`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "23.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.3023068563367834`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "22.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.2551010202088932`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "21.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.2038185000584904`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "20.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.1476780859401037`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "19.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.0856379533240328`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "18.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"1.01625728362114`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "17.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"0.9374453835370408`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "16.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"0.8459593522247808`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "15.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"0.7362439365148892`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "14.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"0.5970695629552036`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "13.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3.141592653589793`"}], "-", 
      RowBox[{"0.3962939385478331`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "12.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.8993321035489443`"}], ",", 
     RowBox[{"-", "11.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.599517161477608`"}], ",", 
     RowBox[{"-", "10.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.3982555478279095`"}], ",", 
     RowBox[{"-", "9.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.224837702195051`"}], ",", 
     RowBox[{"-", "8.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.062011869055291`"}], ",", 
     RowBox[{"-", "7.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9008030837413241`"}], ",", 
     RowBox[{"-", "6.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.733991253381687`"}], ",", 
     RowBox[{"-", "5.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5531711686642973`"}], ",", 
     RowBox[{"-", "4.100000000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3449001820995485`"}], ",", 
     RowBox[{"-", "3.1000000000000014`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0794362442824663`"}], ",", 
     RowBox[{"-", "2.1000000000000014`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6370353054235942`"}], ",", 
     RowBox[{"-", "1.1000000000000014`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.3500113192711021`"}], "-", 
      RowBox[{"0.7923508235705102`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "0.10000000000000142`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9252076558347826`*^9, 3.9252076854764175`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"fc180faf-07f1-43ff-a284-dd01ccfd8fbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"ArcTan", "[", 
     SqrtBox[
      FractionBox[
       RowBox[{"4", "-", 
        RowBox[{"2", " ", "z"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "15"}], "+", 
          RowBox[{"4", " ", "z"}], "+", 
          RowBox[{"52", " ", 
           SuperscriptBox["z", "2"]}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["z", "3"]}]}]]}], 
       RowBox[{
        RowBox[{"-", "31"}], "+", 
        RowBox[{"20", " ", "z"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}]}]]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "12.5"}], ",", 
     RowBox[{"-", "0.1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9252080898856773`*^9, 3.925208120484451*^9}, 
   3.925209006181494*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"06386f72-30e4-4851-87ba-4e9fcd9f0234"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVknk41IkfgI1jZpSjHMkVI/NNhNqQJEKHIoSE8lglJXJbkm0LWcr1q0hU
JNG6Frk28vmUckckRznGPTOOcd+0+/vjfd7/3+elXfS0vMzNxcWV9h//t6xE
sZb+WwLNuS5dCRbjR9l3riLb/yEwI7yE6jdDxd8kz/r+LCHQZf3SkVNtVGz2
P9I2UkQgs/iCOLuSikqtKppNhQQejGf5X8ql4h01iYTifAKjuMXnlJ9T8fs9
7sWneQSW6Vt3hsdRcf/oxLmwHAJD34toCoVRMcqoq8wti8Dg6bz+W4FU1Fv7
O0gng8DopmR7/0tUfGyb/IOWTqCxJ0hV2VFxqihclz+NwE3jge0hFlRMu+6w
0fGMwMt1LFmaPhVX64wdIZnA9PSdvmwtKloTGpjxhMA+rQC5FTUqkvs2hfjH
E3hYbi+2ylHxmkUZn2g0gRVrKgMDPFSsynnpsnKPQG5DblGLdQrK8MfW9EcQ
yG+klNu/QMGm95cj88MI9O6qUnRlU/CX/aKCZsEEWjZ4FnxrpWCkPhy2CyJQ
oC/uj7jPFGSYuHk4BxL4TSXbx7GWgjHOVc1BfgS2fOs20qqkIDve90GmO4Gn
1DnahVkUTFv6KkFyINAmk73bIZyCIpWPFIoOE2iYtShecoyCrvVHrOAQgSLR
Z5ZnDCiI7eOh9QcJzNossemAHgU9OEeHGZr/9Rm0F2jTomC9/HymoBqBjxk7
rRyUKBgSelb1yg4Cjd5HScYKUHDWeJu21E86iiu4sN50kjHpxWLQ6hodvRLK
ntp+I+ORlc533St07A4YYpBayRiVnWyUskBH+eRrn50ayKgoRDNXnKRjbGWF
+tlKMlp/VXFR66FjBCFzcTWdjCUOBo8My+n429Eblwb9yBjo4z51LYCOvzxg
ZzNlyDhgpylp40/HJtsPsvZSZDQ12DAw8KXj4W3FNz5LkFFuS9xDCU86vtmZ
3P2PCBmrc99ofXSh46CbW8NrKhnFWCvBsjZ0rLTi9voxx4f5jpH8XzTo2HBS
TymwiQ9ZphkKmjOKSBvvrfx+lw87CYFjs/6KKHW3Rq2Onw+jxD7NaXJ2YtbC
oTjLWF4EUtYjd++dyGreritF58WeFJ88mQUFjEppV/vrAw/CmZizZ7wUcJv4
6TvVF3hQnqd9/MYsDb+Sdl21I/HgsVqvrbvcadhVoLd68QU3ntXj/H16VB5P
GLpvKTrGjUNvnuhddZPHZdWMiNVpEnoGqRUL1cthYR7seZNIQrGoO581mnfg
c7W6MP/jJDT4FMTlDLJI+ouvSWOSC4/9emhXeJEMollIDS2RC4+vWKnFlUvj
PtjyY7sxF34pF7F4mSuF5wUriNKBn2AbvNvyeYEkhjo9mD9/5CeUPKcYR73d
ji3KEc9cUzfgGfO+bWieBAqkh/JET6/DnX1XT14s2oZJrOKATNN1mHzBtj71
Shw3qnxLwx+vwT4/DWt6shhO250g8gZWwedY+35mmijGVGXWv9VaBV29HWpF
8SIYrJT3bSNgBXi0KqlXk7Zi9OmnC9rvl+FFLL1DKH0Leup9aOigLkMczeX2
7/uEkaxYdGL84BJ00faJ5uoJovYr6Tem3ouw39v4xyRtMza+vvCEO2YBIiqF
nbl286PNQm18bd483G++3LZ4kIJx1a2uoTVzkKJODSLR+FBJ3IPILJ+FvGh7
xncVHryq0BpdkzsDTTrLN6sFSHj0sHqi+/Vp0Dp3ekOdsw4nQ6QLVQSnIMfQ
nfqqbx1icibtCihToKB2X0TqyzpY19CUNLinQJivjuAtWIcS2RGzi5McYBYe
Ne/0WYe3tVnBWz5wIElIN/X2whrs9Uihm13lwMYnZcOW9VUg/WzuFsqfhBoN
ariPwApo2bR22CpPQElICy1xdRlO0IRSHstMQPqXpHfv2MvQ65nr3yg0ASHu
qvPUumUo327Fu312HPTSLZ1T7i4Dw3Xqtkb5OBSJPjNs3FiCHR3WS14nxyF1
Zt9P+vQiBFQ4Zdo5jEHskdUkE8YiHKz73Xiv2Rjcivmo5d28CO+9twmt6I3B
eeVzHhW5i5BGc3roIj8G2y4G91heWwRpHlHj1AE2RLdUl/8xuAA3k83XgpzZ
EJR/PrDr2zzIygv3d15gge0t5Qey1fOQeuyq2bwpCw6YLmc7lcxDz4NbD7kP
s2BuNKGPlTAPxytNBDkyLPCUaz2+cm4e9MWqAzd3M8E5xlhc+vsc+Mbv7VM9
xwQzd83CC72zYK3qmNCsPwp7dHgbU5tm4TVjl2u+6ihspn4dHqqcBa7E4rGb
0qNQ+9JL8nrKLHj4bV1tWRgBox/Zt3//dRYUPQw7fXJGQPuUgvnzgRl43aqf
e0J0BHYqCY/3jUwD3/LTldHGIZB3l9L07ZgGRf1TJpzSIZDJp98i106DyIFk
nY60IRDT1t2i+tc0TPMVCZ0IHAJeY1eNILdpGPS4nJBIG4KhK1XBYlNTYDhM
doy4PgiM7KZPmYwpELGL+mRnMwjdnC6hQy1TMMvn8ZxbfxDaAqZSnQqnIDj1
aF2H8CB8/FP2U57fFLw7Lv0p6O8BOGXOkXoww4Hq75cvDA/3g2EHX27ZVw4I
1Q8lNDT0g46jjH5fEQdOzv8zGVTQD8qeJy/tCeDAeBuY7A3uh82xL7OrVych
Y586tAr1Q2PTOd1V3kkIlb07WLyLAR9tPJpoIxOQlk6QI/kZUNEb9qtxzQQs
3fPylGzvg5zJgrD4yAnocbF+pGPfB9FCAp/V//vQJLG28Kh9L5iZoYOzxDh8
33rTOl2jGw4kq4iOz4+Bfb9ZS87wD5BnJtT6to3BQ3dh0p/xP2D2zvX9of8b
A50HEXh7+jskFkvxp20eg+IP4qqCT7rgDnd45W42G9ZO/1mhrN8F18ynfQtq
2eBEFjmdNtgJuqyaXrzLhq33jgSZ7uqEfhn/or6fLGAcTLRlJLRDvSvD9Uov
C3qMWLK7VduhqMREjlPBgsxeqa4J/AbhFgr3Nm6wYAvXL3qGjDbwfBatH27L
glL9U77ebm1gy16aEzzAAt4CaUn72a+gHNbsKDvHBB2v0EdmS60g2qIj/qqV
CYtj5xsr/VphTTajfk8BEwx3djrljrdAc2mwpq4HE27Mlm9of/4CZbxMdpUp
E25FCjLLNb5A2hmrVBMVJnDfPS69qtwMfmO7N59njsKlpPcZO241goN2PA5U
jwIxVrNreFMDHL/L9du1V6PgfSb8kdjtOlBvdVOZCR2Fl8O+KpSuGtgu18G4
cXEUrHJlLCyEq4HkbphAMhgFtrnpniTJj8AuyzWJlBuFRfF5PQfWe2jjkyRt
3RiB9K/7HVUbKuGdZVhJYvcI3G8TKOUpLYOMFI6bfPkILPKIJi/454O1JJcG
OW0ETLbG9vg4xMC/F8NiCw==
       "]]},
     Annotation[#, "Charting`Private`Tag$10270#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-12.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.5, -0.1}, {-3.1350029065215845`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.925208121217875*^9, 3.9252090068211946`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"52c74660-76e2-444c-9af4-d84fe7eb8453"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"ArcTan", "[", 
     SqrtBox[
      FractionBox[
       RowBox[{"4", "-", 
        RowBox[{"2", " ", "z"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "15"}], "+", 
          RowBox[{"4", " ", "z"}], "+", 
          RowBox[{"52", " ", 
           SuperscriptBox["z", "2"]}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["z", "3"]}]}]]}], 
       RowBox[{
        RowBox[{"-", "31"}], "+", 
        RowBox[{"20", " ", "z"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}]}]]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "11.3641"}], ",", 
     RowBox[{"-", "11.3638"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92520909365038*^9, 3.925209225044985*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"70cb76a3-59d0-4cf7-93e8-69ad8d88ceb4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwd03lQ01cQB3BuCYIWQoMhXAKDqEA7FKeUGssdjnClgpKhI00LCSDlEhHa
YUCRBLSIFgyHBZNwKFAQqhxxCj8qFVoSzg5KqAwDKlfLYSVyFbrLH292PrP7
/ng733eYk8CKUlNRUWHDwfrsiJAaLrUhLCedi1cOk4iinRgKektqutQI1iEZ
kNGf0gbiC8BZZOlBdOIQszwVrDTl6KIDf7ZvjwTH2eqQ0P71+8ICwVOOLZpo
ZoOelA4Oo7PV0Lfi61MdwO6suq2z4IYoxwUDcHsEax19tEYjQAtsz918i1a5
ZxG4aUEiDn3nt4SmK5sUM+CC3DcLaKvKcsY4WONm2Sz6TcAgeRC8XL0whb5y
+mX1Y/DTwfxRdHGsh1IIthHHDaHHeNuWheDcC0w5+l7weroA7E090IumhD+8
k473OTelaO9a3rdfgHvXhCL0r8Y3mMfAtn2XKtCsf3r8rMGCsvBydDrrbIQZ
2OczWjG6fLu31QDcJ6gQoLWCQj7eNgfTqhPQI08s1obBtktXz6PnL3Nfy8AC
IjoG/c4jYKYX7BNl+9Ven9e58wv498b6MLTrJe7DOvAfbi10NJ9m8eoquJ/b
tX9vv20jhu5g2WKTNrpFt9nqFDrhriZap+QjZxfwQFr27hnw0vGnSY7gEb7H
v2jxhTprK7CitleB/pFcmKYJnpsdvI8uzZSw5WYkQpM3xUAbTdlxuGDDpAJP
9IPlZfOvwZYZJ93QFcnVU5Fg1+slLug8575YNjjjQbA9mrxKEQWAV9YJA/St
5R9uOIEVeaIXYeDfNoUMDXBTPScFbezXplVnCvPzlJ9CwZndczIDsCjObuw0
mPda5phtQiL4oQ7q6J0TKvd3aZAfF86pz8H7BJPqheDVL9/xWOA+YfOqGfhi
TqcoBOw7M1z62JhEfHgweTIYPGu9YX4OzH6Rq4PeKBjN3qWSCFqN3DMI8yJs
PVoHZrakfhOI+wt+Gx4CNuwIqgnA96t15qiC9W0p00wwN8104tEhEpGpoOuh
J1f1zkeDr/CF3v7g4+nm+Wbg9TRWgh94bbpyesSIRIiHNsp9wUK/k8354Bmr
0TEf/F9GjPd8wUVSPVX0eneZWB38l3/GJwzMi756aA+FRIR7jaZ6g20ybpfy
wd6Xvxd5gbsiZVQGuL8jfcIT3JGYa60LjvTSfI6mhY6b7wcrhwr/RCtS3Gk6
YMu5Wjm6xOeMgTY4gzLWhe5uzFfVAB9LcaxCN+aQX269TyLy7RbPo4nk3I5F
sEX7xRi0G1HctgBu9VCLRtvclj6aB0+zqefQ3F7PllmwSx4jBE2vYjfMgOdf
SU6g4+/yqybAmUkfOKLDlH9LFGDD/6QOaLssrmQc7Go4cmTP1DviZ+ASdxVj
tFKuJh4FOwxco6AT7PXFI+CecCMy+oDQSTwMXkl00EWnJUnFg+Dc7Q5tdNVz
E8kA2ETgpYm+7lQkkYNbyMOq6CdZFlUysE9lxI4HOLatu6of/D8hBJSZ
       "]]},
     Annotation[#, "Charting`Private`Tag$10772#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-11.3641, -3.141572156713452},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-11.3641, -11.3638}, {-3.141572156713452, -3.13564232555557}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.925209097432078*^9, 3.925209117848855*^9}, {
  3.925209159119041*^9, 3.925209225334648*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"b7477cd8-d7f8-4019-bbaf-b3f41caa6cce"]
}, Open  ]],

Cell[TextData[{
 "Entre -11.364 \[LessEqual] z \[LessEqual] ",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox["1", 
    SqrtBox["2"]]}]],
  CellChangeTimes->{{3.925208034207845*^9, 3.92520805093854*^9}, 
    3.925208094936653*^9, {3.925208152815895*^9, 3.92520816742422*^9}},
  ExpressionUUID->"771f831f-d766-429d-b554-634f1819cf47"],
 ", el \[Theta]=",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"ArcTan", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{"4", "-", 
       RowBox[{"2", " ", "z"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "15"}], "+", 
         RowBox[{"4", " ", "z"}], "+", 
         RowBox[{"52", " ", 
          SuperscriptBox["z", "2"]}], "-", 
         RowBox[{"32", " ", 
          SuperscriptBox["z", "3"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "31"}], "+", 
       RowBox[{"20", " ", "z"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}]}]]], "]"}]}]],
  CellChangeTimes->{{3.92520909365038*^9, 3.925209225044985*^9}},
  ExpressionUUID->"a5e5d4de-fd8e-44c7-81ee-dd5d0dcb4492"],
 ", se corresponde con n\[UAcute]meros reales, el resto, complejos, lo cual \
no nos sirve"
}], "Text",
 CellChangeTimes->{{3.9252093017599463`*^9, 3.925209399141255*^9}, 
   3.926054446039464*^9},ExpressionUUID->"bbc31287-051c-4c0c-9db6-\
33b3796f8c0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"ArcTan", "[", 
       SqrtBox[
        FractionBox[
         RowBox[{"4", "-", 
          RowBox[{"2", " ", "z"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["z", "2"]}], "-", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "15"}], "+", 
            RowBox[{"4", " ", "z"}], "+", 
            RowBox[{"52", " ", 
             SuperscriptBox["z", "2"]}], "-", 
            RowBox[{"32", " ", 
             SuperscriptBox["z", "3"]}]}]]}], 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"20", " ", "z"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["z", "2"]}]}]]], "]"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{"z", "<", "0"}]}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.925208016665951*^9, 3.925208050284178*^9}, {
  3.925208144301486*^9, 3.925208164845601*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"a84c6d17-830a-468e-b308-4cfebdea1cce"],

Cell[BoxData[
 RowBox[{"z", "\[Equal]", 
  RowBox[{"-", 
   FractionBox["1", 
    SqrtBox["2"]]}]}]], "Output",
 CellChangeTimes->{{3.925208034207845*^9, 3.92520805093854*^9}, 
   3.925208094936653*^9, {3.925208152815895*^9, 3.92520816742422*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"7beccee4-4268-4757-b96e-a4c61007c159"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"FuncDistCuad", "[", 
      RowBox[{"z", ",", "\[Theta]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{"2", " ", 
        RowBox[{"ArcTan", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"4", "-", 
            RowBox[{"2", " ", "z"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "15"}], "+", 
              RowBox[{"4", " ", "z"}], "+", 
              RowBox[{"52", " ", 
               SuperscriptBox["z", "2"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["z", "3"]}]}]]}], 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"20", " ", "z"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}]}]]], "]"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"z", "<", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925203633297943*^9, 3.925203637109455*^9}, {
  3.925204246275228*^9, 3.925204249621657*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c5dfece1-0b92-414f-bfdc-4d3dc876f09f"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SqrtBox[
    RowBox[{
     FractionBox["1", "2"], "+", "z", "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"8", " ", "z"}]}], ")"}]}]]}]}]], 
   RowBox[{"2", " ", "z"}]]}]], "Output",
 CellChangeTimes->{3.925203640385618*^9, 3.9252042539437532`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"28670a4e-793f-44bf-a64d-01e08e5ade4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"FuncDistCuad", "[", 
      RowBox[{"z", ",", "\[Theta]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"ArcTan", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"4", "-", 
            RowBox[{"2", " ", "z"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "15"}], "+", 
              RowBox[{"4", " ", "z"}], "+", 
              RowBox[{"52", " ", 
               SuperscriptBox["z", "2"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["z", "3"]}]}]]}], 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"20", " ", "z"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"]}]}]]], "]"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"z", "<", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{3.925204281697777*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"bf8a3b29-f631-45be-ad53-431bd4979471"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SqrtBox[
    RowBox[{
     FractionBox["1", "2"], "+", "z", "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"8", " ", "z"}]}], ")"}]}]]}]}]], 
   RowBox[{"2", " ", "z"}]]}]], "Output",
 CellChangeTimes->{3.925204282330877*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"101bd36b-225f-466c-abe4-3e5b1d1d396e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"ArcTan", "[", 
      SqrtBox[
       FractionBox[
        RowBox[{"4", "-", 
         RowBox[{"2", " ", "z"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["z", "2"]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "15"}], "+", 
           RowBox[{"4", " ", "z"}], "+", 
           RowBox[{"52", " ", 
            SuperscriptBox["z", "2"]}], "-", 
           RowBox[{"32", " ", 
            SuperscriptBox["z", "3"]}]}]]}], 
        RowBox[{
         RowBox[{"-", "31"}], "+", 
         RowBox[{"20", " ", "z"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["z", "2"]}]}]]], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "50.1"}], ",", 
      RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"esto", " ", "indica", " ", "que", " ", "\[Theta]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{
           FractionBox["1", "2"], "+", "z", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "z"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"8", " ", "z"}]}], ")"}]}]]}]}]], 
         RowBox[{"2", " ", "z"}]]}], " ", "es", " ", "complejo", " ", "para", 
       " ", "z"}], "<", "0"}]}], ",", " ", 
    RowBox[{"tampoco", " ", "nos", " ", "interesa"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.925207505098595*^9, 3.925207579949237*^9}, 
   3.925207633626686*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"d4512511-af1e-4427-b531-21444216e504"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.5090925976031913`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.5007279674869602`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4922029327045205`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4835110320731246`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4746454003492504`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.465598733534493`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.456363250355495`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4469306493982605`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4372920612926716`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4274379952425065`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4173582790759727`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.4070419918474624`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.3964773878473`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.3856518106655793`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.3745515956998617`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.36316195918313`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.351466871423074`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.3394489114675765`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.3270890998191005`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.3143667050798857`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.301259019476936`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.287741097032773`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.2737854466367002`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.259361670325546`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.244436034556488`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.2289709589451148`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.2129244025644392`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.196249122051157`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.1788917678613924`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.160791774209723`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.141879983251965`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.1220769230349874`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.1012906287219253`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.0794138530497546`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.05632044760075`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.0318605993406926`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.0058544569475174`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.978083444029952`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9482781693594642`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9161011924777422`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.8811217631619392`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.8427775703825902`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.8003145287004245`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.7526874253397842`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.6983861252424026`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.6351079367084775`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.5590749122020875`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.463392082084084`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.3330738015835901`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.1204163638201199`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.35001131927110213`"}], "+", 
    RowBox[{"0.7923508235705102`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9252075200542917`*^9, 3.925207549046644*^9}, 
   3.92520763409234*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"337cfbde-6d83-49f5-9b79-e3944ec34e16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", "z"}], 
      RowBox[{"3", " ", "z"}]], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"9", " ", 
            SqrtBox["2"]}]}], ")"}]}], "\[LessEqual]", "z", "\[LessEqual]", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}], ",", 
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}]]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "15"}], ",", 
     RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(\(-4\) + z\), \(3\\\  z\)]\)\>\"", ",", 
      "\"\<-\!\(\*FractionBox[SqrtBox[\(1 + 2\\\  z + \
\*SqrtBox[\(\(-\((\(-3\) + 2\\\  z)\)\)\\\  \((1 + 2\\\  z)\)\\\  \((\(-5\) + \
8\\\  z)\)\)]\)], \(2\\\  \*SqrtBox[\(2\)]\\\  z\)]\)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9252036561644487`*^9, 3.925203739696003*^9}, {
   3.9252042904169044`*^9, 3.925204346746756*^9}, 3.925204497482292*^9, {
   3.925207799196335*^9, 3.925207815330449*^9}, {3.925209403497299*^9, 
   3.925209418303159*^9}, {3.9252096152219734`*^9, 3.9252096354405527`*^9}, {
   3.925463707682928*^9, 3.92546372820666*^9}, 3.926054459158868*^9, {
   3.926333155602463*^9, 3.9263332304417844`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"55ce544b-c230-4a67-9663-af1ef960eb33"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQnf319Nf//3UPMIDBB3uzZ/9uK2xF8BmvGx5yzELw
G7cmiL8+rgPnl10NKAozQPBjStf/2zVbG87XEbou3P5LC84v/LBfTzQFwV9w
uvAS10FNOP+g2qTlPxUQ/PDDxU2rujXg/Osxcs8OvVSH88+Yd/nPDULwN01K
eVWwTw3OXzJxuWTkLgS/6RU73xpZBP9Ec475ynZVOP+75KyXvE9V4HwJA7Oz
2a4I/rr2ydu6NyjD+Xp3dmoI8yP4ykULF8RUKMH5TKxBC3mvKsL5l8QLL283
QfAlcgK5VeYrwPn9VV+nv/8pj/Dv/FMq0qflEOYdrRGxXCQL5zM+OSCqliAD
579qbVeabiwN5y9XfOBw/a0knO++V/QQ5zoJOP/i7bN+B5rF4Xz9L+JvXR3E
4Pzy/ifT/IVE4fxFWn2LvV8Jw/kL9588KLZSCM7vut7+OrVWEGHfy+tqLRYC
cP693yG3fYT44PwvKlv0yvZzw/kbHc2X2lpxwvnOKfuNeB+wwfk1VdmPq4JZ
4PzqCRcjz15ihPPnRVSe8//1bz+MP6V8ur7jq59wvsmi/fucDL7C+Qlnom/y
9n2A8zfvri/R4nsO55+xrk+bt+AZnP/t9XaVzRG34fzaS+czeu9fgPOFnszb
PG/mTjgfAIB7H30=
          "]]}, Annotation[#, "Charting`Private`Tag$5121#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5121#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$5121#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.4222222240241876}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"1\"", "\"\\!\\(\\*FractionBox[\\(\\(-4\\) + z\\), \\(3\\\\ \
z\\)]\\)\"", 
       "\"-\\!\\(\\*FractionBox[SqrtBox[\\(1 + 2\\\\ z + \
\\*SqrtBox[\\(\\(-\\((\\(-3\\) + 2\\\\ z)\\)\\)\\\\ \\((1 + 2\\\\ z)\\)\\\\ \
\\((\\(-5\\) + 8\\\\ z)\\)\\)]\\)], \\(2\\\\ \\*SqrtBox[\\(2\\)]\\\\ z\\)]\\)\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.92520369086219*^9, 3.925203697529418*^9}, {
   3.925203728043823*^9, 3.925203740070736*^9}, {3.925204308383344*^9, 
   3.925204347131988*^9}, 3.9252045008577256`*^9, 3.9252094196075673`*^9, 
   3.925209635844333*^9, 3.925463731032637*^9, 3.9260544684645863`*^9, 
   3.926333194004094*^9, 3.926333231414911*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"1c97dbb0-b4bd-4a72-a634-21ff449fab64"]
}, Open  ]],

Cell["Veamos cuando una es mayor que otra:", "Text",
 CellChangeTimes->{{3.925204514224783*^9, 
  3.9252045210902576`*^9}},ExpressionUUID->"fd83aad7-8596-424f-8d9b-\
12c56149a436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "<", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "4"}], "+", "z"}], 
       RowBox[{"3", " ", "z"}]]}], "&&", 
     RowBox[{"z", "<", "0"}]}], "}"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.9252045249084578`*^9, 3.925204553290817*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"f42e1ff3-9e0d-440a-ad39-81415470c52d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "<", "z", "<", "0"}]], "Output",
 CellChangeTimes->{3.925204553986476*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"462c7281-7a79-4d89-9bee-19b1bf4ff112"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}]]}], "<=", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}], 
        RowBox[{"3", " ", "z"}]]}], "&&", 
      RowBox[{"z", "<", "0"}]}], "}"}], ",", "z"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "realmente", " ", "la", " ", "tercera", " ", "funci\[OAcute]n", " ", 
       "se", " ", "define", " ", "a", " ", "partir", " ", "de"}], " ", "-", 
      FractionBox["1", 
       SqrtBox["2"]]}], "=", 
     RowBox[{"-", "0.70717"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "entonces", " ", "es", " ", "realmente", " ", "v\[AAcute]lido", " ", 
      "esto", " ", "para", " ", "z"}], "<=", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9252045832241135`*^9, 3.9252046087508297`*^9}, {
  3.9252058247697563`*^9, 3.9252058271178117`*^9}, {3.926054529640921*^9, 
  3.926054582784998*^9}},ExpressionUUID->"d4a1670a-ac26-4632-98a7-\
4a21ed0c4c30"],

Cell[BoxData[
 RowBox[{"z", "\[LessEqual]", 
  RowBox[{"-", 
   FractionBox["1", "2"]}]}]], "Output",
 CellChangeTimes->{3.92520460136959*^9, 3.925205828043964*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9c469182-2fa8-43de-bd8a-b3f2c91a5083"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "10"}], "-", 
     RowBox[{"9", " ", 
      SqrtBox["2"]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925204620911024*^9, 3.925204622606416*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"7e8382e8-0335-4652-98c8-efb66f0c3109"],

Cell[BoxData[
 RowBox[{"-", "11.36396103067893`"}]], "Output",
 CellChangeTimes->{3.925204622896047*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"06f4af3a-101a-4af9-a6fe-5ef9f6015518"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "z"}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "z"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "z"}]]}], "<", "1"}], "&&", 
     RowBox[{"z", "<", "0"}]}], "}"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{
  3.9252047244522057`*^9, {3.925204890008407*^9, 3.9252049026531305`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e944542c-1a47-49de-b601-133d3b137443"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "<", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "||", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}], "<", "z", "\[LessEqual]", 
   RowBox[{"-", 
    FractionBox["1", "2"]}]}]}]], "Output",
 CellChangeTimes->{
  3.925204728788966*^9, {3.925204893311629*^9, 3.925204903700841*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"0a2937a5-4835-4e96-9331-6c7c44075a8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"-", 
   FractionBox["1", 
    SqrtBox["2"]]}], "]"}]], "Input",
 CellChangeTimes->{{3.925204743580558*^9, 3.925204748908663*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"2e4790e0-dea6-4747-8b8c-664d6c342250"],

Cell[BoxData[
 RowBox[{"-", "0.7071067811865475`"}]], "Output",
 CellChangeTimes->{3.92520474950041*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"01dd6008-61fc-4c85-9988-20e1cd5a3826"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "z"}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "z"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "z"}]]}], "==", "1"}], "&&", 
     RowBox[{"z", "<", "0"}]}], "}"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.925204828666432*^9, 3.9252048293580923`*^9}, 
   3.925205153273035*^9, {3.925205924962015*^9, 3.9252059251787367`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e650cd52-01d1-49a6-9398-317fe19f899d"],

Cell[BoxData[
 RowBox[{"z", "\[Equal]", 
  RowBox[{"-", 
   FractionBox["1", 
    SqrtBox["2"]]}]}]], "Output",
 CellChangeTimes->{3.925204829865585*^9, 3.925205926563518*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"7333b6c2-2cef-4ba4-96ca-dfdf15acd71e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", ">=", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}], ",", "1"}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "<=", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"9", " ", 
            SqrtBox["2"]}]}], ")"}]}]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}], 
        RowBox[{"3", " ", "z"}]]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"9", " ", 
            SqrtBox["2"]}]}], ")"}]}], "\[LessEqual]", "z", "\[LessEqual]", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}], ",", 
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}]]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "15"}], ",", 
     RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Green", ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(z) = 1\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)(z) = \
-\!\(\*FractionBox[SqrtBox[\(1 + 2\\\  z + \*SqrtBox[\(\(-\((\(-3\) + 2\\\  \
z)\)\)\\\  \((1 + 2\\\  z)\)\\\  \((\(-5\) + 8\\\  z)\)\)]\)], \(2\\\  \
\*SqrtBox[\(2\)]\\\  z\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)(z) = \
\!\(\*FractionBox[\(\(-4\) + z\), \(3\\\  z\)]\)\>\""}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "0.7"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "  ", "Orange", ",", " ", "Green"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92898839016615*^9, 3.928988416597078*^9}, {
  3.928988460361388*^9, 3.928988503876981*^9}, {3.928988551893617*^9, 
  3.9289886111675396`*^9}, {3.928988746226801*^9, 3.928988756756596*^9}, {
  3.9429029226188583`*^9, 3.942902933022316*^9}, {3.942903016603594*^9, 
  3.9429030219440823`*^9}, {3.9429030616570187`*^9, 3.942903064854553*^9}, {
  3.942903672035965*^9, 3.942903694943924*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"95b90def-7aaf-4673-a4d4-b10c2282169d"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
           LineBox[{{-0.7069649824413078, 1.}, {-0.7067359274228248, 
            1.}, {-0.7021548270531452, 1.}, {-0.6929926263137862, 
            1.}, {-0.6838304255744272, 1.}, {-0.6655060240957091, 
            1.}, {-0.6471816226169912, 1.}, {-0.6105328196595552, 
            1.}, {-0.5738840167021192, 1.}, {-0.5005864107872472, 
            1.}, {-0.4272888048723752, 1.}, {-0.2636445544770039, 
            1.}, {-0.10000030408163266`, 1.}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[2], Opacity[1.], 
           LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcBlAvVcsAXbP/KM/fyo
/S3AQ2wF+yEG2z94JC8EUvstwEiD0aqTBts/hFOSEqT2LcCQVq0/dwfbP56x
WC9I7S3AvSvoPj8J2z/QbeVokNotwBGmE5fSDNs/Nub+2yC1LcC2t8/LBhTb
PwHXMcJBai3APJmzN6Yi2z+BtWAX68cswJHceyBgQ9s/dtVQclYwLMAtH9Mk
Q2PbP1x1r/66myvA9M8Y8dmD2z8sEtcTh/oqwFdlnc/JqNs/cfC/LhVkKsDs
Fn632czbP6DLcdIKwSnAQSPpPsr12z/BJpKn+SApwHNyCnEAINw/V8NzgqqL
KMCJy+SmUEncP9dcHubC6SfAF/puFWR43D/MN4pPnVInwICqnqSkptw/OKH1
nUxQJ8AzHv6sXqfcP6MKYez7TSfArhpU2hio3D963TeJWkknwHfHD6SNqdw/
KYPlwhdAJ8CxmPv0eKzcP4bOQDaSLSfA5Ntgllay3D8/ZfcchwgnwFrFKiYu
vtw/qs5iazYGJ8CYqwvj7L7cPxY4zrnlAyfAQ2xMxqu/3D/uCqVWRP8mwObY
GwAqwdw/nLBSkAH2JsCZ6TdCKMTcP/j7rQN84ybAoamgCizK3D9kZRlSK+Em
wL659zLtytw/z86EoNreJsDgNmqCrsvcP6ahWz052ibAawPRljHN3D9VRwl3
9tAmwH/C85Y50Nw/wLB0xaXOJsAG9nP5+9DcPywa4BNVzCbAxSpvg77R3D8E
7baws8cmwGe+Bg5E09w/cFYi/2LFJsDEPLsOB9TcP9u/jU0SwybAUPsaN8rU
3D9GKfmbwcAmwBMWMoeN1dw/spJk6nC+JsD8rQz/UNbcPxEg89btuybAan2a
QSXX3D9I23v+a7omwDjeQbOk19w/vGderg==
            "]]},
          Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[
          {RGBColor[0, 1, 0], AbsoluteThickness[2], Opacity[1.], 
           LineBox[CompressedData["
1:eJwVj3k0lW0bxc2JDJEQkfCoiJIo4SoyVIaiAamMhVIqSqjel0olGs0RWkJK
Gl5jdd/pVNJoyCmewzGcmfOQef58f+y112/tvfZaW8f/hHuQmIiIyLU5/d/v
pGjSd1QT+KBro/szOgnhT/99H1pFYK3JeS/G5/inpWIZp5zABSk69t9/k2BS
l3M/8BWBT2uwR/P/kJC8Z/W1zucEjlM4WH+2lQRhV03kwWcEVhm7/dq5jYQn
079dPR8T2Ounm8goSYJs4pFNvwrncgZ/11cGCaFqIwbuBQQOUwt8n9dOwsp1
yqLOuQROOqcs5cIk4VGwy0tIJfA/5vtkC7pJkBxpe/D6LoG7B5p9YnpICIwP
vbHxNoFF+yO/72KRoJuTELTuBoH3XdiqNMsmIbfpnapBHIGfEdJL9/NJyLQx
j5U/TmDU3+KgPkDC+BdacOJRAm9PfpgzMMeeXh57pEMIfGD5MtX6vySoRoQb
iwUSuK3JOTRmiIR7xY+Zw14Ediw6ntkxOvd/kbY9w57AJRIvVpbOkBDHnyf/
ZCmBH2h02QUuYAAn9qnYbg0CbwkZETGVY4CzgsfopBqBM/jn22bneLFZDnPH
IgK7DUrwshQYUHLe7KVAhsAnC+sO/1JiQLOin6fhmD5usSMHXdQZoG9Rnf+4
UR/bZ0dd30MwoC7+mEVxgj6uOe0ehDczYFQ9kyfH0sMuTbzR6hgGqK0x/3bU
Xg+3+PAiZCsZUJpwtzyxTBfXUfp/7v9lgDFZtUJZQRfHFx6qIM3aQfdUXq5P
1HK8+OKZ2sjIdhCTdM+T+6WDa5/6ocq37dCoerKpwkwH+9OmCRuZDlA7tktW
78Ey3J/Zn266uwNuRg+nUePaWKhg9zO5qAPoD+r1NL5o4dAlJscfTHaA2IfY
RRvzl+Jw01uNb1cwQbQHqxC+mnjlTRMHRW8m8C8nLE9bp4FpgT7p/deZUKjD
3EzvU8cH1oZcDXjPBMc3KrXzS9Wwt1f36doZJjS0fXPF8arYBF1I0rbsBJMh
1T77zYtxKkty/qmLnXD2Zk+qm5IKtupc/DzyQyfkr0p+uIOvjA1qp17/UOiC
PPT53eJiJZzx924a/0gXXKcnCILOL8TVwRoRDrVd4MijE5c2KGKyWPrjN+Nu
aJ/c3easJI/nNUVVKuR2w5DeK+MzSBbr7zHe+VSzB55vsSiwtpyPZdSDurPL
e8AuEJnKMaVwhsHNtGM+LLi/KI7X+ksKpxfrvzp1iAVDtK25RV+k8JXP9o3R
/ix4pF8vt7VCCnvrimjeDmaBDKeZG50shf/s19VriWBBYwg/h2slhbObw6Vp
SSzwPaEiS8uQxJfC9rPgHQtio492R3tI4Em/1o/bTdjQrGS/OmqbBFbg65o1
m7LBqETrbCRI4DPV1HpfczaQbQ0y4YYS2OaNr/g/1mywst5gGiQugbm/JzQ7
drBhalbiX7eX4jggdlZFK4QNsZdztPSUxfFB8vrV8gI2xNxq8PrWKIrtRA5E
aK/gAN9qHu3MZ1E8ZeT+TduIA948K+NlWBQn+dSY667hwAbbIrHTT0VxZ07H
tnUbODAyeKFE7aoovnE6rC3KiQPh+4ymA6xF8TnHMfnsEA4EaSXkThSKYG2q
VOVwKQdyPM99d5uYQe0dq/YO2nJhScP0XQX2DKpYK6pr58SF1G1xXj8aZpCl
szczzYULyZaJPa7FM+jepztOOz25cF4ze8LFcwYtdbyWMh3GBR8mJpzLp1HE
rZTonZlcUA+Wvuh0agq50IQ5C0a5cI95Y6v0wSnUeqKaJT3NBUWvhTJ126ZQ
/A5DZVlxHkhvX5LiqDOFUu+22uko8GDM0KjE4eckaslW6U0x4EEL5UbfajyJ
EonDk4VePLh3Ns1kC38ceVqkxZTW8sBGrXm9F30cSRReMJb8zANepaLVSdo4
CnZSkvD/MZdPXHPKyxlHg/6z5sYkD7ixsX6iHuNIXiU4a+EID6zi/O6+qxlD
3eAUImvIh54bhqNbkkYRS7x3QjyTD2b56K3tmmH0ZbpyKS1JAAylVYKqpcMo
tTKrvDJFAFfi76mulR1G3ESR6VfZAqAHhoRrs4eQjG1DPu2pAKINlJdPZQ0h
W728qs3fBYCeHL7837whVO5eE1Gq2AvbK+ScV3T8ReuIV25+Wb3g+3X/H7nk
fiSM9hte/7EPHvl0jAyc60cZN2JOv/nZB729/otagvpRgoqf77a2PoiSC3XL
se5HUjV5NmH9faCV3X/9QCuFIvpAvW2JEM7nrQx4kC5E7eFSvsITQpCuXZNz
JFyIJOvqviZGC+Fel8UfEych6uIMyxKXhfBE18ENj/ahQw4Fy1wzhUAW+G/q
3NuHahcOeOylCcHycZayrkovulgf2xu2mIKP9fmugl4B0ql+VBq6jAJ3QfG1
lzQBcmlQMPZYRUGIUeWsXYQAqY197GBaU5Be2iwIbOIj67YI29cBFOj9aCNW
l/DRx8GHRT3HKCijuvyG4/godKHQmBdJwac1A/TLpny0DkulxiZQMPJCjvbo
Ng/9t2Kv7YUiCuKaFs0eD+EhbMv/u7GMAvkhDUuLLTx0Ul8krqqCAv31q8o+
9XNRiF1k2NCHuf09awU367hINanGofArBVZnNhCeuVx0ysyGWtBEwe4Kh/tc
Ny7y7uq8Q7ZTwKS70MsMuGinhP7zTT0UHBvbrXRuloOa0tR/W/AoGFPzcdlC
5yDxW5pP6vsouLQx4Or8ZxwUfYod2DdAgaJ36PuGKxzU/aaKlj5Mwf3okzMZ
BznIXPKZ/IcxClZkRW30N+cge2XxqZBJCl7WXIxYJc9B330cyy5Mz/WNRtc8
5LJRh9QdD9YMBVeyj/dpvGcjsYZAxptZCpBma8CePDZauz19bHaO/wcFIX3N

            "]]},
          Annotation[#, "Charting`Private`Tag#3"]& ]}, {}},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1]], 
               
               Line[{{-0.7069649824413078, 1.}, {-0.7067359274228248, 
                1.}, {-0.7021548270531452, 1.}, {-0.6929926263137862, 
                1.}, {-0.6838304255744272, 1.}, {-0.6655060240957091, 
                1.}, {-0.6471816226169912, 1.}, {-0.6105328196595552, 
                1.}, {-0.5738840167021192, 1.}, {-0.5005864107872472, 
                1.}, {-0.4272888048723752, 1.}, {-0.2636445544770039, 
                1.}, {-0.10000030408163266`, 1.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[1, 0.5, 0]], 
               Line[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcBlAvVcsAXbP/KM/fyo
/S3AQ2wF+yEG2z94JC8EUvstwEiD0aqTBts/hFOSEqT2LcCQVq0/dwfbP56x
WC9I7S3AvSvoPj8J2z/QbeVokNotwBGmE5fSDNs/Nub+2yC1LcC2t8/LBhTb
PwHXMcJBai3APJmzN6Yi2z+BtWAX68cswJHceyBgQ9s/dtVQclYwLMAtH9Mk
Q2PbP1x1r/66myvA9M8Y8dmD2z8sEtcTh/oqwFdlnc/JqNs/cfC/LhVkKsDs
Fn632czbP6DLcdIKwSnAQSPpPsr12z/BJpKn+SApwHNyCnEAINw/V8NzgqqL
KMCJy+SmUEncP9dcHubC6SfAF/puFWR43D/MN4pPnVInwICqnqSkptw/OKH1
nUxQJ8AzHv6sXqfcP6MKYez7TSfArhpU2hio3D963TeJWkknwHfHD6SNqdw/
KYPlwhdAJ8CxmPv0eKzcP4bOQDaSLSfA5Ntgllay3D8/ZfcchwgnwFrFKiYu
vtw/qs5iazYGJ8CYqwvj7L7cPxY4zrnlAyfAQ2xMxqu/3D/uCqVWRP8mwObY
GwAqwdw/nLBSkAH2JsCZ6TdCKMTcP/j7rQN84ybAoamgCizK3D9kZRlSK+Em
wL659zLtytw/z86EoNreJsDgNmqCrsvcP6ahWz052ibAawPRljHN3D9VRwl3
9tAmwH/C85Y50Nw/wLB0xaXOJsAG9nP5+9DcPywa4BNVzCbAxSpvg77R3D8E
7baws8cmwGe+Bg5E09w/cFYi/2LFJsDEPLsOB9TcP9u/jU0SwybAUPsaN8rU
3D9GKfmbwcAmwBMWMoeN1dw/spJk6nC+JsD8rQz/UNbcPxEg89btuybAan2a
QSXX3D9I23v+a7omwDjeQbOk19w/vGderg==
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 1, 0]], 
               Line[CompressedData["
1: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

                "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0.4222222240241885}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 1, 0]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[1, 0.5, 0]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0.4222222240241885}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[0, 1, 0]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0.5, 0]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[0, 0, 1]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]], 
           
           Line[{{-0.7069649824413078, 1.}, {-0.7067359274228248, 
            1.}, {-0.7021548270531452, 1.}, {-0.6929926263137862, 
            1.}, {-0.6838304255744272, 1.}, {-0.6655060240957091, 
            1.}, {-0.6471816226169912, 1.}, {-0.6105328196595552, 
            1.}, {-0.5738840167021192, 1.}, {-0.5005864107872472, 
            1.}, {-0.4272888048723752, 1.}, {-0.2636445544770039, 
            1.}, {-0.10000030408163266`, 1.}}]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Line[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcBlAvVcsAXbP/KM/fyo
/S3AQ2wF+yEG2z94JC8EUvstwEiD0aqTBts/hFOSEqT2LcCQVq0/dwfbP56x
WC9I7S3AvSvoPj8J2z/QbeVokNotwBGmE5fSDNs/Nub+2yC1LcC2t8/LBhTb
PwHXMcJBai3APJmzN6Yi2z+BtWAX68cswJHceyBgQ9s/dtVQclYwLMAtH9Mk
Q2PbP1x1r/66myvA9M8Y8dmD2z8sEtcTh/oqwFdlnc/JqNs/cfC/LhVkKsDs
Fn632czbP6DLcdIKwSnAQSPpPsr12z/BJpKn+SApwHNyCnEAINw/V8NzgqqL
KMCJy+SmUEncP9dcHubC6SfAF/puFWR43D/MN4pPnVInwICqnqSkptw/OKH1
nUxQJ8AzHv6sXqfcP6MKYez7TSfArhpU2hio3D963TeJWkknwHfHD6SNqdw/
KYPlwhdAJ8CxmPv0eKzcP4bOQDaSLSfA5Ntgllay3D8/ZfcchwgnwFrFKiYu
vtw/qs5iazYGJ8CYqwvj7L7cPxY4zrnlAyfAQ2xMxqu/3D/uCqVWRP8mwObY
GwAqwdw/nLBSkAH2JsCZ6TdCKMTcP/j7rQN84ybAoamgCizK3D9kZRlSK+Em
wL659zLtytw/z86EoNreJsDgNmqCrsvcP6ahWz052ibAawPRljHN3D9VRwl3
9tAmwH/C85Y50Nw/wLB0xaXOJsAG9nP5+9DcPywa4BNVzCbAxSpvg77R3D8E
7baws8cmwGe+Bg5E09w/cFYi/2LFJsDEPLsOB9TcP9u/jU0SwybAUPsaN8rU
3D9GKfmbwcAmwBMWMoeN1dw/spJk6nC+JsD8rQz/UNbcPxEg89btuybAan2a
QSXX3D9I23v+a7omwDjeQbOk19w/vGderg==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Line[CompressedData["
1:eJwVj3k0lW0bxc2JDJEQkfCoiJIo4SoyVIaiAamMhVIqSqjel0olGs0RWkJK
Gl5jdd/pVNJoyCmewzGcmfOQef58f+y112/tvfZaW8f/hHuQmIiIyLU5/d/v
pGjSd1QT+KBro/szOgnhT/99H1pFYK3JeS/G5/inpWIZp5zABSk69t9/k2BS
l3M/8BWBT2uwR/P/kJC8Z/W1zucEjlM4WH+2lQRhV03kwWcEVhm7/dq5jYQn
079dPR8T2Ounm8goSYJs4pFNvwrncgZ/11cGCaFqIwbuBQQOUwt8n9dOwsp1
yqLOuQROOqcs5cIk4VGwy0tIJfA/5vtkC7pJkBxpe/D6LoG7B5p9YnpICIwP
vbHxNoFF+yO/72KRoJuTELTuBoH3XdiqNMsmIbfpnapBHIGfEdJL9/NJyLQx
j5U/TmDU3+KgPkDC+BdacOJRAm9PfpgzMMeeXh57pEMIfGD5MtX6vySoRoQb
iwUSuK3JOTRmiIR7xY+Zw14Ediw6ntkxOvd/kbY9w57AJRIvVpbOkBDHnyf/
ZCmBH2h02QUuYAAn9qnYbg0CbwkZETGVY4CzgsfopBqBM/jn22bneLFZDnPH
IgK7DUrwshQYUHLe7KVAhsAnC+sO/1JiQLOin6fhmD5usSMHXdQZoG9Rnf+4
UR/bZ0dd30MwoC7+mEVxgj6uOe0ehDczYFQ9kyfH0sMuTbzR6hgGqK0x/3bU
Xg+3+PAiZCsZUJpwtzyxTBfXUfp/7v9lgDFZtUJZQRfHFx6qIM3aQfdUXq5P
1HK8+OKZ2sjIdhCTdM+T+6WDa5/6ocq37dCoerKpwkwH+9OmCRuZDlA7tktW
78Ey3J/Zn266uwNuRg+nUePaWKhg9zO5qAPoD+r1NL5o4dAlJscfTHaA2IfY
RRvzl+Jw01uNb1cwQbQHqxC+mnjlTRMHRW8m8C8nLE9bp4FpgT7p/deZUKjD
3EzvU8cH1oZcDXjPBMc3KrXzS9Wwt1f36doZJjS0fXPF8arYBF1I0rbsBJMh
1T77zYtxKkty/qmLnXD2Zk+qm5IKtupc/DzyQyfkr0p+uIOvjA1qp17/UOiC
PPT53eJiJZzx924a/0gXXKcnCILOL8TVwRoRDrVd4MijE5c2KGKyWPrjN+Nu
aJ/c3easJI/nNUVVKuR2w5DeK+MzSBbr7zHe+VSzB55vsSiwtpyPZdSDurPL
e8AuEJnKMaVwhsHNtGM+LLi/KI7X+ksKpxfrvzp1iAVDtK25RV+k8JXP9o3R
/ix4pF8vt7VCCnvrimjeDmaBDKeZG50shf/s19VriWBBYwg/h2slhbObw6Vp
SSzwPaEiS8uQxJfC9rPgHQtio492R3tI4Em/1o/bTdjQrGS/OmqbBFbg65o1
m7LBqETrbCRI4DPV1HpfczaQbQ0y4YYS2OaNr/g/1mywst5gGiQugbm/JzQ7
drBhalbiX7eX4jggdlZFK4QNsZdztPSUxfFB8vrV8gI2xNxq8PrWKIrtRA5E
aK/gAN9qHu3MZ1E8ZeT+TduIA948K+NlWBQn+dSY667hwAbbIrHTT0VxZ07H
tnUbODAyeKFE7aoovnE6rC3KiQPh+4ymA6xF8TnHMfnsEA4EaSXkThSKYG2q
VOVwKQdyPM99d5uYQe0dq/YO2nJhScP0XQX2DKpYK6pr58SF1G1xXj8aZpCl
szczzYULyZaJPa7FM+jepztOOz25cF4ze8LFcwYtdbyWMh3GBR8mJpzLp1HE
rZTonZlcUA+Wvuh0agq50IQ5C0a5cI95Y6v0wSnUeqKaJT3NBUWvhTJ126ZQ
/A5DZVlxHkhvX5LiqDOFUu+22uko8GDM0KjE4eckaslW6U0x4EEL5UbfajyJ
EonDk4VePLh3Ns1kC38ceVqkxZTW8sBGrXm9F30cSRReMJb8zANepaLVSdo4
CnZSkvD/MZdPXHPKyxlHg/6z5sYkD7ixsX6iHuNIXiU4a+EID6zi/O6+qxlD
3eAUImvIh54bhqNbkkYRS7x3QjyTD2b56K3tmmH0ZbpyKS1JAAylVYKqpcMo
tTKrvDJFAFfi76mulR1G3ESR6VfZAqAHhoRrs4eQjG1DPu2pAKINlJdPZQ0h
W728qs3fBYCeHL7837whVO5eE1Gq2AvbK+ScV3T8ReuIV25+Wb3g+3X/H7nk
fiSM9hte/7EPHvl0jAyc60cZN2JOv/nZB729/otagvpRgoqf77a2PoiSC3XL
se5HUjV5NmH9faCV3X/9QCuFIvpAvW2JEM7nrQx4kC5E7eFSvsITQpCuXZNz
JFyIJOvqviZGC+Fel8UfEych6uIMyxKXhfBE18ENj/ahQw4Fy1wzhUAW+G/q
3NuHahcOeOylCcHycZayrkovulgf2xu2mIKP9fmugl4B0ql+VBq6jAJ3QfG1
lzQBcmlQMPZYRUGIUeWsXYQAqY197GBaU5Be2iwIbOIj67YI29cBFOj9aCNW
l/DRx8GHRT3HKCijuvyG4/godKHQmBdJwac1A/TLpny0DkulxiZQMPJCjvbo
Ng/9t2Kv7YUiCuKaFs0eD+EhbMv/u7GMAvkhDUuLLTx0Ul8krqqCAv31q8o+
9XNRiF1k2NCHuf09awU367hINanGofArBVZnNhCeuVx0ysyGWtBEwe4Kh/tc
Ny7y7uq8Q7ZTwKS70MsMuGinhP7zTT0UHBvbrXRuloOa0tR/W/AoGFPzcdlC
5yDxW5pP6vsouLQx4Or8ZxwUfYod2DdAgaJ36PuGKxzU/aaKlj5Mwf3okzMZ
BznIXPKZ/IcxClZkRW30N+cge2XxqZBJCl7WXIxYJc9B330cyy5Mz/WNRtc8
5LJRh9QdD9YMBVeyj/dpvGcjsYZAxptZCpBma8CePDZauz19bHaO/wcFIX3N

            "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0.4222222240241885}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\)(z) = 1\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\)(z) = \
-\\!\\(\\*FractionBox[SqrtBox[\\(1 + 2\\\\  z + \
\\*SqrtBox[\\(\\(-\\((\\(-3\\) + 2\\\\  z)\\)\\)\\\\  \\((1 + 2\\\\  \
z)\\)\\\\  \\((\\(-5\\) + 8\\\\  z)\\)\\)]\\)], \\(2\\\\  \\*SqrtBox[\\(2\\)]\
\\\\  z\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\)(z) = \
\\!\\(\\*FractionBox[\\(\\(-4\\) + z\\), \\(3\\\\  z\\)]\\)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.3, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.4222222240241885},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]], 
           
           Line[{{-0.7069649824413078, 1.}, {-0.7067359274228248, 
            1.}, {-0.7021548270531452, 1.}, {-0.6929926263137862, 
            1.}, {-0.6838304255744272, 1.}, {-0.6655060240957091, 
            1.}, {-0.6471816226169912, 1.}, {-0.6105328196595552, 
            1.}, {-0.5738840167021192, 1.}, {-0.5005864107872472, 
            1.}, {-0.4272888048723752, 1.}, {-0.2636445544770039, 
            1.}, {-0.10000030408163266`, 1.}}]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Line[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcBlAvVcsAXbP/KM/fyo
/S3AQ2wF+yEG2z94JC8EUvstwEiD0aqTBts/hFOSEqT2LcCQVq0/dwfbP56x
WC9I7S3AvSvoPj8J2z/QbeVokNotwBGmE5fSDNs/Nub+2yC1LcC2t8/LBhTb
PwHXMcJBai3APJmzN6Yi2z+BtWAX68cswJHceyBgQ9s/dtVQclYwLMAtH9Mk
Q2PbP1x1r/66myvA9M8Y8dmD2z8sEtcTh/oqwFdlnc/JqNs/cfC/LhVkKsDs
Fn632czbP6DLcdIKwSnAQSPpPsr12z/BJpKn+SApwHNyCnEAINw/V8NzgqqL
KMCJy+SmUEncP9dcHubC6SfAF/puFWR43D/MN4pPnVInwICqnqSkptw/OKH1
nUxQJ8AzHv6sXqfcP6MKYez7TSfArhpU2hio3D963TeJWkknwHfHD6SNqdw/
KYPlwhdAJ8CxmPv0eKzcP4bOQDaSLSfA5Ntgllay3D8/ZfcchwgnwFrFKiYu
vtw/qs5iazYGJ8CYqwvj7L7cPxY4zrnlAyfAQ2xMxqu/3D/uCqVWRP8mwObY
GwAqwdw/nLBSkAH2JsCZ6TdCKMTcP/j7rQN84ybAoamgCizK3D9kZRlSK+Em
wL659zLtytw/z86EoNreJsDgNmqCrsvcP6ahWz052ibAawPRljHN3D9VRwl3
9tAmwH/C85Y50Nw/wLB0xaXOJsAG9nP5+9DcPywa4BNVzCbAxSpvg77R3D8E
7baws8cmwGe+Bg5E09w/cFYi/2LFJsDEPLsOB9TcP9u/jU0SwybAUPsaN8rU
3D9GKfmbwcAmwBMWMoeN1dw/spJk6nC+JsD8rQz/UNbcPxEg89btuybAan2a
QSXX3D9I23v+a7omwDjeQbOk19w/vGderg==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Line[CompressedData["
1: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

            "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0.4222222240241885}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"], {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.4222222240241885}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.4222222240241876}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0, 0, 1], 
        RGBColor[0, 1, 0], 
        RGBColor[1, 0.5, 0]}, {
       "\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(z) = 1", 
        "\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)(z) = \
-\!\(\*FractionBox[SqrtBox[\(1 + 2\\  z + \*SqrtBox[\(\(-\((\(-3\) + 2\\  \
z)\)\)\\  \((1 + 2\\  z)\)\\  \((\(-5\) + 8\\  z)\)\)]\)], \(2\\  \
\*SqrtBox[\(2\)]\\  z\)]\)", 
        "\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)(z) = \
\!\(\*FractionBox[\(\(-4\) + z\), \(3\\  z\)]\)"}, LabelStyle -> {}, 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.3, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.926333210549111*^9, {3.9289884830313945`*^9, 3.9289885053127403`*^9}, 
   3.928988554777555*^9, {3.928988588118391*^9, 3.928988611707464*^9}, 
   3.928988757734061*^9, 3.9429029423021336`*^9, 3.9429030340072327`*^9, 
   3.942903067476868*^9, 3.942903696369236*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"d152800c-e7e9-4e42-ba80-ee578bb54f25"]
}, Open  ]],

Cell[TextData[{
 "La conclusi\[OAcute]n es que para ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], ",", "0"}]}]}], TraditionalForm]],ExpressionUUID->
  "aa50b07d-afa2-4434-8295-7019ef583249"],
 "] la distancia m\[IAcute]nima es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "z"], "=", "1"}], ","}], TraditionalForm]],
  ExpressionUUID->"aebf423f-5684-40f8-be55-b9b09ea92d2b"],
 " lo cual se obtiene con \[Theta]=0, para ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "10"}], "-", 
         RowBox[{"9", " ", 
          SqrtBox["2"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "5c4f003c-9f3e-4e53-8875-4f805d30cf0d"],
 ", la distancia m\[IAcute]nima se obtiene cuando \[Theta]=",
 Cell[BoxData[
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{"4", "-", 
       RowBox[{"2", " ", "z"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "15"}], "+", 
         RowBox[{"4", " ", "z"}], "+", 
         RowBox[{"52", " ", 
          SuperscriptBox["z", "2"]}], "-", 
         RowBox[{"32", " ", 
          SuperscriptBox["z", "3"]}]}]]}], 
      RowBox[{
       RowBox[{"-", "31"}], "+", 
       RowBox[{"20", " ", "z"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"]}]}]]], "]"}]}]],
  CellChangeTimes->{
   3.925203538973412*^9, {3.925203613366164*^9, 3.92520361781327*^9}, {
    3.925204215361866*^9, 3.925204219648271*^9}},ExpressionUUID->
  "7a08dd5f-1336-41c9-9406-3ae9c707d13b"],
 ", y para  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "10"}], "-", 
         RowBox[{"9", " ", 
          SqrtBox["2"]}]}], ")"}]}]}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"eeee9a3a-b93c-42da-9ec4-aa455a68848a"],
 ", el valor m\[IAcute]nimo se alcanza para \[Theta]=Pi."
}], "Text",
 CellChangeTimes->{{3.925205107643602*^9, 3.9252051274632607`*^9}, {
   3.925205157974842*^9, 3.9252052084844446`*^9}, {3.925205852252807*^9, 
   3.925205930060981*^9}, {3.925209438154925*^9, 3.9252094995719557`*^9}, {
   3.926054588240038*^9, 3.926054605068334*^9}, 3.927786299737319*^9, {
   3.9279794902110558`*^9, 
   3.927979493933814*^9}},ExpressionUUID->"79aa8354-e659-4559-bd65-\
9bf90ab643b1"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.9429034967980175`*^9},ExpressionUUID->"c9f477d1-416e-c746-8570-\
132a7b4da5ba"],

Cell[TextData[{
 "C\[AAcute]lculo de las ",
 StyleBox["derivadas",
  FontWeight->"Bold"],
 " de estas funciones"
}], "Text",
 CellChangeTimes->{{3.9429034997187138`*^9, 
  3.942903506621031*^9}},ExpressionUUID->"14a12146-8b97-f145-a7ce-\
0a6f6e5bbc64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"1", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.9429035139013577`*^9, 3.94290352589835*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"0ff28cd6-a5ac-7d44-b484-c9dfe86667f0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.94290352663056*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b327e61c-9298-6848-a559-cce88c2785cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "z"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "z"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "z"}]]}], ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9429035291563034`*^9, 3.9429035524620037`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"0c6e2873-d6d4-4949-b13f-21f5de37457b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "15"}], "+", 
   RowBox[{"26", " ", 
    SuperscriptBox["z", "2"]}], "-", 
   RowBox[{"8", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "15"}], "+", 
     RowBox[{"4", " ", "z"}], "+", 
     RowBox[{"52", " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"32", " ", 
      SuperscriptBox["z", "3"]}]}]], "+", 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "15"}], "+", 
        RowBox[{"4", " ", "z"}], "+", 
        RowBox[{"52", " ", 
         SuperscriptBox["z", "2"]}], "-", 
        RowBox[{"32", " ", 
         SuperscriptBox["z", "3"]}]}]]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["z", "2"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "30"}], "+", 
     RowBox[{"8", " ", "z"}], "+", 
     RowBox[{"104", " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"64", " ", 
      SuperscriptBox["z", "3"]}]}]], " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "z"}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "15"}], "+", 
       RowBox[{"4", " ", "z"}], "+", 
       RowBox[{"52", " ", 
        SuperscriptBox["z", "2"]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["z", "3"]}]}]]}]]}]]], "Output",
 CellChangeTimes->{{3.9429035413343925`*^9, 3.942903553376465*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"cd4b16b1-4503-d144-94a8-333ee7419e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "4"}], "+", "z"}], 
     RowBox[{"3", " ", "z"}]], ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.9429037678179264`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"37d92f1f-9cd6-0840-af97-539d6f46b452"],

Cell[BoxData[
 FractionBox["4", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"]}]]], "Output",
 CellChangeTimes->{3.942903768992378*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"74b35abf-4b5f-0c44-a180-ab3408895381"]
}, Open  ]],

Cell["Representaci\[OAcute]n gr\[AAcute]fica", "Text",
 CellChangeTimes->{{3.9429038053276615`*^9, 
  3.9429038107442303`*^9}},ExpressionUUID->"86bade3d-3bb9-534e-bc81-\
c96a43c8a1dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", ">=", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}], ",", "0"}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "<=", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"9", " ", 
            SqrtBox["2"]}]}], ")"}]}]}], ",", 
       FractionBox["4", 
        RowBox[{"3", " ", 
         SuperscriptBox["z", "2"]}]]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"9", " ", 
            SqrtBox["2"]}]}], ")"}]}], "\[LessEqual]", "z", "\[LessEqual]", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "15"}], "+", 
         RowBox[{"26", " ", 
          SuperscriptBox["z", "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "3"]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "15"}], "+", 
           RowBox[{"4", " ", "z"}], "+", 
           RowBox[{"52", " ", 
            SuperscriptBox["z", "2"]}], "-", 
           RowBox[{"32", " ", 
            SuperscriptBox["z", "3"]}]}]], "+", 
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "15"}], "+", 
              RowBox[{"4", " ", "z"}], "+", 
              RowBox[{"52", " ", 
               SuperscriptBox["z", "2"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["z", "3"]}]}]]}], ")"}]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "30"}], "+", 
           RowBox[{"8", " ", "z"}], "+", 
           RowBox[{"104", " ", 
            SuperscriptBox["z", "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["z", "3"]}]}]], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "15"}], "+", 
             RowBox[{"4", " ", "z"}], "+", 
             RowBox[{"52", " ", 
              SuperscriptBox["z", "2"]}], "-", 
             RowBox[{"32", " ", 
              SuperscriptBox["z", "3"]}]}]]}]]}]]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "15"}], ",", 
     RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Green", ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \
\(1\)]\)(z\!\(\*SuperscriptBox[\()\), \('\)]\) = 0\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)(z\!\(\*SuperscriptBox[\
\()\), \('\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)(z\!\(\*SuperscriptBox[\
\()\), \('\)]\) = \!\(\*FractionBox[\(4\), \(3\\\ \*SuperscriptBox[\(z\), \(2\
\)]\)]\)\>\""}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.7"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "  ", "Orange", ",", " ", "Green"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.942903835914055*^9, 3.9429039404620247`*^9}, 
   3.942904283394882*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"1d270590-783f-e947-963c-b9660a9b6db2"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
           LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQ3Sf6gK10/rP9DFCQz/ds5ZS5CH5EfWwabwWC7/jh
ilJbEIKvlehz/58Ogv/HyTriw8OncP7TzZtEMvcg+OdUtC4+nIbgL2CT9Lrs
jeC7nvpmvW3rEzhfzzrvh94EBF9izdMty7MQ/Fe9V3RnyiP4fYGb5Gs6H8P5
12/kMjvFPoLzD3g+3b/LHMFftSumxlgIwa+Z4/1V5fhDOF8hQfM5uyGC/+f9
fyC4D+d/e71dZXPEbUR4rL7x7SULgh+X9fOEwsZbcP7xF1a5fZwI/oyne7dm
7roB51vdP+ymIHMNzq+9dD6j9/4FOH/TxA9WR7oR/GcBgry/zRH8OfOWJl1U
OA/n281Y/bm96Qyc39S9XfSr63FE+HH+3Jk07xicH9xhFXfh21E4X6V177LV
y4/A+cfqDpsncR5CxM9fljvnEw/C+dOr3Rpsdx2A889/mDTR8No+RHy/Fb3F
074Xzi94NUPphfkeRPp6Lp19+MUuOF/oybzN82buhPMBRZLPtw==
            "]]},
          Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[2], Opacity[1.], 
           LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcAwDVGxyEV4P/KM/fyo
/S3AjKA4YJJJeD94JC8EUvstwMfFLfJcTXg/hFOSEqT2LcBkg1zA9FR4P56x
WC9I7S3AsQuUDS9keD/QbeVokNotwKTiCKrOgng/Nub+2yC1LcBg6r/lu8B4
PwHXMcJBai3AIurVnF4/eT+BtWAX68cswAQRRQFTX3o/dtVQclYwLMC5jmnO
7X17P1x1r/66myvA5b9fawCpfD8sEtcTh/oqwKTkv9l/A34/cfC/LhVkKsAQ
QTi1gF1/P6DLcdIKwSnAUxic/MR3gD/BJpKn+SApwGL0d+osTIE/V8NzgqqL
KMBEWVuWHSGCP9dcHubC6SfAONkKVNoZgz/MN4pPnVInwAhpiJuPFIQ/OKH1
nUxQJ8DA5eXKjBiEP6MKYez7TSfA7TSsKoschD963TeJWkknwPisV32LJIQ/
KYPlwhdAJ8Bw5nV8mjSEP4bOQDaSLSfAS/31TPJUhD8/ZfcchwgnwCv73ZyM
loQ/qs5iazYGJ8A/SnrIsJqEPxY4zrnlAyfA7PwXNNaehD/uCqVWRP8mwHQp
W80kp4Q/nLBSkAH2JsDCHigW0beEP/j7rQN84ybADW7vcmbZhD9kZRlSK+Em
wB2tldue3YQ/z86EoNreJsA5fGmM2OGEP6ahWz052ibAXOutyE/qhD9VRwl3
9tAmwES4RbpN+4Q/wLB0xaXOJsBiTfJykP+EPywa4BNVzCbApZT7d9QDhT8E
7baws8cmwITZQGlgDIU/cFYi/2LFJsDh0otWqBCFP9u/jU0SwybAPHZRkvEU
hT9GKfmbwcAmwATuGR08GYU/spJk6nC+JsD1qW33hx2FPxEg89btuybACTBK
zDIihT9I23v+a7omwLGOmXAAJYU/dh5Ndg==
            "]]},
          Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[
          {RGBColor[0, 1, 0], AbsoluteThickness[2], Opacity[1.], 
           LineBox[CompressedData["
1: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
Cf4HY8j3iA==
            "]]},
          Annotation[#, "Charting`Private`Tag#3"]& ]}, {}},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGDQBmIQ3Sf6gK10/rP9DFCQz/ds5ZS5CH5EfWwabwWC7/jh
ilJbEIKvlehz/58Ogv/HyTriw8OncP7TzZtEMvcg+OdUtC4+nIbgL2CT9Lrs
jeC7nvpmvW3rEzhfzzrvh94EBF9izdMty7MQ/Fe9V3RnyiP4fYGb5Gs6H8P5
12/kMjvFPoLzD3g+3b/LHMFftSumxlgIwa+Z4/1V5fhDOF8hQfM5uyGC/+f9
fyC4D+d/e71dZXPEbUR4rL7x7SULgh+X9fOEwsZbcP7xF1a5fZwI/oyne7dm
7roB51vdP+ymIHMNzq+9dD6j9/4FOH/TxA9WR7oR/GcBgry/zRH8OfOWJl1U
OA/n281Y/bm96Qyc39S9XfSr63FE+HH+3Jk07xicH9xhFXfh21E4X6V177LV
y4/A+cfqDpsncR5CxM9fljvnEw/C+dOr3Rpsdx2A889/mDTR8No+RHy/Fb3F
074Xzi94NUPphfkeRPp6Lp19+MUuOF/oybzN82buhPMBRZLPtw==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[1, 0.5, 0]], 
               Line[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcAwDVGxyEV4P/KM/fyo
/S3AjKA4YJJJeD94JC8EUvstwMfFLfJcTXg/hFOSEqT2LcBkg1zA9FR4P56x
WC9I7S3AsQuUDS9keD/QbeVokNotwKTiCKrOgng/Nub+2yC1LcBg6r/lu8B4
PwHXMcJBai3AIurVnF4/eT+BtWAX68cswAQRRQFTX3o/dtVQclYwLMC5jmnO
7X17P1x1r/66myvA5b9fawCpfD8sEtcTh/oqwKTkv9l/A34/cfC/LhVkKsAQ
QTi1gF1/P6DLcdIKwSnAUxic/MR3gD/BJpKn+SApwGL0d+osTIE/V8NzgqqL
KMBEWVuWHSGCP9dcHubC6SfAONkKVNoZgz/MN4pPnVInwAhpiJuPFIQ/OKH1
nUxQJ8DA5eXKjBiEP6MKYez7TSfA7TSsKoschD963TeJWkknwPisV32LJIQ/
KYPlwhdAJ8Bw5nV8mjSEP4bOQDaSLSfAS/31TPJUhD8/ZfcchwgnwCv73ZyM
loQ/qs5iazYGJ8A/SnrIsJqEPxY4zrnlAyfA7PwXNNaehD/uCqVWRP8mwHQp
W80kp4Q/nLBSkAH2JsDCHigW0beEP/j7rQN84ybADW7vcmbZhD9kZRlSK+Em
wB2tldue3YQ/z86EoNreJsA5fGmM2OGEP6ahWz052ibAXOutyE/qhD9VRwl3
9tAmwES4RbpN+4Q/wLB0xaXOJsBiTfJykP+EPywa4BNVzCbApZT7d9QDhT8E
7baws8cmwITZQGlgDIU/cFYi/2LFJsDh0otWqBCFP9u/jU0SwybAPHZRkvEU
hT9GKfmbwcAmwATuGR08GYU/spJk6nC+JsD1qW33hx2FPxEg89btuybACTBK
zDIihT9I23v+a7omwLGOmXAAJYU/dh5Ndg==
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 1, 0]], 
               Line[CompressedData["
1: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
Cf4HY8j3iA==
                "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 1, 0]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[1, 0.5, 0]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[0, 1, 0]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0.5, 0]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[0, 0, 1]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGDQBmIQ3Sf6gK10/rP9DFCQz/ds5ZS5CH5EfWwabwWC7/jh
ilJbEIKvlehz/58Ogv/HyTriw8OncP7TzZtEMvcg+OdUtC4+nIbgL2CT9Lrs
jeC7nvpmvW3rEzhfzzrvh94EBF9izdMty7MQ/Fe9V3RnyiP4fYGb5Gs6H8P5
12/kMjvFPoLzD3g+3b/LHMFftSumxlgIwa+Z4/1V5fhDOF8hQfM5uyGC/+f9
fyC4D+d/e71dZXPEbUR4rL7x7SULgh+X9fOEwsZbcP7xF1a5fZwI/oyne7dm
7roB51vdP+ymIHMNzq+9dD6j9/4FOH/TxA9WR7oR/GcBgry/zRH8OfOWJl1U
OA/n281Y/bm96Qyc39S9XfSr63FE+HH+3Jk07xicH9xhFXfh21E4X6V177LV
y4/A+cfqDpsncR5CxM9fljvnEw/C+dOr3Rpsdx2A889/mDTR8No+RHy/Fb3F
074Xzi94NUPphfkeRPp6Lp19+MUuOF/oybzN82buhPMBRZLPtw==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Line[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcAwDVGxyEV4P/KM/fyo
/S3AjKA4YJJJeD94JC8EUvstwMfFLfJcTXg/hFOSEqT2LcBkg1zA9FR4P56x
WC9I7S3AsQuUDS9keD/QbeVokNotwKTiCKrOgng/Nub+2yC1LcBg6r/lu8B4
PwHXMcJBai3AIurVnF4/eT+BtWAX68cswAQRRQFTX3o/dtVQclYwLMC5jmnO
7X17P1x1r/66myvA5b9fawCpfD8sEtcTh/oqwKTkv9l/A34/cfC/LhVkKsAQ
QTi1gF1/P6DLcdIKwSnAUxic/MR3gD/BJpKn+SApwGL0d+osTIE/V8NzgqqL
KMBEWVuWHSGCP9dcHubC6SfAONkKVNoZgz/MN4pPnVInwAhpiJuPFIQ/OKH1
nUxQJ8DA5eXKjBiEP6MKYez7TSfA7TSsKoschD963TeJWkknwPisV32LJIQ/
KYPlwhdAJ8Bw5nV8mjSEP4bOQDaSLSfAS/31TPJUhD8/ZfcchwgnwCv73ZyM
loQ/qs5iazYGJ8A/SnrIsJqEPxY4zrnlAyfA7PwXNNaehD/uCqVWRP8mwHQp
W80kp4Q/nLBSkAH2JsDCHigW0beEP/j7rQN84ybADW7vcmbZhD9kZRlSK+Em
wB2tldue3YQ/z86EoNreJsA5fGmM2OGEP6ahWz052ibAXOutyE/qhD9VRwl3
9tAmwES4RbpN+4Q/wLB0xaXOJsBiTfJykP+EPywa4BNVzCbApZT7d9QDhT8E
7baws8cmwITZQGlgDIU/cFYi/2LFJsDh0otWqBCFP9u/jU0SwybAPHZRkvEU
hT9GKfmbwcAmwATuGR08GYU/spJk6nC+JsD1qW33hx2FPxEg89btuybACTBK
zDIihT9I23v+a7omwLGOmXAAJYU/dh5Ndg==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Line[CompressedData["
1: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
Cf4HY8j3iA==
            "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)(z\\!\\(\\*SuperscriptBox[\\()\\), \\('\\)]\\) = 0\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(2\\)]\\)(z\\!\\(\\*SuperscriptBox[\\()\\), \\('\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(3\\)]\\)(z\\!\\(\\*SuperscriptBox[\\()\\), \\('\\)]\\) = \
\\!\\(\\*FractionBox[\\(4\\), \\(3\\\\ \\*SuperscriptBox[\\(z\\), \
\\(2\\)]\\)]\\)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.2, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGDQBmIQ3Sf6gK10/rP9DFCQz/ds5ZS5CH5EfWwabwWC7/jh
ilJbEIKvlehz/58Ogv/HyTriw8OncP7TzZtEMvcg+OdUtC4+nIbgL2CT9Lrs
jeC7nvpmvW3rEzhfzzrvh94EBF9izdMty7MQ/Fe9V3RnyiP4fYGb5Gs6H8P5
12/kMjvFPoLzD3g+3b/LHMFftSumxlgIwa+Z4/1V5fhDOF8hQfM5uyGC/+f9
fyC4D+d/e71dZXPEbUR4rL7x7SULgh+X9fOEwsZbcP7xF1a5fZwI/oyne7dm
7roB51vdP+ymIHMNzq+9dD6j9/4FOH/TxA9WR7oR/GcBgry/zRH8OfOWJl1U
OA/n281Y/bm96Qyc39S9XfSr63FE+HH+3Jk07xicH9xhFXfh21E4X6V177LV
y4/A+cfqDpsncR5CxM9fljvnEw/C+dOr3Rpsdx2A889/mDTR8No+RHy/Fb3F
074Xzi94NUPphfkeRPp6Lp19+MUuOF/oybzN82buhPMBRZLPtw==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Line[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAa/XL9f//LcAwDVGxyEV4P/KM/fyo
/S3AjKA4YJJJeD94JC8EUvstwMfFLfJcTXg/hFOSEqT2LcBkg1zA9FR4P56x
WC9I7S3AsQuUDS9keD/QbeVokNotwKTiCKrOgng/Nub+2yC1LcBg6r/lu8B4
PwHXMcJBai3AIurVnF4/eT+BtWAX68cswAQRRQFTX3o/dtVQclYwLMC5jmnO
7X17P1x1r/66myvA5b9fawCpfD8sEtcTh/oqwKTkv9l/A34/cfC/LhVkKsAQ
QTi1gF1/P6DLcdIKwSnAUxic/MR3gD/BJpKn+SApwGL0d+osTIE/V8NzgqqL
KMBEWVuWHSGCP9dcHubC6SfAONkKVNoZgz/MN4pPnVInwAhpiJuPFIQ/OKH1
nUxQJ8DA5eXKjBiEP6MKYez7TSfA7TSsKoschD963TeJWkknwPisV32LJIQ/
KYPlwhdAJ8Bw5nV8mjSEP4bOQDaSLSfAS/31TPJUhD8/ZfcchwgnwCv73ZyM
loQ/qs5iazYGJ8A/SnrIsJqEPxY4zrnlAyfA7PwXNNaehD/uCqVWRP8mwHQp
W80kp4Q/nLBSkAH2JsDCHigW0beEP/j7rQN84ybADW7vcmbZhD9kZRlSK+Em
wB2tldue3YQ/z86EoNreJsA5fGmM2OGEP6ahWz052ibAXOutyE/qhD9VRwl3
9tAmwES4RbpN+4Q/wLB0xaXOJsBiTfJykP+EPywa4BNVzCbApZT7d9QDhT8E
7baws8cmwITZQGlgDIU/cFYi/2LFJsDh0otWqBCFP9u/jU0SwybAPHZRkvEU
hT9GKfmbwcAmwATuGR08GYU/spJk6nC+JsD1qW33hx2FPxEg89btuybACTBK
zDIihT9I23v+a7omwLGOmXAAJYU/dh5Ndg==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Line[CompressedData["
1:eJwVlnc81f8Xx81wZXQjo5B1VZTIV+jqUGkIlSQiIZsKCSkpuSJSSnayZWRv
8X6bKetTEYWMyp7XVvHz++M8zuM8nq8/zvNx/jniljf0rZkYGBiWN+r//fnL
HZ2nyym4/uLu/5SkaeD89kGtQxkFn67OPKxHoQGhxps7XEzB3+o/JrrtpoF8
Y1ysVSEFJwxE98XI0SDkwt7AgTwKLmm/sVArT4OpwYpbZjkUrB746teEIg2y
/nXpGWVQsHT++bOaqjTgDLI91JFGwYKtfi1OVBo4CC7K6KdQcPPqFekooMHu
A1sZdeIp+HK6rc28Fg1S7XQLIJyC+zM4Dxbp04B1sfv1uxcUHHiz+/nwBRpY
PXQIVg2lYNWp9SZhYxpIxj2yPhC8kb/3uvPhFRrEf6kWkPGl4DJq9mVzJxpE
H1a+y32dgj8NH3U56k+DlaY6uyBHCj58QqjpYSANjIzPX2C33/C3KGOrD6aB
gJvzPiYrCq4yr9yj/YIGYekZ/QvGFPy1NEL8SvyGP5+YVq8WBYvt1hIvLKeB
7xgbd5YIBXe4+g5vnqHB8N23TAbbKXhz+bbX++dooMNzfumPIAUbMfNRLizS
YJtSXP9pPgr2DPBOiv9Lg0xvpYJxEgV/mfex0uTwh3ZeCyPZZWnssGh8NEPC
H6QPlidmfJbG2yljsdsN/aHxodPB9EfSeG6N5BeC/GFJKHqU67cU5lsUOhCT
+wgE9yu3OGpJYTcHI3e9nADIfvSiOChXEod1pmRUZgfCvp6yXVt5JPGJWW0U
8O0xSLomxJt6SuBskxAJBbZgYGLVT+DqEMdZGp4RM/ZP4LOAy5cSJXEsoeUe
RxoKAUGnc5xSr3fi04Wq7bZKz+Cp10LE9IoYvpdW4r1JOBQ6X3+U2t4kiu+X
DhbVsz4Hpvq7fKqJIjj2F0X/M/MLYPyF+SnmO3BWxDWBdaUwGKM9kog4sB0n
XKtxnnR5CWni/Rqdk0K4qvyzqQc9HE5U8tdwZAtiho+qS39iI+FTd4sefiiA
czgWP7SaRYP8vMCklsY2fJjbmBb/OBY8nv4KP0Pmxz4mBlfv/YiDxD0hSafH
tuL334XENFE8JKAP1dvSyZgofLTuYZcIDKXOa7bJZBxfajiqdCMRzHMFDpW9
JuO+lESRxVuJsDPButAknIy7WtbdaA8TIc6XMS3+IRk/5xvV7opLhFgt1eA9
ZmQccaWFSf9rIoQ3vTE8vJWM68OmufJPJsHjzkfj1t5b8Hbq8zUBajJ8Erhl
pe+5BaulpJUXHEsGQSPL3sM3t+Bik+jWC7rJkNpFbROw34Lr1xUE35olQ823
2fwPBlvwgTo89uZBMqx0m3jtlduC++zfXO9uTAa7fnmOhe+8mPzAqNPUNAVO
jHZS/FR48XdJp9ueUakQfWAup+EAL+4wuh2qmJQKE97cqhzyvLitltI3l5UK
z8lap0OkeTE/s5BqME6FnkP5NyLJvFhs6XYZ30gqDO4QcjH+xoMrSDGvglTS
QNnWNyxDkwfHlJtGn+xLgx9/DLp1yNzY/8cFngGtdPD1TLzPyMGNT3oW+14/
lw4yC9PSxetc+ByzzzrL5XRwnnrsLDbJhTk321J13dKBcQCz0t9zYctyo67T
Sekg1SC3P8KbC9dcyHAkMWeA/TMW2sDIZpxrXOnz9UMGzEsV7nNHnFgzgufj
Lo8ssFUI0bEo4sRlcWRZX/8s+K5u56CTyYk96a0xoy+zABvuSJWI4MRB80Zz
g4VZEBzgJ9J2nRNbyQq7PJjLAskJg827RDnxokNuqffNt6BfsDD67S4Jq+cr
ya7ey4Z61MZW70rCGa6trGrPskGlOV06146EU5W9zR8nZIPo78sW/gYkrJyU
OGFalw1j2xq6FOVIOL7ucX0TKQd8vcLfB3VzYGm3Dzt+RedAnubBFHU1Dizr
cUpC3yoXqJbXfrbv58CH/npX2V/LhQbfJHEnGQ48spD3NdA9F77X8sRF83Hg
3xGnU38G5ALL8ZHwpSl23ONmN7/2NhcMtaMC8pLYsc/F9G0/VnJhVf+PozQX
O652zfd7FpkHfjcVMt4xs2OGda++lsQ84A6zHTm/yoY9U5IU+d/mgWTHFyvf
YTYcXdy4WF2dBzoXsy73VbPhnUN/HF+O50GcyeUzUe5seMlvZE1eMx+OWiFF
rv5NmKfeWypyPh9i+XxHv3dswj/tI4J3MRbAfN2x+DdNm3COpVhrA1cBpEp/
5DpWsgl77/wuv1emAEjD7SNeIZuwtHRjcdKlAvhsPxY3Qt2EH3a1h2vXFYD5
DX7OuihWTLvhtUk0qRDKxLqqQ5+y4nR7dsewvEIgE9GeV2isOCKzKWA7LoS6
/TuHVp1ZcQ7/1YumvYUgQ99TrXCSFZ967yaWKVgEU24aHq8XWfC8ojA97HkR
3PVy/Ol1ngXvuXNj1TysGNrJWns9T7HgkTjL5Y7kYpDLFPW4BSy4gk8i1Kyo
GHq6P5GcZVkwoe3Nnfm1GKjqKorWzCxYc7NTipJwCfxdZ3lwpoAZZ4REOlBS
SuAuLU5Uaisz7mgXFnBtKoV2EU87cQ5mLPT8Z3r0j1KQKz6XL7rOhHkaB2W6
Z0uhZ4jluNA4EzYmOu8nC5YB9aTjNe5aJsyfFLRgalsGf0kq75ZdmXAVm9m5
AI5yuPPsk3HLZ0ac2/bw9ZxFBYxR2ercPzDi+Wure4bdK+DSKHXfTsyIhWWn
1OaDKkDlyBumm28ZsSwju79JcQUszt3LFAxgxIZbdWWubn4Hzhfl/l1VZ8TG
7f5XvCrfgbXoo/jVNAYcxOieOa9UBe0f35GS4xhwAAl4HXSr4JgH3U33JQN+
6/TCZs26CiSIy6fifRmwWdTVNL+IKuh/oETXusyAI6PM6jf/rYJLvweOhpIZ
sIvTtzzlJgRxRrdbz6yuIYZTVP+sagzCn/694BlaQ8npCh3qnzCEn/I1bvu0
hjKlpWV+92MIUQv6pZe+wW+mWbozVIP3jlerukZrqDnBhpKmUQ2m/ZiiU/wP
neu2QRb11SBkx+5z0vUvMt7NoQMDNRDWH3yM3ewvahbr2dU1VwO8xltIjaf+
Iv3P+ZlBm2qBXVv45Qnxv0ju64rKUblaWJaVyzxO/EGv22p8lz1r4ev0mc5j
+/6g0+HUjhiBOgjziJDXHFtB25eLZosd6uGwYPt/xp0rSODkE+/rPvUwWspL
dalbQSPHn3zXCNvgq4EnE+JWEAn6DZSr6mHk7l0LxvMrKHtQQc1mawNQfS1e
VFcsIz8BQfOhmgb4FSy7pPlkCX27E0F/qtwISomo6sj+BTRwaLBtn2MT9JL3
jJeJLCANt696GbQm8H8YJqDAuYD29faEK8U3QaeVvbPY0DwyjPePce1oAi+Z
rRJ/Y+ZRXlov9Z5GM6AsG1oR2zw6czbJgVGwBexEPuXJLcyhrpQ7NmuKLcAb
cuhH0uAcqpnbNbGi2wKWN3gPPq+cQ3of/jQPPWwBFsXykes351BqiPig43QL
aJdw6ezqoyP1Zy5z/rWtMCfj6fm6mY7CBa5xR/e2QmzkYPK2cjo6nDW2ErTU
CpO3S/6xvKQjkxo7UUbZNnhGtcgZ0KYjw/zYue6nbaDytqnbSIWOil4cTQp9
0wYDIsrshDQdlY3/jNpc3QaK6ySLKgY6StmnO3Vktg06qgvJMcWzaFZ067yI
DAH3FMWAnDyLjlAEas8rEkBJCnQMDJ1FQ2t030vqBHj6mdV5OM0iRtPHYoQ+
ATsXGmemjGdRMKnQSPUyAR+sD4jYnJhFzukrKna2BAifYHc3kJhFlsK/tUl3
CKgtcU1s4plF5wUmvrj7EeC0q7f1yL8ZpHIrIyfmCQGVHPkyCl0zyFJ+4Np6
HAE2XjsM3tTPIAbHrc7KaQRwj/vfFyuYQQ0DEQzbcggwbzb5xhUyg8QccoQq
KwlINe1bnL09g+i3bopw1BMwMWHJ99V6BvGtsuR2NhGg6D2kUH5uBpVu8ZKW
+Lzhw+VwJk59Bkn29PgMdBJQ9WrSyXf3DIp37nHg7iWAZZ/LYxv+GTS+m3ow
YYAA7ar5NG3GGSTR/rcj9DcBoq9mHl/+Po3iZtS+dI4QkFG5VC+dP412/nx3
1mGcAOUfawxTgdNo4qYsg8YkATVrrNRii2nUFz+148wUAXpiXB73VKeRCfWN
9ZON+Tvw5R/fMo26z2nxz2zkbcy3T3KPTiGDorhuxwkC6PcldnXiKfT7QXzH
/CgB3gm7r76OnEIesdN+94YIYK/ZH2frPIUOPGV+/2dj37DBg9/kT06hJcho
MuvZuBcz8C2LTSEekTFSVAcBWZLHz+ClSeRhpqwW00KAyjHdxwFtk0jv57DG
hToC6qwM6s+mTSJbxgnZ4jICztJMGIR8JtHY6aidWW8J6EmxPDRgOIkiBiP1
pOIJsGuwd0/fN4lkjnzqJ4USMD/knOeyaRKZflCf1L5PwH02zwnVHxPoj2Ls
1dZrBHDu8pFhKp5AhHDnqrcxAeEn/S0/PplAfYfJIppHCZCwf/LqufUEeumn
9vnfHgLUMmK2SvJPoEDt94dGh9ug4WOi3vjEODpoHMI4lN4G+uPpgQV146iB
Py9nyKYNfnDm1d2JHUeEzvEHqaJtYC9Xun7UbRz5PF6I7SFaYV4HqW3WGUdr
bNebD3m3wv1rDbfaJceRZt/EXlfJVojMbh+3+jKGEg3fJDCbtoBUWzdlb+YY
ukf9dit+shlypwctFnzH0M8WS/kIj2ag8o7FVl4aQwHqz9Y8V5rg/f7ZTpri
GOqnN0+3uTaB/rllsh5pDKXvuXlF9OdH+OGyrrttcBRNdH0w/3HqIyzmc9Wl
ho4i+tkT/64tN4LvF7716/ajqHiJupMJGoF7frvaQc1RNObCr/H09nuI5pO8
tS44iiI5evsupTWA9H97ct/PjKD9b88devW+HnIvKIw/bRxBZ/Krxe9/qwOq
uwrFKH4EBW52yxfpqQWDkuOxI2dGkOErimF0TjX0d+p25sqMoKuHYnvP3cPg
tGxAvr0+jB7MjmcPulbBsqCprmbnMJoiRxoYoQrwU70awJEzjBSMDtP/6ysF
3ksOtZ/8h1FSb+6iS1sRxHq5rEWZbfDPm1hrgvOhoMLHbQ/3MArLjk3l2fiX
Y+WW9ieNDCFXusmJ2ZY48H91fXJ77RAar/gpVW0dAmjH96sXEobQTBXxTLRE
Cf4HY8j3iA==
            "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"], {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0, 0, 1], 
        RGBColor[0, 1, 0], 
        RGBColor[1, 0.5, 0]}, {
       "\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)(z\!\(\*SuperscriptBox[\()\), \
\('\)]\) = 0", 
        "\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)(z\!\(\*SuperscriptBox[\()\), \
\('\)]\)", 
        "\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)(z\!\(\*SuperscriptBox[\()\), \
\('\)]\) = \!\(\*FractionBox[\(4\), \(3\\ \*SuperscriptBox[\(z\), \
\(2\)]\)]\)"}, LabelStyle -> {}, LegendLayout -> "Column"]], {0.2, 0.7}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.942903942369648*^9, 3.9429042863736*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"d99eaa55-4b5a-0b43-842f-2f67c08c0c63"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.927786425921367*^9},ExpressionUUID->"dcc8149c-060d-4c46-afb6-\
8ea94ed0953b"],

Cell[TextData[{
 "Comprobaci\[OAcute]n de que la ",
 StyleBox["funci\[OAcute]n de m\[IAcute]nimos es continua ",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.927795384993193*^9, 
  3.927795408562345*^9}},ExpressionUUID->"688b7cbf-610f-4e00-84e6-\
abee95a3d803"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "z_", "]"}], ":=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", "z_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"2", "z"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", "z"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", "z"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"8", "z"}]}], ")"}]}]]}]]}], 
    RowBox[{"2", "z", 
     SqrtBox["2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f3", "[", "z_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", "z"}], 
    RowBox[{"3", "z"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   FractionBox[
    RowBox[{"-", "1"}], 
    SqrtBox["2"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "10"}], "-", 
      RowBox[{"9", 
       SqrtBox["2"]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.926326563013152*^9, 3.926326700540601*^9}, {
  3.926326746841129*^9, 3.926326757197349*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"88e0bfd9-1c42-4495-9f36-b9a77a8a8358"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"f2", "[", "p1", "]"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Esto", " ", "indica", " ", "que", " ", "es", " ", "continua", " ", "la", 
    " ", "funci\[OAcute]n", " ", "de", " ", "m\[IAcute]nimos"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.927794972553925*^9, 3.927794987238713*^9}, {
  3.927795120658866*^9, 
  3.9277951340677457`*^9}},ExpressionUUID->"a196a4bf-3eea-4d53-bca8-\
b6d87ece63f3"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.927794980935848*^9, 3.92779498780168*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"b9fbff56-dd50-4e58-a86f-95568b649907"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"f2", "[", "p2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.927795002945669*^9, 3.927795011117262*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"37f70627-dab7-429d-a82d-d9b88ee410a1"],

Cell[BoxData["0.45066331446700447`"], "Output",
 CellChangeTimes->{{3.927795003682564*^9, 3.927795012843874*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"be32bf6b-d129-458c-94aa-cfe87447bf3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"f3", "[", "p2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9269984006134925`*^9, 3.926998415732312*^9}, {
  3.92779501591048*^9, 3.927795018340143*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6eb8a303-111c-4462-9c64-2a4de69543e4"],

Cell[BoxData["0.4506633144670046`"], "Output",
 CellChangeTimes->{{3.926998408069565*^9, 3.9269984161877384`*^9}, 
   3.927795018836905*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"93a0a89c-6dfb-4958-bd61-732ab3a40be9"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.927982149642188*^9},ExpressionUUID->"c1068efa-4bf9-45f7-99e2-\
f072ab37441a"],

Cell[TextData[{
 "La comprobaci\[OAcute]n de que la ",
 StyleBox["funci\[OAcute]n de m\[IAcute]nimos es no decreciente",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.92649991658923*^9, 
  3.926499934242658*^9}},ExpressionUUID->"c35253d5-a736-48c7-8ba8-\
aba7236d41f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}]]}], ",", "z"}], "]"}], "\[Equal]", "0"}], 
    ",", "z"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "El", " ", "\[UAcute]nico", " ", "punto", " ", "con", " ", "pendiente", 
    " ", "nula", " ", "es", " ", "el", " ", "extremo"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.926499938424635*^9, 3.926499962444987*^9}, {
  3.926499992889843*^9, 
  3.9265000095591326`*^9}},ExpressionUUID->"6171d836-e394-4cff-a425-\
6ca01dd83867"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.926499963515641*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ae4384de-30b9-4147-ab98-6babf2169a6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "z"}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"8", " ", "z"}]}], ")"}]}]]}]], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}]]}], ",", "z"}], "]"}], ">", "0"}], "&&", 
    RowBox[{"z", "<", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "En", " ", "su", " ", "dominio", " ", "es", " ", "creciente", " ", "al", 
    " ", "ser", " ", "la", " ", "primera", " ", "derivada", " ", "positiva"}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.926500055205974*^9, 
  3.9265001019199986`*^9}},ExpressionUUID->"5bb2fa3c-a0d5-4257-854d-\
45a25e335e3a"],

Cell[BoxData[
 RowBox[{"z", "<", 
  RowBox[{"-", 
   FractionBox["1", 
    SqrtBox["2"]]}]}]], "Output",
 CellChangeTimes->{{3.92650006891558*^9, 3.9265000810278444`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"0da1a833-9a57-4ba5-b24f-99fed65a737e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}], 
        RowBox[{"3", " ", "z"}]], ",", "z"}], "]"}], "\[Equal]", "0"}], ",", 
    "z"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Nunca", " ", "ocurre", " ", "que", " ", "se", " ", "anule"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.926500013360411*^9, 
  3.926500045088884*^9}},ExpressionUUID->"dc467504-2fdf-4f6c-bb89-\
3fdb5d2577c1"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.926500026318665*^9, 3.9265000315625844`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"84ded5bc-6c54-4953-9f23-969e7c7a04db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}], 
        RowBox[{"3", " ", "z"}]], ",", "z"}], "]"}], ">", "0"}], "&&", 
    RowBox[{"z", "<", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "En", " ", "su", " ", "dominio", " ", "es", " ", "creciente", " ", "al", 
    " ", "ser", " ", "la", " ", "primera", " ", "derivada", " ", "positiva"}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.926500106269562*^9, 
  3.9265001370960813`*^9}},ExpressionUUID->"5666d458-5be1-4fd9-9771-\
2585211d069b"],

Cell[BoxData[
 RowBox[{"z", "<", "0"}]], "Output",
 CellChangeTimes->{3.926500125010706*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3ae3908f-34d7-4733-bc01-b0b84f52da46"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.927887726524517*^9},ExpressionUUID->"682a9bed-9dfd-4d05-b84f-\
c71b0125aa01"],

Cell[TextData[{
 "C\[AAcute]lculo de las",
 StyleBox[" inversas de las funciones que forman la funci\[OAcute]n de m\
\[IAcute]nimos",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.927887696120307*^9, 
  3.92788771775156*^9}},ExpressionUUID->"ddf864d3-d094-4189-ae77-\
05a9c0fa1dfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f2", "[", "z", "]"}], "\[Equal]", "r"}], "&&", 
    RowBox[{"z", "<", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox["3", "31"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"]}]}], ")"}]}], "<", "r", "\[LessEqual]", "1"}]}], ",", 
   "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.9265045920405455`*^9, 3.926504735797209*^9}, {
   3.926504767788653*^9, 3.926504778719345*^9}, 3.928212298604663*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"00a5bced-95f3-4c73-84a7-add158c3026d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "31"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"12", " ", 
         SqrtBox["2"]}]}], ")"}]}], "<", "r", "<", "1"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"z", "\[Equal]", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}]}], ")"}], " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "4"], " ", 
            SuperscriptBox["#1", "4"]}]}], "&"}], ",", "1"}], "]"}]}], "||", 
      RowBox[{"z", "\[Equal]", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}]}], ")"}], " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "4"], " ", 
            SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}]}]}], 
     ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", "1"}], "&&", 
    RowBox[{"z", "\[Equal]", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.926504608928164*^9, 3.926504634695018*^9}, {
   3.9265046740021715`*^9, 3.926504707012443*^9}, 3.92650473709251*^9, 
   3.9265047791133776`*^9, 3.928212299648546*^9, 3.941692327498659*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"0d03028a-5e35-7e4c-9c57-cd5333168790"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Funciones", " ", "inversas", " ", "de", " ", "la", " ", "funci\[OAcute]n",
     " ", "del", " ", "segundo", " ", "tramo"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f21", "[", "r_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}]}], ")"}], " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "4"], " ", 
            SuperscriptBox["#1", "4"]}]}], "\[Equal]", "0"}], ",", "#1"}], 
        "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f22", "[", "r_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}]}], ")"}], " ", 
            SuperscriptBox["#1", "3"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "4"], " ", 
            SuperscriptBox["#1", "4"]}]}], "\[Equal]", "0"}], ",", "#1"}], 
        "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9265048430844436`*^9, 3.9265048950145435`*^9}, {
  3.926504981522148*^9, 3.926505021431359*^9}, {3.9265051044794*^9, 
  3.926505120374115*^9}, {3.926506176991441*^9, 3.9265061784505854`*^9}, {
  3.927002403400188*^9, 3.927002403620726*^9}, {3.941692228394535*^9, 
  3.9416922315395985`*^9}, {3.9416923431151466`*^9, 3.9416923561082115`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"af6ce7bc-4fa4-41d8-8c1e-e8ac9d50844a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f21", "[", "r", "]"}], ",", 
     RowBox[{"f22", "[", "r", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{
      FractionBox["3", "31"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"]}]}], ")"}]}], ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(f\), \(21\)]\)(r)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(f\), \(22\)]\)(r)\>\""}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.2"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9265053518757944`*^9, 3.926505423381301*^9}, {
   3.926506181944371*^9, 3.926506182750907*^9}, {3.927002416503983*^9, 
   3.927002416694468*^9}, 3.9282122562286315`*^9, {3.928212336242413*^9, 
   3.928212340186776*^9}, {3.928988852938017*^9, 3.9289889818312397`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"41035e70-4e55-4550-bf2a-bb96a978ebd9"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
           Opacity[1.], LineBox[CompressedData["
1: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

            "]]},
          Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
           Opacity[1.], LineBox[CompressedData["
1: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
34Z//uSg701a3PBFKf4P+H5U5w==
            "]]},
          Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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

                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
34Z//uSg701a3PBFKf4P+H5U5w==
                "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0.45066332567795836`, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0.45066332567795836`, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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

            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
34Z//uSg701a3PBFKf4P+H5U5w==
            "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0.45066332567795836`, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(21\\)]\\)(r)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(22\\)]\\)(r)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0.45066332567795836`, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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

            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
34Z//uSg701a3PBFKf4P+H5U5w==
            "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0.45066332567795836`, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"], {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0.45066332567795836`, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0.45066332567795736`, -11.363959944845437`}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0, 0, 1], 
        RGBColor[1, 0.5, 0]}, {
       "\!\(\*SubscriptBox[\(f\), \(21\)]\)(r)", 
        "\!\(\*SubscriptBox[\(f\), \(22\)]\)(r)"}, LabelStyle -> {}, 
       LegendLayout -> "Column"]], {0.8, 0.2}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.926505365777278*^9, {3.92650540051945*^9, 3.926505426141291*^9}, 
   3.9265063964460917`*^9, 3.9270024240113153`*^9, {3.928212325926642*^9, 
   3.928212341442507*^9}, 3.9282283746318407`*^9, {3.928988927076354*^9, 
   3.92898893590317*^9}, {3.928988977898093*^9, 3.9289889827295485`*^9}, 
   3.9416922385306835`*^9, 3.9416923605134377`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"94ea4f74-531a-9c4d-b40e-3bcc994ab747"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f21", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{
      FractionBox["3", "31"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"]}]}], ")"}]}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926505467922799*^9, 3.926505476518389*^9}, {
   3.926505545627858*^9, 3.9265055462145634`*^9}, 3.926506184819759*^9, {
   3.9270024200464077`*^9, 3.927002420191525*^9}, 3.928212259762968*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"ecf42a90-fa97-44ff-9fdd-ec1b5f72a971"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f22", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{
       FractionBox["3", "31"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]}], ")"}]}], ",", "1"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Se", " ", "ve", " ", "que", " ", "esta", " ", "funci\[OAcute]n"}], ",", 
    " ", 
    RowBox[{
    "para", " ", "los", " ", "valores", " ", "de", " ", "z", " ", "que", " ", 
     "devuelve", " ", "no", " ", "es", " ", "la", " ", "adecuada"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.92650561338865*^9, 3.926505640167653*^9}, 
   3.926506186573326*^9, 3.9282124222465143`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"8eb7647c-f121-4cc6-a096-eefeb4c1c32e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f3", "[", "z", "]"}], "\[Equal]", "r"}], ",", "z"}], "]"}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Funci\[OAcute]n", " ", "inversa", " ", "de", " ", "la", " ", 
    "funci\[OAcute]n", " ", "del", " ", "tercer", " ", "tramo"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.925206008302787*^9, {3.9265051623983154`*^9, 3.92650517955247*^9}, {
   3.926506409313*^9, 3.926506419707884*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6c4bdf2e-a983-4b4f-afca-09d93d7a9702"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["4", 
     RowBox[{"1", "-", 
      RowBox[{"3", " ", "r"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9265064121756973`*^9, 3.92650642257514*^9}, 
   3.94169238309923*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c203dfcf-532b-1141-b4da-631fa09caac2"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.926998470497721*^9},ExpressionUUID->"dab65fa9-1762-45cb-8a72-\
94e6c0234acb"],

Cell[TextData[{
 "Sea ahora la ",
 StyleBox["comprobaci\[OAcute]n num\[EAcute]rica de lo calculado \
anteriormente",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9252026656378627`*^9, 
  3.925202679096814*^9}},ExpressionUUID->"d495b54d-b583-4377-8227-\
f7371c559a74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listminimos", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "0"}], ",", 
    RowBox[{"j", "\[LessEqual]", "49"}], ",", 
    RowBox[{
     RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"-", "j"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lista", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
               "z"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ",
               "z"}]], "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Im", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
               "z"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ",
               "z"}]], "]"}], "^", "2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi", ",", "0.01"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"circ", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", "lista", "]"}], "*", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Min", "[", "lista", "]"}], "*", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"lista", ",", 
          RowBox[{"Min", "[", "lista", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"0.01", "*", 
       RowBox[{"(", 
        RowBox[{"pos", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listminimos", ",", 
       RowBox[{"ReIm", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}]]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}]], " ", 
           "z"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]]}]}], ")"}], "z"}]], 
        "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minimos", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"listminimos", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "Red", "}"}], ",", 
          RowBox[{
          "{", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(z\)]\)\>\"", "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.065", ",", "0.18"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regest", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ReIm", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
           "z"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
          "z"}]], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"-", "50"}], ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Yellow"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Regiones\>\"", ",", 
            "\"\<D(0,\!\(\*SubscriptBox[\(\[Sigma]\), \(z\)]\))\>\""}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.08"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circulos", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{"circ", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"circulos", ",", "regest", ",", "minimos", ",", " ", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Regiones de estabilidad IMEX-BDF2, m=0\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.924095258847664*^9, 3.924095283068441*^9}, {
  3.924095343323689*^9, 3.9240954418687863`*^9}, {3.924095473083381*^9, 
  3.924095480237357*^9}, {3.9240955167050095`*^9, 3.9240956384165745`*^9}, {
  3.924095888853309*^9, 3.924095891805335*^9}, {3.924415704951152*^9, 
  3.9244157076683826`*^9}, {3.924415933332897*^9, 3.924415968143607*^9}, {
  3.924420197462405*^9, 3.9244202117396803`*^9}, {3.924420278684141*^9, 
  3.924420285127431*^9}, {3.92442227751857*^9, 3.924422284694357*^9}, {
  3.925463770587207*^9, 3.925463803399645*^9}, {3.928989211749456*^9, 
  3.9289892313139644`*^9}, {3.9289892708796253`*^9, 3.928989351392084*^9}, {
  3.928989383258208*^9, 3.92898944503454*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"b3e3275e-6e52-4fbf-af0d-e5b5d5a4f906"],

Cell["\<\
Efectivamente, como hemos comprobado anal\[IAcute]ticamente, para z\
\[LessEqual]-11.34 se tiene que la distancia m\[IAcute]nima se alcanza para \
\[Theta]=Pi.\
\>", "Text",
 CellChangeTimes->{{3.92520536666857*^9, 3.925205431655077*^9}, 
   3.9255266545041513`*^9},ExpressionUUID->"a722aa13-9131-4492-82df-\
72f190379c3e"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.9252054364364567`*^9},ExpressionUUID->"c9fb2e36-7364-4f98-bd0d-\
05d5b3288cad"],

Cell["\<\
Comprobaremos que para m>0, las regiones de estabilidad azules se aproximan a \
las amarillas (que representan c\[IAcute]rculos de radio igual a la distancia \
m\[IAcute]nima de cada curva)\
\>", "Text",
 CellChangeTimes->{{3.9240957027422295`*^9, 3.924095722809935*^9}, {
  3.924415894350047*^9, 3.9244159184840355`*^9}, {3.924417122230313*^9, 
  3.924417125541545*^9}},ExpressionUUID->"30af843e-8bce-4b0a-9955-\
bc651b09e019"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], "*", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"2", "*", "\[Xi]"}], "+", 
    FractionBox["1", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "\[Xi]_", "]"}], ":=", 
   SuperscriptBox["\[Xi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "*", 
     SuperscriptBox["\[Xi]", 
      RowBox[{"1", "-", "m"}]]}], "-", 
    SuperscriptBox["\[Xi]", 
     RowBox[{"-", "m"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{"\[Xi]_", ",", "z_", ",", "\[Mu]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Xi]", "m"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", "[", "\[Xi]", "]"}], "-", 
        RowBox[{"z", "*", 
         RowBox[{"\[Sigma]", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"z", "*", "\[Mu]", "*", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listminimos", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "0"}], ",", 
    RowBox[{"j", "\[LessEqual]", "14"}], ",", 
    RowBox[{
     RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"-", "j"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lista", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"eq", "[", 
                   RowBox[{
                    SuperscriptBox["E", 
                    RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}],
                    "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"eq", "[", 
                   RowBox[{
                    SuperscriptBox["E", 
                    RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}],
                    "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi", ",", "0.01"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"circ", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", "lista", "]"}], "*", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Min", "[", "lista", "]"}], "*", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"lista", ",", 
          RowBox[{"Min", "[", "lista", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"0.01", "*", 
       RowBox[{"(", 
        RowBox[{"pos", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listminimos", ",", 
       RowBox[{"ReIm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"eq", "[", 
               RowBox[{
                SuperscriptBox["E", 
                 RowBox[{"I", "*", "\[Alpha]"}]], ",", "z", ",", "\[Mu]"}], 
               "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minimos", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"listminimos", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "Red", "}"}], ",", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(z\)]\)\>\"", "}"}]}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regest", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ReIm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"eq", "[", 
               RowBox[{
                SuperscriptBox["E", 
                 RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}], 
               "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"-", "15"}], ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Yellow"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Regiones\>\"", ",", 
          "\"\<D(0,\!\(\*SubscriptBox[\(\[Sigma]\), \(z\)]\))\>\""}], "}"}]}],
        "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circulos", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{"circ", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"circulos", ",", "regest", ",", "minimos", ",", " ", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Regiones de estabilidad IMEX-BDF2, m=1\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.924412185826913*^9, 3.924412192712892*^9}, {
   3.9244122298808317`*^9, 3.924412271394882*^9}, 3.924412497805335*^9, {
   3.9244128383041935`*^9, 3.924412849842703*^9}, 3.924413201856658*^9, 
   3.924415662063093*^9, {3.9244157962534475`*^9, 3.9244158157273817`*^9}, {
   3.924417140397964*^9, 3.9244172820868645`*^9}, {3.924417433129659*^9, 
   3.924417449144065*^9}, {3.9244174837489123`*^9, 3.924417492966213*^9}, {
   3.924417558095016*^9, 3.92441758993902*^9}, 3.9244176971207504`*^9, {
   3.924420251266448*^9, 3.924420268701679*^9}, {3.924420512746941*^9, 
   3.924420578923773*^9}, {3.924420657401211*^9, 3.9244206617008095`*^9}, {
   3.924420806575866*^9, 3.924420850229998*^9}, {3.9244209083358755`*^9, 
   3.924420984589263*^9}, {3.924421044432556*^9, 3.924421052552984*^9}, 
   3.924421117648614*^9, 3.92442115788006*^9, {3.924421196224057*^9, 
   3.924421210174732*^9}, {3.925463893615039*^9, 3.925463930368974*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"48bc8141-ac1b-4642-afed-6a3e9ed3a09f"],

Cell["\<\
Veamos, por ejemplo, para un z fijo (z=-1) que aumentando m, la \
regi\[OAcute]n de estabilidad (que se corresponde con el interior de los c\
\[IAcute]rculos dibujados) se aproxima cada vez m\[AAcute]s a la \
regi\[OAcute]n formada por el c\[IAcute]rculo de radio la distancia \
m\[IAcute]nima:\
\>", "Text",
 CellChangeTimes->{{3.924421392187519*^9, 3.9244214271134634`*^9}, {
  3.9244215374722214`*^9, 3.924421557674644*^9}, {3.92457952557226*^9, 
  3.924579527645378*^9}, {3.9245796862780247`*^9, 
  3.9245796993499517`*^9}},ExpressionUUID->"9067b6ae-1d1a-4501-9fab-\
6f221d0ffba0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], "*", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"2", "*", "\[Xi]"}], "+", 
    FractionBox["1", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "\[Xi]_", "]"}], ":=", 
   SuperscriptBox["\[Xi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "*", 
     SuperscriptBox["\[Xi]", 
      RowBox[{"1", "-", "m"}]]}], "-", 
    SuperscriptBox["\[Xi]", 
     RowBox[{"-", "m"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{"\[Xi]_", ",", "z_", ",", "\[Mu]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Xi]", "m"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", "[", "\[Xi]", "]"}], "-", 
        RowBox[{"z", "*", 
         RowBox[{"\[Sigma]", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"z", "*", "\[Mu]", "*", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"-", "1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regest", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"ReIm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eq", "[", 
             RowBox[{
              SuperscriptBox["E", 
               RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}], 
             "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"regest", ",", " ", 
    RowBox[{"PlotRange", "->", "All"}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Regi\[OAcute]n de estabilidad IMEX-BDF2, m=1, z=-1\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], "*", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"2", "*", "\[Xi]"}], "+", 
    FractionBox["1", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "\[Xi]_", "]"}], ":=", 
   SuperscriptBox["\[Xi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "*", 
     SuperscriptBox["\[Xi]", 
      RowBox[{"1", "-", "m"}]]}], "-", 
    SuperscriptBox["\[Xi]", 
     RowBox[{"-", "m"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{"\[Xi]_", ",", "z_", ",", "\[Mu]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Xi]", "m"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", "[", "\[Xi]", "]"}], "-", 
        RowBox[{"z", "*", 
         RowBox[{"\[Sigma]", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"z", "*", "\[Mu]", "*", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"-", "1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regest", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"ReIm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eq", "[", 
             RowBox[{
              SuperscriptBox["E", 
               RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}], 
             "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"regest", ",", " ", 
    RowBox[{"PlotRange", "->", "All"}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Regi\[OAcute]n de estabilidad IMEX-BDF2, m=3, z=-1\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], "*", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"2", "*", "\[Xi]"}], "+", 
    FractionBox["1", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "\[Xi]_", "]"}], ":=", 
   SuperscriptBox["\[Xi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "*", 
     SuperscriptBox["\[Xi]", 
      RowBox[{"1", "-", "m"}]]}], "-", 
    SuperscriptBox["\[Xi]", 
     RowBox[{"-", "m"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{"\[Xi]_", ",", "z_", ",", "\[Mu]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Xi]", "m"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", "[", "\[Xi]", "]"}], "-", 
        RowBox[{"z", "*", 
         RowBox[{"\[Sigma]", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"z", "*", "\[Mu]", "*", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "*"], "[", "\[Xi]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"-", "1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regest", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"ReIm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eq", "[", 
             RowBox[{
              SuperscriptBox["E", 
               RowBox[{"I", "*", "\[Theta]"}]], ",", "z", ",", "\[Mu]"}], 
             "]"}], "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"regest", ",", " ", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Regi\[OAcute]n de estabilidad IMEX-BDF2, m=20, z=-1\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.924421309096964*^9, 3.9244213150233145`*^9}, {
   3.924421432575681*^9, 3.924421487615627*^9}, {3.924421517941431*^9, 
   3.9244215241122036`*^9}, {3.92457957415189*^9, 3.924579588476787*^9}, {
   3.924579649208*^9, 3.924579661303356*^9}, 3.925464059689289*^9, {
   3.92546418226486*^9, 3.9254642647197633`*^9}, {3.925528014866807*^9, 
   3.925528030929883*^9}, {3.925528898234265*^9, 3.925528910999672*^9}, {
   3.925528941316635*^9, 3.9255289620521297`*^9}, {3.928989654804547*^9, 
   3.9289897183387685`*^9}, {3.9289897710758686`*^9, 3.9289898228036785`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"114b88ca-3a2c-4d33-9085-a03fb75d3aae"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
tvpQGEKFkoA/ldGmv8Bktz7p9ycqfFLsj/jnUAU3hfTtMkOJOaSndtnS7yf0
TUTufBRGhXmjNNJofCX0BLW1cYUT+/m+lrLDCphzXIgxJzCmZ8K29nLwumTt
G01g/+GBda2zZWBJGw9PI/DNGyf8v/GWgdIT55aPBJY86Fv0cWcpWAzFnNAh
sIOYnHu0Qglc1xHv7yf2u927uiHoczFkxMtVnCGwLi87RrK+EPo+nqU4E/w8
y9c+W7aUD1MvNJ/4Evw/VEofEZXLI/rs2SVbIj63tftL/U1zQMD4foAsET/N
s3P55YAscHLbfLY4iAreJUODdyozIL28/PFeQr+2O22nmphp4HF8r6gxoe+W
//7jC5NKhc07lO48JPRXnYvf616QCPP2Zif1iPx8Iq1x/7LnO3CJG1Ws86JC
i3Mpx8sjFhR/nOBEvSfyWR6kpE2NhgZ+2zk+It8Fd28zB/LCISyzJlWNqIet
D1npVbVeMJZVWQdE/RTWSa9a8fclZH8tPfXvORU62gvP/QndCvkFXgX+9lTo
O10dvaDnhZflhedPEPUpdSgv6rJGEO5LXl6jR9RvNoW5YeZOOAor8AydJOqb
XrEjXfh8LMp8fLwxkqj/1LF6q+G2b7ggUqexzpAKXDwZDTYmifi7fuuyq1cJ
vqFSor05aXg5W/mYxXkqVHQ62u/EXPybYVcTqkCF/RvFeqWd8zFkaZy7VI7o
xz3uro4qhSgo5HOxWIoKX0Qlf/TmI6ZP8Duo7KSC2GTRWaEr5WgvvEJXfzlx
T6wLD09Uq0APKV3l8L8UiNZ2nyg5XImq425VaVQKvHXN2WSyvgpn+W3VtYlz
TTtaLU2xvAY1nNgH9EsosN/1S6FHci0+fFvpI5pDzKuvMaD1qQ7D+Va+L0+i
wC7zXi9+q3q0E9JvtgulgOmNhuEY3kZct37ROtuGOCdPNLwdftaIEe8PGWy2
oMDkD/3OxulGPDF9elbtBgVevXkrndbYhN4Z/lk7z1KgwyTvza3gFhz5Z1WR
u4UCTg8/8n7dQMKErJUT39LJ4J/d7q7sTEK7eb+vp2PJsKgbY/lwmoSZj0Rc
M4LJkPvXYkd8ZQc2PRO+veklGYZcLhyGJ12Ye9rPmnSKDMfPRoaI5fdibtX+
d5G/5uF2Vt8Mn0gfdgV8zY7OnYfMxhwru3d9yH3l68yLb/NAFvfgeS7Zj2fW
n1fKezcP/A7y96Up/fhjMQFvEOeb8I6P01T7QZy8cvPDxIM56Js6228WM4j6
JckaQZpzEL2NfyykYRD9bWb5uCXmQND6Z6GBxBCKd6Usbh2chbVPjP12tA6h
QpU5GurOwlmXwGGrvSOYMqXbYC01AxtXGc7tPT+CyxS7BM+tmIHHZ6Peh9mO
4BXFzqPDPdPQp162q75iBEM6nsfY+E2D8uFDHYpmo5j0idIwRJmC7Ukrktv9
xtCCDvcckybhlOqOSZesMezYLmY68GYSJFaXVI12jKHh6nr3DdcnIa8h6uSY
yDiSTvWuJvFMQvS7JfWM5HHUDR6/u8pwAqiL/O+UCyaQzjOrbbgwBjnxirle
XRNY4HpHJfPPGBTr0Y4H/53AXzX0Lf1fxuCn9G21FuVJPNR3TD1dfQza/CXe
jWVNIjM+u/m8/yio8qXNqURMoebp3yZFO0ZgNuvCd/XCKXzv1vv9zeQwHAgf
nmR3TCHflYc3d+QMgxGFa0Fn8zR+8OG/+Vt7GIRN7M40uk5jkt7s7AHnIUiz
KBdfHzWNQhcb2qM1h6DQmfaRlj+NbXkbWqcEhyCCv0YuaW4ax4feWaxOHISp
/sPb2vVm0Fmf+vx12wBEBfwWPW41gxlqPAGVUQOgraCwpPZ2Bn+5ZziOWA5A
4itP/ZOZMzjvTT9Q/K8fnuqDct/aWVQ8/aFrSLQfBqTWSrmnzOKyKVbQuvZu
+C65+/rmslkUiOKfKLHoBrfejM8nW2aR5Zd3FlhdQA02bHZizmKn41H+b0Jd
YF6jYORydA5DPJJlz+t3wO+IOrcNGnN4ZHmchvsoCbo99/88ZTCHpMB1WmFP
SbBkV7Dt7VPieZPDdM2AdggLoZi5/ZjDxL33o6l1rXBhfeoLwdw5zLrs8m2V
YSs0i3jMnK6Yw62KL1y5JlqgLinyg1PXHBZnPcoOWtECNw7ORXmMzuE/IycP
Bf9mKAx+U36ETKzv+3CgaFczuP//78P1/u/34fA/07ICUA==
        "]], LineBox[CompressedData["
1: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
tm9L5f8Bu9tdlA==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$20702#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
   "\"Regi\[OAcute]n de estabilidad IMEX-BDF2, m=1, z=-1\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9245796246045823`*^9, 3.924579661852919*^9, 
  3.925464286363499*^9, 3.925528923476553*^9, 3.925528963324086*^9, 
  3.928229161635933*^9, 3.9289897285389156`*^9, 3.9289897807202196`*^9, 
  3.928989825018732*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"9f5709eb-a336-4a87-a063-0a08c571aa46"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
24k=
        "]], LineBox[CompressedData["
1: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
UOcIyw==
        "]], LineBox[CompressedData["
1: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
V+lQf+H/AAJYNus=
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$22279#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
   "\"Regi\[OAcute]n de estabilidad IMEX-BDF2, m=3, z=-1\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9245796246045823`*^9, 3.924579661852919*^9, 
  3.925464286363499*^9, 3.925528923476553*^9, 3.925528963324086*^9, 
  3.928229161635933*^9, 3.9289897285389156`*^9, 3.9289897807202196`*^9, 
  3.9289898253681345`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"1a7d1c01-74c0-4869-842a-44a3866ee33c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
AYlW4AE=
        "]], LineBox[CompressedData["
1:eJwUl3c81d8fx41SJNXXKkI0SGW0kPEWIlKSURlllCKKKCq0NOysUlmRiigz
Zb2N7GTvrGu7xt2Dxu/+/rqP+zifc+7nvO55vc7zJet07dRFHi4urt2rubj+
/8mr1p4V1zMDllpTe+oFJ5CS+mWUJT8HJr92nbGaHMVloZY1O+/PQ9ThoR+p
usMY/K99wvXjAuwIOljbda8fAxlmAs1vFyHmOi+rPbYLR1f70XoPkID+O0/c
O6gVHwSpaV+4S4L5o2MuLz7XYi+KFAd/IsG6XxHKwXZfsT25eZlWRYLB8yPv
xmyDkdp2y96/lARtpy8e5/4vD/j8zlvKviaB+dUtKfMJ1bBfFm+vP0+Ce2Qh
NQHRn3Dl/HWrN6tJcGmBFgMqnXBS90TGR5VFKBT4U2yr1gdvmka25EstwO8s
m7Ay8SGYJLwN4u6fgzcnGIZVF0YhTvPrUvglIsgY/qcXljoGivRnx1/Xz0Ct
psrAq8oJcJoVdi74NwXtRXmn/cunwKZ0JXxYNwmlhvfyaXEz8OSdxItHy2NQ
W3Z+lOcIETzzX/+Lqx0FWr39p4n6OTjzL9Azd3oIOseP6W6RWYCamBG9pfX9
QDmzWiHwyCKYHoqs+ba2C+rX3bi3RooEX5myKj3NLXCJmNP0IYAEW9OOzYQb
10CcVetRajUJNKWu2dfqFMJPg0UTr0US2C4rvzn12gyHDlvSO/6RwKUrhur1
vRDHFw7VMWmc5w+c+HbgRQ2a6pwgjP8kwVJc+q8csVZc73F8TUs4Ce7qz3v/
Mu7CjODaC6J7SaD2vWs72vXjsZsP6h/6LUKL/e2bu4yG0fW30coNNguw97mj
wEsuAv6s2HgqTGAefvS5nnpxeBzzQwOL/oYS4dyDrWtmnSYxyv+eSdnIDHz8
p6ix2XEafW6veXpxzTRE7nNfRVKfxfI/RzT7hCZB05xH4MIUEU27tOkaC2Mg
K06W/eo6jzI+G6TGs0ZB4XQd26tsAQ0lS3U7EoaA78mgsOPIIm65+il+Y3Yf
vO6rVzW/TML7v+g516I7oayludC8loR5YRa5Cxk/wf/6rqvR/GS0SOv4sGGp
GhJ3dVsnqZLxDmP+aKZpHqiZhfbu0iGjXvfl4ex/ofh9f6iplDIZfz3F4sET
31C7aeuh+yvI6N1yoDAysA6dLsUejy4nYZPsKuM/m9pwpY/B6iJ7ElZTd13S
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
O1DTDjuy61ljt1lw+pnBX2XjfkjVMMp1b2HC7TDhHa1mI+C+OdbNnZcJBkdX
TNL6CLDThHd8vzgDzjx3MT6pPwmqggOaFsvo4Guect0leBp8Se/Ng+upsBju
+l0idg7usn2kiu5QwH/L5UcHD1AAh2JOyIiSQVjpxwgnggo7Nm0gzojPwM6a
sLGcXzSY5u8Pv989CfvTUtXc2+kgY1MhoOI7DlKzO1Tu1jDgsMbpX+5zI5Bw
wjbV8SXXN9ertffHDkCAuLZKux4Lbu8wEN0h0wnaizF6Vb+5/vmaaR/B0wha
ZyrrXHawoZ1O2tSuhrC24ryn/EU2aCafnos6YARPjCieH26woaH8xpBWcQm+
vr1x+wR3bp21PI+xuAEbHKSll29hg+sRlrAWvQN1/hV9ci5mgdtbu6+HHQdw
1mT71e9qLKgVEeWfbxzBw2IL08PBTNiTP1zjbDqOpEhL26VcBiiLbfp4/P0k
ks6eTnQrosNdk+EY/d5pHG75b2NhOg1UJnZ81uufQ0HWqp0fPKjwausl55+W
FPy5JKihJU2BT9O8l78mU/F3yMsFJds5UM0VD7pdT8MRqTf7hYymgaITeFi9
h46PvS7ekhCdhJooL/6DlQxca/Xp+L1sAvx6VdgpHsnEEy32nRUKI5A5InI9
jJvTkcW9psqr++F5TITN648spCv6liTFtYPVi93nQlaycfWS/tHq1XVQd/dg
U4UGGzcfYAS99/4OgklmR0R02Zi1+pPtc7VY9BOyYNhtY+MTheZN7UuluCzd
dHB0mIUfn1Ilnic04aMfr2DDLRaeu7GVsiDdhXF3i/s+EJl4epPdGmmfQQwV
Sul+vI+JVW7kH7FGo2i3WKE0xu2ZDMMPWf0l46jUrJoj7kjHs+QR0RGBKVRb
rjHy9TgNC0gS++xUZnA85ItFjAgVeR7FOqeLknGyWy496zsZ0z1Kly16UPDV
rvRss6ezKMz0us33lYqZRxP8qrh8ZhMgZ1vcScM8LR7vHD0inticd/J0Hx2t
4xmX9IbGUL3Yf5kKMpC5atmn5XbDiBFSpWN3mVjpWfpur18vbs3geXNyI7ff
DpAaUaQNc3Ypn/CMZqGztMBBHZHfuKdxS3TCEAupSr30jq9f8VrEch/rNWyU
nVD/GOieBuviXm8t4PKeOCW/egdfBejPWnyaJrHQvPWSxnOXZlij4D6nns5C
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
        "]], LineBox[CompressedData["
1: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
76P2vP+Gy/7/GgeqzM3fhGiB7/8H99PBYw==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$24612#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
   "\"Regi\[OAcute]n de estabilidad IMEX-BDF2, m=20, z=-1\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9245796246045823`*^9, 3.924579661852919*^9, 
  3.925464286363499*^9, 3.925528923476553*^9, 3.925528963324086*^9, 
  3.928229161635933*^9, 3.9289897285389156`*^9, 3.9289897807202196`*^9, 
  3.928989825733661*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"8f1f8896-a417-46fb-a076-2a5edf813ce2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.924000264749269*^9, {3.924000904512061*^9, 3.924000908149431*^9}, {
   3.924006432876663*^9, 3.9240064339427924`*^9}, {3.924009671665354*^9, 
   3.92400967302262*^9}, 3.924017388518979*^9, {3.927258005173228*^9, 
   3.927258005610515*^9}},ExpressionUUID->"321cd34e-0e4d-4238-843b-\
305becdbd176"],

Cell[TextData[StyleBox["Consistencia del m\[EAcute]todo IMEX BDF2",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.927257967385008*^9, 3.927257987510258*^9}, {
  3.928225268026236*^9, 
  3.9282252769147196`*^9}},ExpressionUUID->"90a547cf-7db3-40df-ab29-\
b196231a6844"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Las", " ", "condiciones", " ", "son", " ", "las", " ", "salidas", " ", 
   "de", " ", "los", " ", "c\[OAcute]digos", " ", "inmediatamente", " ", 
   "anteriores"}], "*)"}]], "Input",
 CellChangeTimes->{{3.943002443687374*^9, 
  3.9430024636332664`*^9}},ExpressionUUID->"ecc474c6-4585-8a46-8107-\
e04cfe090904"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "tn_", "]"}], ":=", " ", 
   RowBox[{"Series", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
      RowBox[{"g", "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"tn", "-", 
          RowBox[{"m", " ", "h"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"daf7d5e8-c5ba-4f0b-868d-ba87ba855fd8"],

Cell[BoxData[
 RowBox[{"Simplify", "[", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", " ", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Series", "[", " ", 
            RowBox[{
             RowBox[{"z", "[", "tn", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"h", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'''"}], "[", "tn", "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"z", "''"}], "[", "tn", "]"}]}], "}"}]}], " ", " ", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "''"}], "[", "tn", "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"z", "'"}], "[", "tn", "]"}]}], "}"}]}], " ", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "tn", "]"}], "\[Rule]", 
           RowBox[{"z", "[", "tn", "]"}]}], "}"}]}], "  ", ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'''"}], "[", "tn", "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"z", "''"}], "[", "tn", "]"}]}], "}"}]}], " ", " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "tn", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"z", "'"}], "[", "tn", "]"}]}], "}"}]}], " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "tn", "]"}], "\[Rule]", 
     RowBox[{"z", "[", "tn", "]"}]}], "}"}]}], " ", "   ", "]"}]], "Input",
 CellChangeTimes->{{3.9278608455112257`*^9, 3.9278608643037324`*^9}, {
   3.927861043239636*^9, 3.927861123000036*^9}, {3.927861409758409*^9, 
   3.9278614099426675`*^9}, {3.927861505188477*^9, 3.927861575110406*^9}, {
   3.9278624221760263`*^9, 3.927862424467244*^9}, {3.927862470038956*^9, 
   3.927862497721166*^9}, 3.9278625723750315`*^9, {3.928385305287654*^9, 
   3.9283853346561823`*^9}, {3.9283854447825212`*^9, 3.928385445586804*^9}, {
   3.9285108164002194`*^9, 
   3.928510827079321*^9}},ExpressionUUID->"da97cdb3-f746-4770-8d0f-\
7e86bcbd228b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condicion1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
      RowBox[{"g", "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}], ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "-", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
       RowBox[{"g", "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["g", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"tn", ",", 
       RowBox[{"y", "[", "tn", "]"}], ",", 
       RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", "h"}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{"g", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{"g", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{"g", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox["h", "2"]}], "-", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["m", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"f", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "3"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "3"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"16", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"f", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"16", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"g", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "3"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["f", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"10", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"11", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"11", " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["f", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"10", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"g", "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "3"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"11", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"11", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
               RowBox[{"6", " ", 
                RowBox[{"g", "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"g", "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["f", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
               RowBox[{"3", " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"16", " ", 
                   RowBox[{
                    SuperscriptBox["g", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"tn", ",", 
                    RowBox[{"y", "[", "tn", "]"}], ",", 
                    RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                  RowBox[{"5", " ", 
                   RowBox[{
                    SuperscriptBox["g", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"tn", ",", 
                    RowBox[{"y", "[", "tn", "]"}], ",", 
                    RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["g", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"tn", ",", 
                    RowBox[{"y", "[", "tn", "]"}], ",", 
                    RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"7", " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{
              SuperscriptBox["y", "\[Prime]",
               MultilineFunction->None], "[", "tn", "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"7", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["f", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
      ")"}], " ", 
     SuperscriptBox["h", "3"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9283855399667263`*^9, 3.9283855469030285`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6cca849-bfb1-4fd0-8c54-68baf40e3394"],

Cell[BoxData[
 RowBox[{"Simplify", "[", "    ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", "     ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Series", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"z", "'"}], "[", "tn", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "0", ",", "3"}], "}"}]}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'''"}], "[", "tn", "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"z", "''"}], "[", "tn", "]"}]}], "}"}]}], " ", " ", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "''"}], "[", "tn", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"z", "'"}], "[", "tn", "]"}]}], "}"}]}], " ", "/.", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "tn", "]"}], "\[Rule]", "  ", 
         "condicion1"}]}], "   ", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "0", ",", "2"}], "}"}]}], "]"}], "  ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'''"}], "[", "tn", "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"z", "''"}], "[", "tn", "]"}]}], "}"}]}], " ", " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "tn", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"z", "'"}], "[", "tn", "]"}]}], "}"}]}], " ", "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "'"}], "[", "tn", "]"}], "\[Rule]", "  ", "condicion1"}]}], 
  "  ", "]"}]], "Input",
 CellChangeTimes->{{3.927859396812957*^9, 3.9278594226978188`*^9}, {
   3.9278602542237873`*^9, 3.927860284888383*^9}, {3.927860884881078*^9, 
   3.927860893008968*^9}, {3.927861137089646*^9, 3.9278612835109076`*^9}, {
   3.9278614311914444`*^9, 3.927861431407917*^9}, {3.927861563957237*^9, 
   3.927861564253234*^9}, {3.927861706753948*^9, 3.927861709071986*^9}, {
   3.927861780767138*^9, 3.9278617809825616`*^9}, 3.9278625505100517`*^9, {
   3.9278626215203047`*^9, 3.927862640279609*^9}, {3.928385288391211*^9, 
   3.9283852906156683`*^9}, {3.9283853552464895`*^9, 3.92838536669281*^9}, {
   3.9285109281391115`*^9, 
   3.928510936432249*^9}},ExpressionUUID->"ff864f1f-2a84-44a4-b398-\
e433e8c12c9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condicion2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["g", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}], ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "-", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}], " ", 
     "h"}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "3"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "3"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"11", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"11", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "3"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"10", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"7", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"10", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"10", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "3"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"7", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"10", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"g", "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               SuperscriptBox["f", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"11", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{"9", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "2", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}], " ", 
     SuperscriptBox["h", "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9283855783330355`*^9, 3.928385586097926*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b438ce9b-cc3c-4db9-9a86-0edb279c494b"],

Cell[BoxData[
 RowBox[{"Simplify", "[", "    ", 
  RowBox[{"Series", "[", "     ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Series", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "''"}], "[", "tn", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "0", ",", "3"}], "}"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'''"}], "[", "tn", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"z", "''"}], "[", "tn", "]"}]}], "}"}]}], " ", " ", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "tn", "]"}], "\[Rule]", "condicion2"}], 
       "}"}]}], " ", "/.", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "tn", "]"}], "\[Rule]", "  ", 
      "condicion1"}]}], "  ", ",", 
    RowBox[{"{", 
     RowBox[{"h", ",", "0", ",", "1"}], "}"}]}], "]"}], " ", "]"}]], "Input",
 CellChangeTimes->{
  3.927861319831919*^9, {3.927861440575605*^9, 3.927861440792019*^9}, {
   3.927861612611575*^9, 3.927861629014056*^9}, {3.9278617354635224`*^9, 
   3.927861738350958*^9}, {3.927861798094993*^9, 3.927861798327382*^9}, {
   3.927862656808915*^9, 3.927862664400035*^9}, {3.9283852834784603`*^9, 
   3.928385285369571*^9}, {3.9283853868231134`*^9, 3.928385404044874*^9}, {
   3.928510975325735*^9, 
   3.9285109834250326`*^9}},ExpressionUUID->"a3604a28-2519-4817-b1bd-\
b487c3fd1e65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condicion3", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["g", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"tn", ",", 
        RowBox[{"y", "[", "tn", "]"}], ",", 
        RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], "-", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "3"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "3"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"g", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"7", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"10", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"f", "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"7", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "3"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"10", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"6", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"7", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"g", "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "0", ",", "3"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"7", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{"8", " ", 
              RowBox[{"g", "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
             RowBox[{"3", " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{
               SuperscriptBox["f", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{
               SuperscriptBox["g", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"tn", ",", 
                RowBox[{"y", "[", "tn", "]"}], ",", 
                RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"7", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{"10", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{"3", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["g", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"tn", ",", 
                   RowBox[{"y", "[", "tn", "]"}], ",", 
                   RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "2"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"1", ",", "1", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}], " ", 
     "h"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92838542432296*^9, 3.928385425804963*^9}, {
  3.9283854884163756`*^9, 3.9283855105001636`*^9}, {3.9283856153571024`*^9, 
  3.9283856166748953`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8f4b2462-46f8-47e3-981f-3661265093fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", " ", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["3", "2"], 
         RowBox[{"y", "[", 
          RowBox[{"tn", "+", 
           RowBox[{"2", "h"}]}], " ", "]"}]}], "-", 
        RowBox[{"2", 
         RowBox[{"y", "[", 
          RowBox[{"tn", "+", "h"}], "]"}]}], "+", " ", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"y", "[", "tn", "]"}]}], " ", "-", " ", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"tn", "+", 
              RowBox[{"2", "h"}]}], ",", 
             RowBox[{"y", "[", 
              RowBox[{"tn", "+", 
               RowBox[{"2", "h"}]}], "]"}]}], "]"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"g", "[", 
             RowBox[{
              RowBox[{"tn", "+", "h"}], ",", 
              RowBox[{"y", "[", 
               RowBox[{"tn", "+", "h"}], "]"}], ",", 
              RowBox[{"y", "[", 
               RowBox[{"tn", "+", "h", "-", 
                RowBox[{"m", " ", "h"}]}], "]"}]}], "]"}]}], "-", 
           RowBox[{"g", "[", 
            RowBox[{"tn", ",", 
             RowBox[{"y", "[", "tn", "]"}], ",", 
             RowBox[{"y", "[", 
              RowBox[{"tn", "-", 
               RowBox[{"m", " ", "h"}]}], "]"}]}], "]"}]}], ")"}]}]}], ")"}], 
      "/", "h"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "'''"}], "[", "tn", "]"}], "\[Rule]", "condicion3"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "tn", "]"}], "\[Rule]", "condicion2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "tn", "]"}], "\[Rule]", "condicion1"}]}], 
    "   ", "}"}]}], "  ", "]"}]], "Input",
 CellChangeTimes->{{3.928384574624978*^9, 3.928384611739228*^9}, {
  3.928384722107022*^9, 3.928384730095043*^9}, {3.928384908541011*^9, 
  3.9283849139553156`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"58878728-2806-4af7-8dab-7430a3bd8cf0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"f", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", 
         RowBox[{"tn", ",", 
          RowBox[{"y", "[", "tn", "]"}], ",", 
          RowBox[{"y", "[", "tn", "]"}]}], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["g", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}], ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"tn", ",", 
           RowBox[{"y", "[", "tn", "]"}], ",", 
           RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}],
          "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}],
          "+", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"tn", ",", 
            RowBox[{"y", "[", "tn", "]"}], ",", 
            RowBox[{"y", "[", "tn", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{
              SuperscriptBox["f", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"tn", ",", 
               RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "2"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["g", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"tn", ",", 
                  RowBox[{"y", "[", "tn", "]"}], ",", 
                  RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["g", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "2", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"tn", ",", 
                 RowBox[{"y", "[", "tn", "]"}], ",", 
                 RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}],
          "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}], "+", 
            RowBox[{
             SuperscriptBox["g", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"tn", ",", 
              RowBox[{"y", "[", "tn", "]"}], ",", 
              RowBox[{"y", "[", "tn", "]"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"tn", ",", 
         RowBox[{"y", "[", "tn", "]"}], ",", 
         RowBox[{"y", "[", "tn", "]"}]}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox["h", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "h", "]"}], "3"],
    SeriesData[$CellContext`h, 0, {}, 2, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`h, 0, {
   Rational[1, 3] (-Derivative[2, 0][$CellContext`f][$CellContext`tn, 
        $CellContext`y[$CellContext`tn]] + $CellContext`f[$CellContext`tn, 
         $CellContext`y[$CellContext`tn]]^2 (-
        Derivative[0, 2][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] + 
       2 (Derivative[0, 0, 2][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]] + 
         2 Derivative[0, 1, 1][$CellContext`g][$CellContext`tn, 
            $CellContext`y[$CellContext`tn], 
            $CellContext`y[$CellContext`tn]] + 
         Derivative[0, 2, 0][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]])) + \
$CellContext`g[$CellContext`tn, 
         $CellContext`y[$CellContext`tn], 
         $CellContext`y[$CellContext`tn]]^2 (-
        Derivative[0, 2][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] + 
       2 (Derivative[0, 0, 2][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]] + 
         2 Derivative[0, 1, 1][$CellContext`g][$CellContext`tn, 
            $CellContext`y[$CellContext`tn], 
            $CellContext`y[$CellContext`tn]] + 
         Derivative[0, 2, 0][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]])) - (
      Derivative[0, 1][$CellContext`f][$CellContext`tn, 
        $CellContext`y[$CellContext`tn]] - 
      2 (Derivative[0, 0, 1][$CellContext`g][$CellContext`tn, 
         $CellContext`y[$CellContext`tn], 
         $CellContext`y[$CellContext`tn]] + 
       Derivative[0, 1, 0][$CellContext`g][$CellContext`tn, 
         $CellContext`y[$CellContext`tn], 
         $CellContext`y[$CellContext`tn]])) (
      Derivative[1, 0][$CellContext`f][$CellContext`tn, 
        $CellContext`y[$CellContext`tn]] + 
      Derivative[1, 0, 0][$CellContext`g][$CellContext`tn, 
        $CellContext`y[$CellContext`tn], 
        $CellContext`y[$CellContext`tn]]) + $CellContext`g[$CellContext`tn, 
        $CellContext`y[$CellContext`tn], 
        $CellContext`y[$CellContext`tn]] ((-2) 
        Derivative[1, 1][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] - (
        Derivative[0, 1][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] + 
        Derivative[0, 0, 1][$CellContext`g][$CellContext`tn, 
          $CellContext`y[$CellContext`tn], 
          $CellContext`y[$CellContext`tn]] + 
        Derivative[0, 1, 0][$CellContext`g][$CellContext`tn, 
          $CellContext`y[$CellContext`tn], 
          $CellContext`y[$CellContext`tn]]) (
        Derivative[0, 1][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] - 
        2 (Derivative[0, 0, 1][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]] + 
         Derivative[0, 1, 0][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]])) + 
       4 (Derivative[1, 0, 1][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]] + 
         Derivative[1, 1, 0][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]])) + \
$CellContext`f[$CellContext`tn, 
        $CellContext`y[$CellContext`tn]] ((-2) 
        Derivative[1, 1][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] - (
        Derivative[0, 1][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] + 
        Derivative[0, 0, 1][$CellContext`g][$CellContext`tn, 
          $CellContext`y[$CellContext`tn], 
          $CellContext`y[$CellContext`tn]] + 
        Derivative[0, 1, 0][$CellContext`g][$CellContext`tn, 
          $CellContext`y[$CellContext`tn], 
          $CellContext`y[$CellContext`tn]]) (
        Derivative[0, 1][$CellContext`f][$CellContext`tn, 
          $CellContext`y[$CellContext`tn]] - 
        2 (Derivative[0, 0, 1][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]] + 
         Derivative[0, 1, 0][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]])) + \
$CellContext`g[$CellContext`tn, 
          $CellContext`y[$CellContext`tn], 
          $CellContext`y[$CellContext`tn]] ((-2) 
          Derivative[0, 2][$CellContext`f][$CellContext`tn, 
            $CellContext`y[$CellContext`tn]] + 
         4 (Derivative[0, 0, 2][$CellContext`g][$CellContext`tn, 
             $CellContext`y[$CellContext`tn], 
             $CellContext`y[$CellContext`tn]] + 
           2 Derivative[0, 1, 1][$CellContext`g][$CellContext`tn, 
              $CellContext`y[$CellContext`tn], 
              $CellContext`y[$CellContext`tn]] + 
           Derivative[0, 2, 0][$CellContext`g][$CellContext`tn, 
             $CellContext`y[$CellContext`tn], 
             $CellContext`y[$CellContext`tn]])) + 
       4 (Derivative[1, 0, 1][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]] + 
         Derivative[1, 1, 0][$CellContext`g][$CellContext`tn, 
           $CellContext`y[$CellContext`tn], 
           $CellContext`y[$CellContext`tn]])) + 
     2 Derivative[2, 0, 0][$CellContext`g][$CellContext`tn, 
        $CellContext`y[$CellContext`tn], 
        $CellContext`y[$CellContext`tn]])}, 2, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.928384831302623*^9, 3.928384915260331*^9, 
  3.928385476298363*^9, 3.928385651893348*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"9ecc4cda-3d12-4763-b635-e3adcf7ea16c"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.927258012873309*^9},ExpressionUUID->"5eeada34-65b6-4ce2-b8cd-\
9f91cf3071aa"]
}, Open  ]]
},
WindowSize->{1012.5, 501.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.0 para Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"41fa0853-9b2a-6842-ab7d-22c7b5e2c568"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 326, 5, 45, "Subsubsection",ExpressionUUID->"1d365647-1d01-4930-9597-b2257568a4e5"],
Cell[909, 29, 1607, 53, 38, "Text",ExpressionUUID->"1958af64-ea1c-4923-bb82-df5c0c5ad20d"],
Cell[2519, 84, 2276, 79, 61, "Text",ExpressionUUID->"2ed11cab-2de8-4e70-a4fa-56f12a1c8dcb"],
Cell[CellGroupData[{
Cell[4820, 167, 2572, 69, 214, "Input",ExpressionUUID->"e5531ef9-7d34-4e4a-b989-b156ac774d74"],
Cell[7395, 238, 1380, 31, 57, "Output",ExpressionUUID->"e1b4dc22-ac37-4aac-bd62-9896fbc01468"]
}, Open  ]],
Cell[8790, 272, 749, 14, 58, "Text",ExpressionUUID->"787f2ab9-fa7c-4481-bb5e-34ea928e89d1"],
Cell[CellGroupData[{
Cell[9564, 290, 3061, 58, 67, "Input",ExpressionUUID->"8a730a65-c753-4b1a-9d91-2165fb6e5d2a"],
Cell[12628, 350, 759417, 12507, 341, "Output",ExpressionUUID->"23235bc9-1084-4f23-b4c3-e1f425900686"]
}, Open  ]],
Cell[CellGroupData[{
Cell[772082, 12862, 2140, 56, 113, "Input",ExpressionUUID->"8fd408a8-e2ba-4dde-b453-e7df7578a5c3"],
Cell[774225, 12920, 130832, 2136, 478, "Output",ExpressionUUID->"a6ca924a-4bc1-453c-bbdc-e9ffd7235709"]
}, Open  ]],
Cell[905072, 15059, 640, 12, 78, "Text",ExpressionUUID->"3643f623-844e-4b96-8a83-cc220daef750"],
Cell[CellGroupData[{
Cell[905737, 15075, 1307, 31, 110, "Input",ExpressionUUID->"89885c6c-214c-45b0-93be-6aa814d2282c"],
Cell[907047, 15108, 1267, 32, 49, "Output",ExpressionUUID->"026b398a-c9f1-45b4-a2da-ba22eeeb9420"],
Cell[908317, 15142, 1267, 32, 49, "Output",ExpressionUUID->"a8378301-eb33-4307-9ab4-4c3075ed5b52"]
}, Open  ]],
Cell[909599, 15177, 147, 3, 47, "Input",ExpressionUUID->"3b17caec-591f-4bb0-9422-14b3400b75d9"],
Cell[909749, 15182, 279, 7, 34, "Text",ExpressionUUID->"c690e8c0-52d7-4da7-b3c7-8577e4025991"],
Cell[CellGroupData[{
Cell[910053, 15193, 1036, 28, 67, "Input",ExpressionUUID->"1b182a61-5935-45c2-bc81-ca07d242591f"],
Cell[911092, 15223, 1387, 41, 54, "Output",ExpressionUUID->"c7893269-ba0c-429c-ab01-35b6519e6a83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[912516, 15269, 1638, 46, 66, "Input",ExpressionUUID->"3d0ae11e-9628-4b5c-8eed-4359af88a35a"],
Cell[914157, 15317, 17217, 297, 231, "Output",ExpressionUUID->"ccb2a3d0-7f8e-4ec7-b59c-c4592c0c03b0"]
}, Open  ]],
Cell[931389, 15617, 322, 7, 34, "Text",ExpressionUUID->"3d410aa2-1e0e-4568-824c-ec51dc516e68"],
Cell[931714, 15626, 200, 3, 34, "Text",ExpressionUUID->"3e397f46-0951-48d3-b258-80591681d3a9"],
Cell[CellGroupData[{
Cell[931939, 15633, 1807, 50, 104, "Input",ExpressionUUID->"2ecae28d-98f1-4878-a0d9-a2ddfbcbf93f"],
Cell[933749, 15685, 321, 9, 45, "Output",ExpressionUUID->"7f5f82bc-e065-4d0c-a395-fa433c3bb773"]
}, Open  ]],
Cell[934085, 15697, 147, 3, 47, "Input",ExpressionUUID->"10df29ea-fb0b-408e-b0ae-2a0631079f13"],
Cell[934235, 15702, 419, 10, 55, "Text",ExpressionUUID->"4c0d2227-94da-48fd-9bb5-0bf33a45f3b3"],
Cell[CellGroupData[{
Cell[934679, 15716, 370, 10, 43, "Input",ExpressionUUID->"97664952-e3b7-4717-93d3-8a9a0a17c9a3"],
Cell[935052, 15728, 1466, 43, 50, "Output",ExpressionUUID->"72f15535-7ee6-4747-b036-de6d6d1cd79a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936555, 15776, 2660, 70, 146, "Input",ExpressionUUID->"7755f618-d253-437e-8aa4-90adcdd636e3"],
Cell[939218, 15848, 239, 6, 31, "Output",ExpressionUUID->"a3316b8f-2d78-41a9-ba17-d6df1fc976d5"]
}, Open  ]],
Cell[939472, 15857, 147, 3, 47, "Input",ExpressionUUID->"53bb7985-a628-4abd-b010-f4747c04da44"],
Cell[939622, 15862, 851, 22, 55, "Text",ExpressionUUID->"85152e7b-3c65-496b-ae81-ac011a242252"],
Cell[CellGroupData[{
Cell[940498, 15888, 889, 23, 67, "Input",ExpressionUUID->"655f8536-6ade-4def-a1e4-02106e1b8d0f"],
Cell[941390, 15913, 8520, 268, 322, "Output",ExpressionUUID->"1a861f35-d6ee-44ae-adf0-cb81a68bc515"]
}, Open  ]],
Cell[949925, 16184, 394, 8, 56, "Text",ExpressionUUID->"8aa1bf3e-f292-4a4a-8e23-6dddec3602a1"],
Cell[CellGroupData[{
Cell[950344, 16196, 9363, 273, 388, "Input",ExpressionUUID->"27746453-b96a-4013-b5f6-1ef77960d54b"],
Cell[959710, 16471, 783, 24, 52, "Output",ExpressionUUID->"22dfc355-3557-4f7d-9ae0-4975d184b231"]
}, Open  ]],
Cell[960508, 16498, 1014, 29, 50, "Input",ExpressionUUID->"e658eec3-27a4-4f2f-bdd7-f7b1846ccb5e"],
Cell[961525, 16529, 360, 7, 56, "Text",ExpressionUUID->"f0a07063-903b-4efb-9532-f4ea9c1aecad"],
Cell[CellGroupData[{
Cell[961910, 16540, 341, 8, 43, "Input",ExpressionUUID->"21f2d493-afdd-414b-928f-bc7e02c087da"],
Cell[962254, 16550, 1071, 32, 54, "Output",ExpressionUUID->"c8603b0f-ae49-43c3-9bab-48fac983253a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[963362, 16587, 1478, 42, 112, "Input",ExpressionUUID->"1e05af13-96c1-4c56-8743-9a859ad3fbad"],
Cell[964843, 16631, 11411, 333, 598, "Output",ExpressionUUID->"f9bb6087-b7f8-42b5-908b-f043c11ecfb7"]
}, Open  ]],
Cell[976269, 16967, 2613, 73, 143, "Text",ExpressionUUID->"bc9f7e8a-34a5-4b70-8c67-45cf01130878"],
Cell[CellGroupData[{
Cell[978907, 17044, 440, 9, 43, "Input",ExpressionUUID->"c32b7ce7-f6a0-4ef0-965a-53344220ac70"],
Cell[979350, 17055, 202, 3, 32, "Output",ExpressionUUID->"3e84893d-f82a-46cd-89f9-b0d1adf3a389"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979589, 17063, 569, 13, 43, "Input",ExpressionUUID->"0a306bf5-9f48-46ec-abd9-3661393acfd0"],
Cell[980161, 17078, 283, 7, 46, "Output",ExpressionUUID->"2c1f4224-f361-4ddd-8e90-930cc8139ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980481, 17090, 1260, 34, 76, "Input",ExpressionUUID->"fa855055-a745-44c6-8185-2a4d9e55b36e"],
Cell[981744, 17126, 746, 24, 57, "Output",ExpressionUUID->"afca3e47-58d7-404b-b595-22e3ea30e341"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982527, 17155, 1186, 33, 76, "Input",ExpressionUUID->"310d6901-73fc-42b4-b8e6-b8183e3d9476"],
Cell[983716, 17190, 699, 23, 57, "Output",ExpressionUUID->"ff066516-f43a-4400-b5dc-5c23a7a9df94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[984452, 17218, 2409, 68, 159, "Input",ExpressionUUID->"83132e39-f12c-4d1a-8709-d517f905620e"],
Cell[986864, 17288, 10005, 288, 318, "Output",ExpressionUUID->"fc180faf-07f1-43ff-a284-dd01ccfd8fbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996906, 17581, 1024, 31, 76, "Input",ExpressionUUID->"06386f72-30e4-4851-87ba-4e9fcd9f0234"],
Cell[997933, 17614, 5306, 106, 229, "Output",ExpressionUUID->"52c74660-76e2-444c-9af4-d84fe7eb8453"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003276, 17725, 1002, 30, 76, "Input",ExpressionUUID->"70cb76a3-59d0-4cf7-93e8-69ad8d88ceb4"],
Cell[1004281, 17757, 3475, 75, 217, "Output",ExpressionUUID->"b7477cd8-d7f8-4019-bbaf-b3f41caa6cce"]
}, Open  ]],
Cell[1007771, 17835, 1395, 40, 71, "Text",ExpressionUUID->"bbc31287-051c-4c0c-9db6-33b3796f8c0f"],
Cell[CellGroupData[{
Cell[1009191, 17879, 1067, 30, 76, "Input",ExpressionUUID->"a84c6d17-830a-468e-b308-4cfebdea1cce"],
Cell[1010261, 17911, 326, 7, 50, "Output",ExpressionUUID->"7beccee4-4268-4757-b96e-a4c61007c159"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010624, 17923, 1235, 33, 76, "Input",ExpressionUUID->"c5dfece1-0b92-414f-bfdc-4d3dc876f09f"],
Cell[1011862, 17958, 762, 24, 57, "Output",ExpressionUUID->"28670a4e-793f-44bf-a64d-01e08e5ade4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012661, 17987, 1186, 33, 76, "Input",ExpressionUUID->"bf8a3b29-f631-45be-ad53-431bd4979471"],
Cell[1013850, 18022, 738, 24, 58, "Output",ExpressionUUID->"101bd36b-225f-466c-abe4-3e5b1d1d396e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014625, 18051, 2088, 62, 138, "Input",ExpressionUUID->"d4512511-af1e-4427-b531-21444216e504"],
Cell[1016716, 18115, 5887, 109, 166, "Output",ExpressionUUID->"337cfbde-6d83-49f5-9b79-e3944ec34e16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022640, 18229, 2348, 63, 198, "Input",ExpressionUUID->"55ce544b-c230-4a67-9663-af1ef960eb33"],
Cell[1024991, 18294, 25338, 490, 251, "Output",ExpressionUUID->"1c97dbb0-b4bd-4a72-a634-21ff449fab64"]
}, Open  ]],
Cell[1050344, 18787, 180, 3, 34, "Text",ExpressionUUID->"fd83aad7-8596-424f-8d9b-12c56149a436"],
Cell[CellGroupData[{
Cell[1050549, 18794, 436, 12, 58, "Input",ExpressionUUID->"f42e1ff3-9e0d-440a-ad39-81415470c52d"],
Cell[1050988, 18808, 199, 4, 32, "Output",ExpressionUUID->"462c7281-7a79-4d89-9bee-19b1bf4ff112"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1051224, 18817, 1767, 53, 133, "Input",ExpressionUUID->"d4a1670a-ac26-4632-98a7-4a21ed0c4c30"],
Cell[1052994, 18872, 242, 5, 46, "Output",ExpressionUUID->"9c469182-2fa8-43de-bd8a-b3f2c91a5083"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053273, 18882, 357, 10, 58, "Input",ExpressionUUID->"7e8382e8-0335-4652-98c8-efb66f0c3109"],
Cell[1053633, 18894, 183, 3, 32, "Output",ExpressionUUID->"06f4af3a-101a-4af9-a6fe-5ef9f6015518"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053853, 18902, 1013, 30, 76, "Input",ExpressionUUID->"e944542c-1a47-49de-b601-133d3b137443"],
Cell[1054869, 18934, 444, 14, 50, "Output",ExpressionUUID->"0a2937a5-4835-4e96-9331-6c7c44075a8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055350, 18953, 253, 6, 64, "Input",ExpressionUUID->"2e4790e0-dea6-4747-8b8c-664d6c342250"],
Cell[1055606, 18961, 183, 3, 32, "Output",ExpressionUUID->"01dd6008-61fc-4c85-9988-20e1cd5a3826"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055826, 18969, 1060, 30, 76, "Input",ExpressionUUID->"e650cd52-01d1-49a6-9398-317fe19f899d"],
Cell[1056889, 19001, 253, 6, 50, "Output",ExpressionUUID->"7333b6c2-2cef-4ba4-96ca-dfdf15acd71e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057179, 19012, 3364, 92, 323, "Input",ExpressionUUID->"95b90def-7aaf-4673-a4d4-b10c2282169d"],
Cell[1060546, 19106, 36003, 736, 242, "Output",ExpressionUUID->"d152800c-e7e9-4e42-ba80-ee578bb54f25"]
}, Open  ]],
Cell[1096564, 19845, 2878, 87, 110, "Text",ExpressionUUID->"79aa8354-e659-4559-bd65-9bf90ab643b1"],
Cell[1099445, 19934, 149, 3, 48, "Input",ExpressionUUID->"c9f477d1-416e-c746-8570-132a7b4da5ba"],
Cell[1099597, 19939, 252, 8, 34, "Text",ExpressionUUID->"14a12146-8b97-f145-a7ce-0a6f6e5bbc64"],
Cell[CellGroupData[{
Cell[1099874, 19951, 223, 4, 43, "Input",ExpressionUUID->"0ff28cd6-a5ac-7d44-b484-c9dfe86667f0"],
Cell[1100100, 19957, 148, 2, 32, "Output",ExpressionUUID->"b327e61c-9298-6848-a559-cce88c2785cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100285, 19964, 879, 26, 76, "Input",ExpressionUUID->"0c6e2873-d6d4-4949-b13f-21f5de37457b"],
Cell[1101167, 19992, 1491, 49, 61, "Output",ExpressionUUID->"cd4b16b1-4503-d144-94a8-333ee7419e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1102695, 20046, 337, 9, 58, "Input",ExpressionUUID->"37d92f1f-9cd6-0840-af97-539d6f46b452"],
Cell[1103035, 20057, 217, 5, 47, "Output",ExpressionUUID->"74b35abf-4b5f-0c44-a180-ab3408895381"]
}, Open  ]],
Cell[1103267, 20065, 184, 3, 34, "Text",ExpressionUUID->"86bade3d-3bb9-534e-bc81-c96a43c8a1dd"],
Cell[CellGroupData[{
Cell[1103476, 20072, 3893, 113, 294, "Input",ExpressionUUID->"1d270590-783f-e947-963c-b9660a9b6db2"],
Cell[1107372, 20187, 45134, 887, 242, "Output",ExpressionUUID->"d99eaa55-4b5a-0b43-842f-2f67c08c0c63"]
}, Open  ]],
Cell[1152521, 21077, 147, 3, 48, "Input",ExpressionUUID->"dcc8149c-060d-4c46-afb6-8ea94ed0953b"],
Cell[1152671, 21082, 272, 7, 34, "Text",ExpressionUUID->"688b7cbf-610f-4e00-84e6-abee95a3d803"],
Cell[1152946, 21091, 1481, 51, 205, "Input",ExpressionUUID->"88e0bfd9-1c42-4495-9f36-b9a77a8a8358"],
Cell[CellGroupData[{
Cell[1154452, 21146, 497, 13, 43, "Input",ExpressionUUID->"a196a4bf-3eea-4d53-bca8-b6d87ece63f3"],
Cell[1154952, 21161, 173, 2, 32, "Output",ExpressionUUID->"b9fbff56-dd50-4e58-a86f-95568b649907"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155162, 21168, 264, 5, 43, "Input",ExpressionUUID->"37f70627-dab7-429d-a82d-d9b88ee410a1"],
Cell[1155429, 21175, 191, 2, 32, "Output",ExpressionUUID->"be32bf6b-d129-458c-94aa-cfe87447bf3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155657, 21182, 315, 6, 43, "Input",ExpressionUUID->"6eb8a303-111c-4462-9c64-2a4de69543e4"],
Cell[1155975, 21190, 219, 3, 32, "Output",ExpressionUUID->"93a0a89c-6dfb-4958-bd61-732ab3a40be9"]
}, Open  ]],
Cell[1156209, 21196, 129, 3, 28, "Input",ExpressionUUID->"c1068efa-4bf9-45f7-99e2-f072ab37441a"],
Cell[1156341, 21201, 285, 8, 34, "Text",ExpressionUUID->"c35253d5-a736-48c7-8ba8-aba7236d41f4"],
Cell[CellGroupData[{
Cell[1156651, 21213, 1214, 36, 101, "Input",ExpressionUUID->"6171d836-e394-4cff-a425-6ca01dd83867"],
Cell[1157868, 21251, 406, 13, 50, "Output",ExpressionUUID->"ae4384de-30b9-4147-ab98-6babf2169a6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158311, 21269, 1207, 36, 101, "Input",ExpressionUUID->"5bb2fa3c-a0d5-4257-854d-45a25e335e3a"],
Cell[1159521, 21307, 249, 6, 50, "Output",ExpressionUUID->"0da1a833-9a57-4ba5-b24f-99fed65a737e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1159807, 21318, 529, 17, 58, "Input",ExpressionUUID->"dc467504-2fdf-4f6c-bb89-3fdb5d2577c1"],
Cell[1160339, 21337, 191, 3, 32, "Output",ExpressionUUID->"84ded5bc-6c54-4953-9f23-969e7c7a04db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160567, 21345, 640, 19, 58, "Input",ExpressionUUID->"5666d458-5be1-4fd9-9771-2585211d069b"],
Cell[1161210, 21366, 170, 3, 32, "Output",ExpressionUUID->"3ae3908f-34d7-4733-bc01-b0b84f52da46"]
}, Open  ]],
Cell[1161395, 21372, 147, 3, 48, "Input",ExpressionUUID->"682a9bed-9dfd-4d05-b84f-c71b0125aa01"],
Cell[1161545, 21377, 292, 8, 34, "Text",ExpressionUUID->"ddf864d3-d094-4189-ae77-05a9c0fa1dfb"],
Cell[CellGroupData[{
Cell[1161862, 21389, 654, 18, 59, "Input",ExpressionUUID->"00a5bced-95f3-4c73-84a7-add158c3026d"],
Cell[1162519, 21409, 2220, 65, 87, "Output",ExpressionUUID->"0d03028a-5e35-7e4c-9c57-cd5333168790"]
}, Open  ]],
Cell[1164754, 21477, 2540, 69, 102, "Input",ExpressionUUID->"af6ce7bc-4fa4-41d8-8c1e-e8ac9d50844a"],
Cell[CellGroupData[{
Cell[1167319, 21550, 1349, 35, 103, "Input",ExpressionUUID->"41035e70-4e55-4550-bf2a-bb96a978ebd9"],
Cell[1168671, 21587, 41936, 803, 231, "Output",ExpressionUUID->"94ea4f74-531a-9c4d-b40e-3bcc994ab747"]
}, Open  ]],
Cell[1210622, 22393, 642, 16, 59, "Input",ExpressionUUID->"ecf42a90-fa97-44ff-9fdd-ec1b5f72a971"],
Cell[1211267, 22411, 873, 25, 81, "Input",ExpressionUUID->"8eb7647c-f121-4cc6-a096-eefeb4c1c32e"],
Cell[CellGroupData[{
Cell[1212165, 22440, 598, 16, 43, "Input",ExpressionUUID->"6c4bdf2e-a983-4b4f-afca-09d93d7a9702"],
Cell[1212766, 22458, 350, 9, 46, "Output",ExpressionUUID->"c203dfcf-532b-1141-b4da-631fa09caac2"]
}, Open  ]],
Cell[1213131, 22470, 147, 3, 48, "Input",ExpressionUUID->"dab65fa9-1762-45cb-8a72-94e6c0234acb"],
Cell[1213281, 22475, 284, 9, 34, "Text",ExpressionUUID->"d495b54d-b583-4377-8227-f7371c559a74"],
Cell[1213568, 22486, 8227, 210, 650, "Input",ExpressionUUID->"b3e3275e-6e52-4fbf-af0d-e5b5d5a4f906"],
Cell[1221798, 22698, 333, 7, 56, "Text",ExpressionUUID->"a722aa13-9131-4492-82df-72f190379c3e"],
Cell[1222134, 22707, 149, 3, 48, "Input",ExpressionUUID->"c9fb2e36-7364-4f98-bd0d-05d5b3288cad"],
Cell[1222286, 22712, 438, 8, 56, "Text",ExpressionUUID->"30af843e-8bce-4b0a-9955-bc651b09e019"],
Cell[1222727, 22722, 8223, 217, 661, "Input",ExpressionUUID->"48bc8141-ac1b-4642-afed-6a3e9ed3a09f"],
Cell[1230953, 22941, 595, 11, 78, "Text",ExpressionUUID->"9067b6ae-1d1a-4501-9fab-6f221d0ffba0"],
Cell[CellGroupData[{
Cell[1231573, 22956, 8082, 240, 777, "Input",ExpressionUUID->"114b88ca-3a2c-4d33-9085-a03fb75d3aae"],
Cell[1239658, 23198, 33599, 568, 402, "Output",ExpressionUUID->"9f5709eb-a336-4a87-a063-0a08c571aa46"],
Cell[1273260, 23768, 49320, 827, 392, "Output",ExpressionUUID->"1a7d1c01-74c0-4869-842a-44a3866ee33c"],
Cell[1322583, 24597, 66715, 1111, 390, "Output",ExpressionUUID->"8f1f8896-a417-46fb-a076-2a5edf813ce2"]
}, Open  ]],
Cell[1389313, 25711, 450, 8, 105, "Input",ExpressionUUID->"321cd34e-0e4d-4238-843b-305becdbd176"],
Cell[1389766, 25721, 275, 5, 35, "Text",ExpressionUUID->"90a547cf-7db3-40df-ab29-b196231a6844"],
Cell[1390044, 25728, 354, 8, 28, "Input",ExpressionUUID->"ecc474c6-4585-8a46-8107-e04cfe090904"],
Cell[1390401, 25738, 633, 18, 43, "Input",ExpressionUUID->"daf7d5e8-c5ba-4f0b-868d-ba87ba855fd8"],
Cell[1391037, 25758, 2297, 60, 99, "Input",ExpressionUUID->"da97cdb3-f746-4770-8d0f-7e86bcbd228b"],
Cell[1393337, 25820, 47099, 1238, 779, "Input",ExpressionUUID->"b6cca849-bfb1-4fd0-8c54-68baf40e3394"],
Cell[1440439, 27060, 2329, 60, 99, "Input",ExpressionUUID->"ff864f1f-2a84-44a4-b398-e433e8c12c9f"],
Cell[1442771, 27122, 65601, 1819, 1091, "Input",ExpressionUUID->"b438ce9b-cc3c-4db9-9a86-0edb279c494b"],
Cell[1508375, 28943, 1450, 38, 64, "Input",ExpressionUUID->"a3604a28-2519-4817-b1bd-b487c3fd1e65"],
Cell[1509828, 28983, 72978, 2019, 1167, "Input",ExpressionUUID->"8f4b2462-46f8-47e3-981f-3661265093fb"],
Cell[CellGroupData[{
Cell[1582831, 31006, 2208, 62, 197, "Input",ExpressionUUID->"58878728-2806-4af7-8dab-7430a3bd8cf0"],
Cell[1585042, 31070, 22258, 579, 285, "Output",ExpressionUUID->"9ecc4cda-3d12-4763-b635-e3adcf7ea16c"]
}, Open  ]],
Cell[1607315, 31652, 147, 3, 48, "Input",ExpressionUUID->"5eeada34-65b6-4ce2-b8cd-9f91cf3071aa"]
}, Open  ]]
}
]
*)

